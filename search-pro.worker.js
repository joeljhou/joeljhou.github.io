const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,u=Array.from(n.keys());this.set=t,this._type=s,this._path=u.length>0?[{node:n,keys:u}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ut=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,o=u+s,i=new Uint8Array(o*u).fill(s+1);for(let r=0;r<u;++r)i[r]=r;for(let r=1;r<o;++r)i[r*u]=r;return R(e,t,s,n,i,1,u,""),n},R=(e,t,s,n,u,o,i,r)=>{const d=o*i;t:for(const l of e.keys())if(l===F){const a=u[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=o;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=u[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=u[f+y]+ +b,A=u[f+y+1]+1,w=u[p+y]+1,L=u[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,u,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,o]=M(n);for(const i of u.keys())if(i!==F&&i.startsWith(o)){const r=new Map;return r.set(i.slice(o.length),u.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ut(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,O(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);let u=n.get(F);return u===void 0&&n.set(F,u=s()),u}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},O=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const o of e.keys())if(o!==F&&t[n]===o[0]){const i=Math.min(s-n,o.length);let r=1;for(;r<i&&t[n+r]===o[r];)++r;const d=e.get(o);if(r===o.length)e=d;else{const l=new Map;l.set(o.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(o),e=l}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[u,o]=s.entries().next().value;q(n,u,o)}}},W=e=>{if(e.length===0)return;const[t,s]=M(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==F&&q(e.slice(0,-1),n,u)}},q=(e,t,s)=>{if(e.length===0)return;const[n,u]=M(e);n.set(u+t,s),n.delete(u)},M=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",$="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},N=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:o,match:i}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,i),P(n.terms,o)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:o,terms:i,match:r}=t.get(n);P(u.terms,i),s.set(n,{score:u.score+o,terms:u.terms,match:Object.assign(u.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,u,o)=>{const{k:i,b:r,d}=o;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/u)))},ft=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,o=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:o}},H=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const u=e._index.fetch(n,ht),o=u.get(t);o==null||o.get(s)==null?H(e,s,t,n):o.get(s)<=1?o.size<=1?u.delete(t):o.delete(s):o.set(s,o.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:$,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,u,o,i,r,d=new Map)=>{if(u==null)return d;for(const l of Object.keys(o)){const a=o[l],h=e._fieldIds[l],m=u.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=G(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:G(n.boost,g)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,u,o,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,u,o,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,u,o,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:u,searchOptions:o}=e._options,i={tokenize:n,processTerm:u,...o,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),u=[];for(const[o,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(o),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(o)),(s.filter==null||s.filter(a))&&u.push(a)}return u.sort(N),u},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:o,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=o,d.count+=1):n.set(r,{score:o,terms:i,count:1})}const u=[];for(const[o,{score:i,terms:r,count:d}]of n)u.push({suggestion:o,terms:r,score:i/d});return u.sort(N),u};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[o,i]of n)u[o]=Object.fromEntries(i);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:o,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=u,h._fieldLength=k(o),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let o=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&u.push(h),i+=h.length,a||(u.push(["mark",t]),i+=t.length,i>=100&&u.push(" …"))};let d=s.indexOf(n,o);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(o,d)),o=l,i>100)break;d=s.indexOf(n,o)}return i<100&&r(e.slice(o),!0),u},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(u=>{const{id:o,terms:i,score:r}=u,d=o.includes("@"),l=o.includes("#"),[a,h]=o.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>u.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(u.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in u)for(const c of u.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,u],[,o])=>"max"==="total"?xt(u,o):kt(u,o)).map(([u,{title:o,contents:i}])=>{if(!o){const r=it(t,u);r&&(o=r.h)}return{title:o,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":229,\"nextId\":229,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-8daa1a0e@0\",\"2\":\"v-8daa1a0e@1\",\"3\":\"v-184f4da6\",\"4\":\"v-184f4da6@0\",\"5\":\"v-184f4da6@1\",\"6\":\"v-2e3eac9e\",\"7\":\"v-2e3eac9e#幻灯片演示\",\"8\":\"v-2e3eac9e#标注幻灯片\",\"9\":\"v-2e3eac9e#标注幻灯片-1\",\"10\":\"v-2e3eac9e#markdown\",\"11\":\"v-2e3eac9e#markdown-1\",\"12\":\"v-2e3eac9e#这是一个-h3\",\"13\":\"v-2e3eac9e#markdown-2\",\"14\":\"v-2e3eac9e#markdown-3\",\"15\":\"v-2e3eac9e#markdown-4\",\"16\":\"v-2e3eac9e#markdown-5\",\"17\":\"v-2e3eac9e#布局\",\"18\":\"v-2e3eac9e#布局-1\",\"19\":\"v-2e3eac9e#布局-2\",\"20\":\"v-2e3eac9e#布局-3\",\"21\":\"v-2e3eac9e#背景\",\"22\":\"v-2e3eac9e#动画片段\",\"23\":\"v-2e3eac9e#动画片段-1\",\"24\":\"v-2e3eac9e#动画片段-2\",\"25\":\"v-2e3eac9e#动画-class\",\"26\":\"v-2e3eac9e#动画片段-3\",\"27\":\"v-2e3eac9e#动画-class-1\",\"28\":\"v-2e3eac9e#动画片段-4\",\"29\":\"v-2e3eac9e#多个动画片段\",\"30\":\"v-2e3eac9e#动画片段-5\",\"31\":\"v-2e3eac9e#顺序\",\"32\":\"v-2e3eac9e#渐变\",\"33\":\"v-2e3eac9e#渐变-1\",\"34\":\"v-2e3eac9e#渐变-2\",\"35\":\"v-2e3eac9e#过渡动画\",\"36\":\"v-2e3eac9e#功能\",\"37\":\"v-2e3eac9e#功能-1\",\"38\":\"v-2e3eac9e#代码\",\"39\":\"v-2e3eac9e#功能-2\",\"40\":\"v-2e3eac9e#预览模式\",\"41\":\"v-2e3eac9e#功能-3\",\"42\":\"v-2e3eac9e#全屏模式\",\"43\":\"v-2e3eac9e#功能-4\",\"44\":\"v-2e3eac9e#缩放\",\"45\":\"v-2e3eac9e#结束\",\"46\":\"v-2e3eac9e@0\",\"47\":\"v-2e3eac9e@1\",\"48\":\"v-27398e40\",\"49\":\"v-27398e40#java-23-in-development\",\"50\":\"v-27398e40#java-22-in-development\",\"51\":\"v-27398e40#java-21-ga-2023-09-19\",\"52\":\"v-27398e40#java-20-ga-2023-03-21\",\"53\":\"v-27398e40#java-19-ga-2022-09-20\",\"54\":\"v-27398e40#java-18-ga-2022-03-22\",\"55\":\"v-27398e40#java-17-ga-2021-09-14\",\"56\":\"v-27398e40#java-16-ga-2021-03-16\",\"57\":\"v-27398e40#java-15-ga-2020-09-15\",\"58\":\"v-27398e40#java-14-ga-2020-03-17\",\"59\":\"v-27398e40#java-13-ga-2019-09-17\",\"60\":\"v-27398e40#java-12-ga-2019-03-19\",\"61\":\"v-27398e40#java-11-ga-2018-09-25\",\"62\":\"v-27398e40#java-10-ga-2018-03-20\",\"63\":\"v-27398e40#java-9-ga-2017-09-21\",\"64\":\"v-27398e40#java-8-ga-2014-03-18\",\"65\":\"v-27398e40@0\",\"66\":\"v-27398e40@1\",\"67\":\"v-707294b4\",\"68\":\"v-707294b4#小目标清单\",\"69\":\"v-707294b4@0\",\"70\":\"v-707294b4@1\",\"71\":\"v-5c9b937a\",\"72\":\"v-5c9b937a#java9-弃用过程\",\"73\":\"v-5c9b937a#java11-彻底删除\",\"74\":\"v-5c9b937a#javafx-移除\",\"75\":\"v-5c9b937a@0\",\"76\":\"v-5c9b937a@1\",\"77\":\"v-50dcb4e8\",\"78\":\"v-50dcb4e8#语法\",\"79\":\"v-50dcb4e8#示例\",\"80\":\"v-50dcb4e8@0\",\"81\":\"v-50dcb4e8@1\",\"82\":\"v-52f7d68d\",\"83\":\"v-52f7d68d#传统的switch语句\",\"84\":\"v-52f7d68d#switch表达式增强\",\"85\":\"v-52f7d68d#箭头标签-case-l\",\"86\":\"v-52f7d68d#局部变量独立作用域\",\"87\":\"v-52f7d68d#switch表达式\",\"88\":\"v-52f7d68d#yield语句返回值\",\"89\":\"v-52f7d68d#发展脉络\",\"90\":\"v-52f7d68d@0\",\"91\":\"v-52f7d68d@1\",\"92\":\"v-7d8bf0ea\",\"93\":\"v-7d8bf0ea#原理\",\"94\":\"v-7d8bf0ea#框架中应用\",\"95\":\"v-7d8bf0ea@0\",\"96\":\"v-7d8bf0ea@1\",\"97\":\"v-524b1898\",\"98\":\"v-524b1898#快速上手\",\"99\":\"v-524b1898#编译时处理\",\"100\":\"v-524b1898#新增转义序列\",\"101\":\"v-524b1898#换行符-line-terminator\",\"102\":\"v-524b1898#单个空格-s\",\"103\":\"v-524b1898#文本块连接\",\"104\":\"v-524b1898#文本块新方法\",\"105\":\"v-524b1898@0\",\"106\":\"v-524b1898@1\",\"107\":\"v-7a4bacbc\",\"108\":\"v-7a4bacbc#instanceof-基础用法\",\"109\":\"v-7a4bacbc#instanceof-增强用法\",\"110\":\"v-7a4bacbc#常见用法建议\",\"111\":\"v-7a4bacbc#发展脉络\",\"112\":\"v-7a4bacbc@0\",\"113\":\"v-7a4bacbc@1\",\"114\":\"v-5f4e29a2\",\"115\":\"v-5f4e29a2#传统java-bean问题\",\"116\":\"v-5f4e29a2#引入record类\",\"117\":\"v-5f4e29a2#显示声明紧凑构造函数\",\"118\":\"v-5f4e29a2#发展脉络\",\"119\":\"v-5f4e29a2@0\",\"120\":\"v-5f4e29a2@1\",\"121\":\"v-35f73e58\",\"122\":\"v-35f73e58@0\",\"123\":\"v-35f73e58@1\",\"124\":\"v-6c714a26\",\"125\":\"v-6c714a26@0\",\"126\":\"v-6c714a26@1\",\"127\":\"v-295ab5bb\",\"128\":\"v-295ab5bb#jshell快速入门\",\"129\":\"v-295ab5bb#启动jshell\",\"130\":\"v-295ab5bb#帮助介绍-help-intro\",\"131\":\"v-295ab5bb#定义变量、方法、类\",\"132\":\"v-295ab5bb#执行表达式、调用方法\",\"133\":\"v-295ab5bb#查看定义的变量-vars\",\"134\":\"v-295ab5bb#查看定义的方法-methods\",\"135\":\"v-295ab5bb#查看定义的类-types\",\"136\":\"v-295ab5bb#列出输入源条目-list\",\"137\":\"v-295ab5bb#编辑源条目-edit\",\"138\":\"v-295ab5bb#删除源条目-drop\",\"139\":\"v-295ab5bb#保存文件-save\",\"140\":\"v-295ab5bb#打开文件-open\",\"141\":\"v-295ab5bb#重置jshell-reset\",\"142\":\"v-295ab5bb#查看引入的包-imports\",\"143\":\"v-295ab5bb#退出jshell-exit\",\"144\":\"v-295ab5bb#查看命令-help\",\"145\":\"v-295ab5bb@0\",\"146\":\"v-295ab5bb@1\",\"147\":\"v-890c045e\",\"148\":\"v-890c045e#java-9的集合创建方式\",\"149\":\"v-890c045e#java-8的集合创建方式\",\"150\":\"v-890c045e#传统的集合创建方式\",\"151\":\"v-890c045e#list-of-vs-arrays-aslist\",\"152\":\"v-890c045e@0\",\"153\":\"v-890c045e@1\",\"154\":\"v-3706649a\",\"155\":\"v-3706649a@0\",\"156\":\"v-3706649a@1\",\"157\":\"v-14e6315a\",\"158\":\"v-14e6315a@0\",\"159\":\"v-14e6315a@1\",\"160\":\"v-0bd3ebad\",\"161\":\"v-0bd3ebad@0\",\"162\":\"v-0bd3ebad@1\",\"163\":\"v-0bd3eb8e\",\"164\":\"v-0bd3eb8e@0\",\"165\":\"v-0bd3eb8e@1\",\"166\":\"v-0bd3ec0a\",\"167\":\"v-0bd3ec0a@0\",\"168\":\"v-0bd3ec0a@1\",\"169\":\"v-0bd3ec29\",\"170\":\"v-0bd3ec29@0\",\"171\":\"v-0bd3ec29@1\",\"172\":\"v-0bd3ec48\",\"173\":\"v-0bd3ec48@0\",\"174\":\"v-0bd3ec48@1\",\"175\":\"v-0bd3ec67\",\"176\":\"v-0bd3ec67@0\",\"177\":\"v-0bd3ec67@1\",\"178\":\"v-0061adb8\",\"179\":\"v-0061adb8@0\",\"180\":\"v-0061adb8@1\",\"181\":\"v-5bc93818\",\"182\":\"v-5bc93818@0\",\"183\":\"v-5bc93818@1\",\"184\":\"v-744d024e\",\"185\":\"v-744d024e@0\",\"186\":\"v-744d024e@1\",\"187\":\"v-e52c881c\",\"188\":\"v-e52c881c@0\",\"189\":\"v-e52c881c@1\",\"190\":\"v-154dc4c4\",\"191\":\"v-154dc4c4@0\",\"192\":\"v-154dc4c4@1\",\"193\":\"v-01560935\",\"194\":\"v-01560935@0\",\"195\":\"v-01560935@1\",\"196\":\"v-ee506df0\",\"197\":\"v-ee506df0@0\",\"198\":\"v-ee506df0@1\",\"199\":\"v-4d374892\",\"200\":\"v-4d374892@0\",\"201\":\"v-4d374892@1\",\"202\":\"v-5831b135\",\"203\":\"v-5831b135@0\",\"204\":\"v-5831b135@1\",\"205\":\"v-28a1d8bf\",\"206\":\"v-28a1d8bf@0\",\"207\":\"v-28a1d8bf@1\",\"208\":\"v-6a45d032\",\"209\":\"v-6a45d032@0\",\"210\":\"v-6a45d032@1\",\"211\":\"v-6a45d013\",\"212\":\"v-6a45d013@0\",\"213\":\"v-6a45d013@1\",\"214\":\"v-6a45d08f\",\"215\":\"v-6a45d08f@0\",\"216\":\"v-6a45d08f@1\",\"217\":\"v-6a45d0ae\",\"218\":\"v-6a45d0ae@0\",\"219\":\"v-6a45d0ae@1\",\"220\":\"v-6a45d0cd\",\"221\":\"v-6a45d0cd@0\",\"222\":\"v-6a45d0cd@1\",\"223\":\"v-6a45d0ec\",\"224\":\"v-6a45d0ec@0\",\"225\":\"v-6a45d0ec@1\",\"226\":\"v-f0e2b6da\",\"227\":\"v-f0e2b6da@0\",\"228\":\"v-f0e2b6da@1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[null,null,1],\"2\":[null,null,1],\"3\":[1,18],\"4\":[null,null,1],\"5\":[null,null,1],\"6\":[1,2],\"7\":[1,5],\"8\":[1,2],\"9\":[1,12],\"10\":[1,4],\"11\":[1,4],\"12\":[2,11],\"13\":[1,11],\"14\":[1,12],\"15\":[1,18],\"16\":[1,8],\"17\":[1,1],\"18\":[1,7],\"19\":[1,8],\"20\":[1],\"21\":[1,5],\"22\":[1,1],\"23\":[1,6],\"24\":[1],\"25\":[2,10],\"26\":[1],\"27\":[2,9],\"28\":[1],\"29\":[1,8],\"30\":[1],\"31\":[1,9],\"32\":[1,1],\"33\":[1,15],\"34\":[1],\"35\":[1,8],\"36\":[1,1],\"37\":[1],\"38\":[1,20],\"39\":[1],\"40\":[1,6],\"41\":[1],\"42\":[1,6],\"43\":[1],\"44\":[1,9],\"45\":[1,2],\"46\":[null,null,1],\"47\":[null,null,1],\"48\":[6,17],\"49\":[5],\"50\":[5],\"51\":[7,68],\"52\":[7,30],\"53\":[7,31],\"54\":[7,47],\"55\":[7,67],\"56\":[6,72],\"57\":[6,66],\"58\":[7,74],\"59\":[7,23],\"60\":[7,43],\"61\":[7,89],\"62\":[7,65],\"63\":[7,362],\"64\":[7],\"65\":[null,null,1],\"66\":[null,null,1],\"67\":[3,14],\"68\":[1,27],\"69\":[null,null,1],\"70\":[null,null,1],\"71\":[4,12],\"72\":[2,11],\"73\":[2,57],\"74\":[2,10],\"75\":[null,null,1],\"76\":[null,null,1],\"77\":[4,12],\"78\":[1,12],\"79\":[1,41],\"80\":[null,null,1],\"81\":[null,null,1],\"82\":[4,23],\"83\":[1,27],\"84\":[1],\"85\":[5,26],\"86\":[1,23],\"87\":[1,45],\"88\":[1,27],\"89\":[1,16],\"90\":[null,null,1],\"91\":[null,null,1],\"92\":[4,19],\"93\":[1],\"94\":[1,7],\"95\":[null,null,1],\"96\":[null,null,1],\"97\":[4,17],\"98\":[1,50],\"99\":[1,26],\"100\":[1,7],\"101\":[3,35],\"102\":[2,19],\"103\":[1,26],\"104\":[1,13],\"105\":[null,null,1],\"106\":[null,null,1],\"107\":[4,7],\"108\":[2,12],\"109\":[2,12],\"110\":[1,33],\"111\":[1,10],\"112\":[null,null,1],\"113\":[null,null,1],\"114\":[4,10],\"115\":[2,47],\"116\":[1,60],\"117\":[1,79],\"118\":[1,17],\"119\":[null,null,1],\"120\":[null,null,1],\"121\":[6],\"122\":[null,null,1],\"123\":[null,null,1],\"124\":[4],\"125\":[null,null,1],\"126\":[null,null,1],\"127\":[4,21],\"128\":[1],\"129\":[1,17],\"130\":[3,42],\"131\":[3,26],\"132\":[2,25],\"133\":[2,19],\"134\":[2,6],\"135\":[2,6],\"136\":[2,32],\"137\":[2,16],\"138\":[2,14],\"139\":[2,14],\"140\":[2,13],\"141\":[2,14],\"142\":[2,15],\"143\":[2,12],\"144\":[2,111],\"145\":[null,null,1],\"146\":[null,null,1],\"147\":[4,16],\"148\":[2,36],\"149\":[2,45],\"150\":[1,33],\"151\":[6,39],\"152\":[null,null,1],\"153\":[null,null,1],\"154\":[1],\"155\":[null,null,1],\"156\":[null,null,1],\"157\":[1],\"158\":[null,null,1],\"159\":[null,null,1],\"160\":[1],\"161\":[null,null,1],\"162\":[null,null,1],\"163\":[1],\"164\":[null,null,1],\"165\":[null,null,1],\"166\":[1],\"167\":[null,null,1],\"168\":[null,null,1],\"169\":[1],\"170\":[null,null,1],\"171\":[null,null,1],\"172\":[1],\"173\":[null,null,1],\"174\":[null,null,1],\"175\":[1],\"176\":[null,null,1],\"177\":[null,null,1],\"178\":[1],\"179\":[null,null,1],\"180\":[null,null,1],\"181\":[1],\"182\":[null,null,1],\"183\":[null,null,1],\"184\":[1],\"185\":[null,null,1],\"186\":[null,null,1],\"187\":[1],\"188\":[null,null,1],\"189\":[null,null,1],\"190\":[1],\"191\":[null,null,1],\"192\":[null,null,1],\"193\":[1],\"194\":[null,null,1],\"195\":[null,null,1],\"196\":[2],\"197\":[null,null,1],\"198\":[null,null,1],\"199\":[2],\"200\":[null,null,1],\"201\":[null,null,1],\"202\":[2],\"203\":[null,null,1],\"204\":[null,null,1],\"205\":[2],\"206\":[null,null,1],\"207\":[null,null,1],\"208\":[3],\"209\":[null,null,1],\"210\":[null,null,1],\"211\":[3],\"212\":[null,null,1],\"213\":[null,null,1],\"214\":[3],\"215\":[null,null,1],\"216\":[null,null,1],\"217\":[3],\"218\":[null,null,1],\"219\":[null,null,1],\"220\":[3],\"221\":[null,null,1],\"222\":[null,null,1],\"223\":[3],\"224\":[null,null,1],\"225\":[null,null,1],\"226\":[3],\"227\":[null,null,1],\"228\":[null,null,1]},\"averageFieldLength\":[2.2683734741732575,23.183064289731032,0.8744788905358576],\"storedFields\":{\"0\":{\"h\":\"最新发布\"},\"1\":{\"c\":[]},\"2\":{\"c\":[]},\"3\":{\"h\":\"个人简介\",\"t\":[\"我是一名会敲代码的程序员，对技术有着强烈的热爱，喜欢专研，分享，捣鼓各种有趣的新玩意。\",\"自认为自己并不是一个聪明的人，也不会有好运会落在我身上；\",\"做事情只做有把握的事情，前提就是要有把握，为之努力，不达目的不罢休。\",\"人特别轴，较真！\",\"我的标语：当坚持成为一种热爱，极致成为一种精神，那么成功就是一种必然。\"]},\"4\":{\"c\":[\"程序人生\"]},\"5\":{\"c\":[]},\"6\":{\"h\":\"幻灯片页\",\"t\":[\"@slidestart\"]},\"7\":{\"h\":\"幻灯片演示\",\"t\":[\"一个简单的幻灯片演示与各种小贴士。\",\"作者 Mr.Hope. 请滚动鼠标滚轮进入下一页\"]},\"8\":{\"h\":\"标注幻灯片\",\"t\":[\"👇\",\"--\"]},\"9\":{\"h\":\"标注幻灯片\",\"t\":[\"使用 --- 标注水平幻灯片\",\"在水平幻灯片中使用 -- 分割垂直幻灯片\",\"使用 <!-- .slide: ... --> 在幻灯片上添加属性\",\"使用 <!-- .element: ... --> 在前一个 HTML 元素上添加属性\"]},\"10\":{\"h\":\"Markdown\",\"t\":[\"你可以在幻灯片中使用 Markdown 语法的各种标记.\",\"--\"]},\"11\":{\"h\":\"Markdown\",\"t\":[\"你可以在幻灯片中使用 Markdown 语法的各种标记.\"]},\"12\":{\"h\":\"这是一个 H3\",\"t\":[\"标题默认会自动转换为大写。\",\"这是一个有着 粗体, 斜体, 删除线 文字并包含 一个链接 的段落，并且它会自动换行。所以你无需担心它的长度。\",\"--\"]},\"13\":{\"h\":\"Markdown\",\"t\":[\"你可以在幻灯片中使用 Markdown 语法的各种标记.\",\"列表默认为 inline-block\",\"项目\",\"项目\",\"项目\",\"项目 1\",\"项目 2\",\"项目 3\",\"--\"]},\"14\":{\"h\":\"Markdown\",\"t\":[\"你可以在幻灯片中使用 Markdown 语法的各种标记.\",\"在你启用 highlight 插件后，代码块会自动高亮。\",\"const a = 1; \",\"--\"]},\"15\":{\"h\":\"Markdown\",\"t\":[\"你可以在幻灯片中使用 Markdown 语法的各种标记.\",\"在你启用 math 插件后，你也可以使用 TEX 格式使用数学公式。\",\"$$ J(\\\\theta_0,\\\\theta_1) = \\\\sum_{i=0} $$\",\"--\"]},\"16\":{\"h\":\"Markdown\",\"t\":[\"你可以在幻灯片中使用 Markdown 语法的各种标记.\",\"⚠请注意: 表格和分割线，以及所有不在 Markdown 标准语法中的内容均不受支持。\"]},\"17\":{\"h\":\"布局\",\"t\":[\"--\"]},\"18\":{\"h\":\"布局\",\"t\":[\"👆 r-fit-text class 会让文字在不超出幻灯片范围的情况下尽可能大。\",\"--\"]},\"19\":{\"h\":\"布局\",\"t\":[\"Logo\",\"👆 r-stretch class 帮助你控制注入图片或视频的大小，使它们填充满幻灯片垂直方向上的剩余空间。\",\"--\"]},\"20\":{\"h\":\"布局\"},\"21\":{\"h\":\"背景\",\"t\":[\"你可以通过向特定幻灯片添加 data-background 属性自定义幻灯片背景.\"]},\"22\":{\"h\":\"动画片段\",\"t\":[\"--\"]},\"23\":{\"h\":\"动画片段\",\"t\":[\"动画片段用于高亮或显隐幻灯片中的元素。\",\"你需要在元素上添加 fragment 和动画 class。\",\"--\"]},\"24\":{\"h\":\"动画片段\"},\"25\":{\"h\":\"动画 class\",\"t\":[\"fade-in\",\"fade-out\",\"fade-up\",\"fade-down\",\"fade-left\",\"fade-right\",\"fade-in-then-out\",\"fade-in-then-semi-out\",\"--\"]},\"26\":{\"h\":\"动画片段\"},\"27\":{\"h\":\"动画 class\",\"t\":[\"grow\",\"shrink\",\"strike\",\"highlight-red\",\"highlight-green\",\"highlight-blue\",\"highlight-current-red\",\"highlight-current-green\",\"highlight-current-blue\",\"--\"]},\"28\":{\"h\":\"动画片段\"},\"29\":{\"h\":\"多个动画片段\",\"t\":[\"你可以按照顺序包裹一个 HTML 元素使其拥有多个动画片段 渐入 > 变红 > 渐出 \",\"--\"]},\"30\":{\"h\":\"动画片段\"},\"31\":{\"h\":\"顺序\",\"t\":[\"你可以使用 data-fragment-index 属性改变元素的动画顺序。\",\"不同元素可以有相同的动画顺序。\",\"最后显示\",\"第二个显示\",\"第一个显示\",\"第二个显示\"]},\"32\":{\"h\":\"渐变\",\"t\":[\"--\"]},\"33\":{\"h\":\"渐变\",\"t\":[\"Transition 可以通过配置中的 transition 选项全局设置，也可以通过在特定幻灯片添加 data-transition 属性局部设置.\",\"可能的值:\",\"none\",\"fade\",\"slide\",\"convex\",\"concave\",\"zoom\",\"--\"]},\"34\":{\"h\":\"渐变\"},\"35\":{\"h\":\"过渡动画\",\"t\":[\"你可以在相邻的幻灯片上添加 data-auto-animate 使相同的 HTML 元素产生过渡动画效果。\"]},\"36\":{\"h\":\"功能\",\"t\":[\"--\"]},\"37\":{\"h\":\"功能\"},\"38\":{\"h\":\"代码\",\"t\":[\"通过启用 highlight 插件，你可以对代码块进行高亮。\",\"你可以使用 [a-b|c-d] 语法来分布高亮特定行。\",\"let a = 1; let b = 2; let c = (x) => 1 + 2 + x; c(3); \",\"--\"]},\"39\":{\"h\":\"功能\"},\"40\":{\"h\":\"预览模式\",\"t\":[\"按下 Esc 或 O 即可在幻灯片获得焦点时进入预览模式。\",\"--\"]},\"41\":{\"h\":\"功能\"},\"42\":{\"h\":\"全屏模式\",\"t\":[\"按下 F 或 F11 即可在幻灯片获得焦点时进入全屏模式。\",\"--\"]},\"43\":{\"h\":\"功能\"},\"44\":{\"h\":\"缩放\",\"t\":[\"按下 alt (Linux 上使用 ctrl) 的同时点击幻灯片的任何元素，即可以向此元素进行放大。\",\"再次点击即可缩小。\"]},\"45\":{\"h\":\"结束\",\"t\":[\"@slideend\"]},\"46\":{\"c\":[]},\"47\":{\"c\":[]},\"48\":{\"h\":\"Java 9-21：前沿特性解读系列（持续连载）\",\"t\":[\"为了帮助大家跟上最新的技术潮流，计划启动一个专栏，重点分享Java领域的前沿知识。 这个专栏将详细解读从Java 9 - 最新版本的各种有趣的新特性。 会持续不断地发布相关内容，希望大家能够关注并收藏起来，跟随我们一起深入了解Java的最新进展！\",\"详细了解Java Enhancement Proposals（JEPs）及其最新动态， 🚀 访问官方网站：OpenJDK JEPs\"]},\"49\":{\"h\":\"Java 23(in development)\"},\"50\":{\"h\":\"Java 22(in development)\"},\"51\":{\"h\":\"Java 21(GA 2023/09/19)\",\"t\":[\"430: String Templates (Preview)\",\"431: Sequenced Collections\",\"439: Generational ZGC\",\"440: Record Patterns\",\"441: Pattern Matching for switch\",\"442: Foreign Function & Memory API (Third Preview)\",\"443: Unnamed Patterns and Variables (Preview)\",\"444: Virtual Threads\",\"445: Unnamed Classes and Instance Main Methods (Preview)\",\"446: Scoped Values (Preview)\",\"448: Vector API (Sixth Incubator)\",\"449: Deprecate the Windows 32-bit x86 Port for Removal\",\"451: Prepare to Disallow the Dynamic Loading of Agents\",\"452: Key Encapsulation Mechanism API\",\"453: Structured Concurrency (Preview)\"]},\"52\":{\"h\":\"Java 20(GA 2023/03/21)\",\"t\":[\"429: Scoped Values (Incubator)\",\"432: Record Patterns (Second Preview)\",\"433: Pattern Matching for switch (Fourth Preview)\",\"434: Foreign Function & Memory API (Second Preview)\",\"436: Virtual Threads (Second Preview)\",\"437: Structured Concurrency (Second Incubator)\",\"438: Vector API (Fifth Incubator)\"]},\"53\":{\"h\":\"Java 19(GA 2022/09/20)\",\"t\":[\"405: Record Patterns (Preview)\",\"422: Linux/RISC-V Port\",\"424: Foreign Function & Memory API (Preview)\",\"425: Virtual Threads (Preview)\",\"426: Vector API (Fourth Incubator)\",\"427: Pattern Matching for switch (Third Preview)\",\"428: Structured Concurrency (Incubator)\"]},\"54\":{\"h\":\"Java 18(GA 2022/03/22)\",\"t\":[\"400: UTF-8 by Default\",\"408: Simple Web Server\",\"413: Code Snippets in Java API Documentation\",\"416: Reimplement Core Reflection with Method Handles\",\"417: Vector API (Third Incubator)\",\"418: Internet-Address Resolution SPI\",\"419: Foreign Function & Memory API (Second Incubator)\",\"420: Pattern Matching for switch (Second Preview)\",\"421: Deprecate Finalization for Removal\"]},\"55\":{\"h\":\"Java 17(GA 2021/09/14)\",\"t\":[\"306: Restore Always-Strict Floating-Point Semantics\",\"356: Enhanced Pseudo-Random Number Generators\",\"382: New macOS Rendering Pipeline\",\"391: macOS/AArch64 Port\",\"398: Deprecate the Applet API for Removal\",\"403: Strongly Encapsulate JDK Internals\",\"406: Pattern Matching for switch (Preview)\",\"407: Remove RMI Activation\",\"409: Sealed Classes\",\"410: Remove the Experimental AOT and JIT Compiler\",\"411: Deprecate the Security Manager for Removal\",\"412: Foreign Function & Memory API (Incubator)\",\"414: Vector API (Second Incubator)\",\"415: Context-Specific Deserialization Filters\"]},\"56\":{\"h\":\"Java 16(GA 2021/03/16)\",\"t\":[\"338: Vector API (Incubator)\",\"347: Enable C++14 Language Features\",\"357: Migrate from Mercurial to Git\",\"369: Migrate to GitHub\",\"376: ZGC: Concurrent Thread-Stack Processing\",\"380: Unix-Domain Socket Channels\",\"386: Alpine Linux Port\",\"387: Elastic Metaspace\",\"388: Windows/AArch64 Port\",\"389: Foreign Linker API (Incubator)\",\"390: Warnings for Value-Based Classes\",\"392: Packaging Tool\",\"393: Foreign-Memory Access API (Third Incubator)\",\"394: Pattern Matching for instanceof\",\"395: Records\",\"396: Strongly Encapsulate JDK Internals by Default\",\"397: Sealed Classes (Second Preview)\"]},\"57\":{\"h\":\"Java 15(GA 2020/09/15)\",\"t\":[\"339: Edwards-Curve Digital Signature Algorithm (EdDSA)\",\"360: Sealed Classes (Preview)\",\"371: Hidden Classes\",\"372: Remove the Nashorn JavaScript Engine\",\"373: Reimplement the Legacy DatagramSocket API\",\"374: Disable and Deprecate Biased Locking\",\"375: Pattern Matching for instanceof (Second Preview)\",\"377: ZGC: A Scalable Low-Latency Garbage Collector\",\"378: Text Blocks\",\"379: Shenandoah: A Low-Pause-Time Garbage Collector\",\"381: Remove the Solaris and SPARC Ports\",\"383: Foreign-Memory Access API (Second Incubator)\",\"384: Records (Second Preview)\",\"385: Deprecate RMI Activation for Removal\"]},\"58\":{\"h\":\"Java 14(GA 2020/03/17)\",\"t\":[\"305: Pattern Matching for instanceof (Preview)\",\"343: Packaging Tool (Incubator)\",\"345: NUMA-Aware Memory Allocation for G1\",\"349: JFR Event Streaming\",\"352: Non-Volatile Mapped Byte Buffers\",\"358: Helpful NullPointerExceptions\",\"359: Records (Preview)\",\"361: Switch Expressions (Standard)\",\"362: Deprecate the Solaris and SPARC Ports\",\"363: Remove the Concurrent Mark Sweep (CMS) Garbage Collector\",\"364: ZGC on macOS\",\"365: ZGC on Windows\",\"366: Deprecate the ParallelScavenge + SerialOld GC Combination\",\"367: Remove the Pack200 Tools and API\",\"368: Text Blocks (Second Preview)\",\"370: Foreign-Memory Access API (Incubator)\"]},\"59\":{\"h\":\"Java 13(GA 2019/09/17)\",\"t\":[\"350: Dynamic CDS Archives\",\"351: ZGC: Uncommit Unused Memory\",\"353: Reimplement the Legacy Socket API\",\"354: Switch Expressions (Preview)\",\"355: Text Blocks (Preview)\"]},\"60\":{\"h\":\"Java 12(GA 2019/03/19)\",\"t\":[\"189: Shenandoah: A Low-Pause-Time Garbage Collector (Experimental)\",\"230: Microbenchmark Suite\",\"325: Switch Expressions (Preview)\",\"334: JVM Constants API\",\"340: One AArch64 Port, Not Two\",\"341: Default CDS Archives\",\"344: Abortable Mixed Collections for G1\",\"346: Promptly Return Unused Committed Memory from G1\"]},\"61\":{\"h\":\"Java 11(GA 2018/09/25)\",\"t\":[\"181: Nest-Based Access Control\",\"309: Dynamic Class-File Constants\",\"315: Improve Aarch64 Intrinsics\",\"318: Epsilon: A No-Op Garbage Collector\",\"320: Remove the Java EE and CORBA Modules\",\"321: HTTP Client (Standard)\",\"323: Local-Variable Syntax for Lambda Parameters\",\"324: Key Agreement with Curve25519 and Curve448\",\"327: Unicode 10\",\"328: Flight Recorder\",\"329: ChaCha20 and Poly1305 Cryptographic Algorithms\",\"330: Launch Single-File Source-Code Programs\",\"331: Low-Overhead Heap Profiling\",\"332: Transport Layer Security (TLS) 1.3\",\"333: ZGC: A Scalable Low-Latency Garbage Collector(Experimental)\",\"335: Deprecate the Nashorn JavaScript Engine\",\"336: Deprecate the Pack200 Tools and API\"]},\"62\":{\"h\":\"Java 10(GA 2018/03/20)\",\"t\":[\"286: Local-Variable Type Inference\",\"296: Consolidate the JDK Forest into a Single Repository\",\"304: Garbage-Collector Interface\",\"307: Parallel Full GC for G1\",\"310: Application Class-Data Sharing\",\"312: Thread-Local Handshakes\",\"313: Remove the Native-Header Generation Tool (javah)\",\"314: Additional Unicode Language-Tag Extensions\",\"316: Heap Allocation on Alternative Memory Devices\",\"317: Experimental Java-Based JIT Compiler\",\"319: Root Certificates\",\"322: Time-Based Release Versioning\"]},\"63\":{\"h\":\"Java 9(GA 2017/09/21)\",\"t\":[\"102: Process API Updates\",\"110: HTTP 2 Client\",\"143: Improve Contended Locking\",\"158: Unified JVM Logging\",\"165: Compiler Control\",\"193: Variable Handles\",\"197: Segmented Code Cache\",\"199: Smart Java Compilation, Phase Two\",\"200: The Modular JDK\",\"201: Modular Source Code\",\"211: Elide Deprecation Warnings on Import Statements\",\"212: Resolve Lint and Doclint Warnings\",\"213: Milling Project Coin\",\"214: Remove GC Combinations Deprecated in JDK 8\",\"215: Tiered Attribution for javac\",\"216: Process Import Statements Correctly\",\"217: Annotations Pipeline 2.0\",\"219: Datagram Transport Layer Security (DTLS)\",\"220: Modular Run-Time Images\",\"221: Simplified Doclet API\",\"222: jshell: The Java Shell (Read-Eval-Print Loop)\",\"223: New Version-String Scheme\",\"224: HTML5 Javadoc\",\"225: Javadoc Search\",\"226: UTF-8 Property Files\",\"227: Unicode 7.0\",\"228: Add More Diagnostic Commands\",\"229: Create PKCS12 Keystores by Default\",\"231: Remove Launch-Time JRE Version Selection\",\"232: Improve Secure Application Performance\",\"233: Generate Run-Time Compiler Tests Automatically\",\"235: Test Class-File Attributes Generated by javac\",\"236: Parser API for Nashorn\",\"237: Linux/AArch64 Port\",\"238: Multi-Release JAR Files\",\"240: Remove the JVM TI hprof Agent\",\"241: Remove the jhat Tool\",\"243: Java-Level JVM Compiler Interface\",\"244: TLS Application-Layer Protocol Negotiation Extension\",\"245: Validate JVM Command-Line Flag Arguments\",\"246: Leverage CPU Instructions for GHASH and RSA\",\"247: Compile for Older Platform Versions\",\"248: Make G1 the Default Garbage Collector\",\"249: OCSP Stapling for TLS\",\"250: Store Interned Strings in CDS Archives\",\"251: Multi-Resolution Images\",\"252: Use CLDR Locale Data by Default\",\"253: Prepare JavaFX UI Controls & CSS APIs for Modularization\",\"254: Compact Strings\",\"255: Merge Selected Xerces 2.11.0 Updates into JAXP\",\"256: BeanInfo Annotations\",\"257: Update JavaFX/Media to Newer Version of GStreamer\",\"258: HarfBuzz Font-Layout Engine\",\"259: Stack-Walking API\",\"260: Encapsulate Most Internal APIs\",\"261: Module System\",\"262: TIFF Image I/O\",\"263: HiDPI Graphics on Windows and Linux\",\"264: Platform Logging API and Service\",\"265: Marlin Graphics Renderer\",\"266: More Concurrency Updates\",\"267: Unicode 8.0\",\"268: XML Catalogs\",\"269: Convenience Factory Methods for Collections\",\"270: Reserved Stack Areas for Critical Sections\",\"271: Unified GC Logging\",\"272: Platform-Specific Desktop Features\",\"273: DRBG-Based SecureRandom Implementations\",\"274: Enhanced Method Handles\",\"275: Modular Java Application Packaging\",\"276: Dynamic Linking of Language-Defined Object Models\",\"277: Enhanced Deprecation\",\"278: Additional Tests for Humongous Objects in G1\",\"279: Improve Test-Failure Troubleshooting\",\"280: Indify String Concatenation\",\"281: HotSpot C++ Unit-Test Framework\",\"282: jlink: The Java Linker\",\"283: Enable GTK 3 on Linux\",\"284: New HotSpot Build System\",\"285: Spin-Wait Hints\",\"287: SHA-3 Hash Algorithms\",\"288: Disable SHA-1 Certificates\",\"289: Deprecate the Applet API\",\"290: Filter Incoming Serialization Data\",\"291: Deprecate the Concurrent Mark Sweep (CMS) Garbage Collector\",\"292: Implement Selected ECMAScript 6 Features in Nashorn\",\"294: Linux/s390x Port\",\"295: Ahead-of-Time Compilation\",\"297: Unified arm32/arm64 Port\",\"298: Remove Demos and Samples\",\"299: Reorganize Documentation\"]},\"64\":{\"h\":\"Java 8(GA 2014/03/18)\"},\"65\":{\"c\":[\"Java\"]},\"66\":{\"c\":[]},\"67\":{\"h\":\"2023 年终回顾, 2024年的展望和计划\",\"t\":[\"今天是元旦，一年过去了，感觉没有收获什么，每天还是患得患失。 没钱的危机感让我情绪崩溃，盲目的努力使我整个人精神状态不是很好。\",\"打算做一些改变，先从定一个小目标开始吧！ 说出自己想做的事情，然后一件件去实现它，到明年这个时候回头去看，再次总结，我憧憬那时候的自己。\"]},\"68\":{\"h\":\"小目标清单\",\"t\":[\"博客网站改进\",\"完善博客网站功能\",\"填充网站内容\",\"购买域名\",\"搭建图床\",\"技术学习\",\"学习极客时间的课程\",\"坚持下来\",\"在 Notion 中整理学习笔记\",\"职业发展\",\"寻找一份新的工作\",\"提高薪水待遇\",\"目标：进入大厂\",\"硬件知识学习\",\"学习硬件知识\",\"实战做一个稚晖君的机器人\",\"考虑购买一个3D打印机\",\"最后，写下我的标语：当坚持成为一种热爱，极致成为一种精神，那么成功就是一种必然。\",\"加油，加油，加油！！！\"]},\"69\":{\"c\":[\"程序人生\"]},\"70\":{\"c\":[]},\"71\":{\"h\":\"Java 11 新特性 ：移除JavaEE和CORBA模块以及JavaFX\",\"t\":[\"Java 11 中移除了 Java EE 和 CORBA 模块，同时 JavaFX 也被剥离，但仍可作为独立模块使用。\"]},\"72\":{\"h\":\"Java9 弃用过程\",\"t\":[\"在 Java 9 中，Java EE 和 CORBA 模块被标记为 @Deprecated，为开发者提供了适应期。\"]},\"73\":{\"h\":\"Java11 彻底删除\",\"t\":[\"Java 11 完全删除了以下九个模块：\",\"java.xml.ws（包含 JAX-WS、SAAJ 和 Web 服务元数据）\",\"java.xml.bind（JAXB）\",\"java.activation(JAF)\",\"java.xml.ws.annotation（常用注解）\",\"java.corba（CORBA）\",\"java.transaction(JTA)\",\"java.se.ee (以上6个模块的聚合模块)\",\"jdk.xml.ws (JAX-WS 工具)\",\"jdk.xml.bind (JAXB 工具)\",\"删除后的影响：\",\"源代码从 OpenJDK 存储库中删除\",\"在 JDK 运行时映像中将不包含这些类\",\"相关工具将不再可用: \",\"wsgen and wsimport (来自 jdk.xml.ws)\",\"schemagen and xjc (来自 jdk.xml.bind)\",\"idlj, orbd, servertool, and tnamesrv (来自 java.corba)\",\"JNDI CosNaming 提供者 (来自 java.corba) 将不再可用\",\"不再有命令行标志能够启用它们，就像 JDK 9 上的 --add-modules 一样\"]},\"74\":{\"h\":\"JavaFX 移除\",\"t\":[\"JavaFX 在 Java 11 中被移除，但仍可以作为独立模块使用。\\n开发者需要额外的配置和依赖，以在项目中继续使用 JavaFX 技术。\"]},\"75\":{\"c\":[\"Java\"]},\"76\":{\"c\":[]},\"77\":{\"h\":\"Java 10 新特性：局部变量类型推断\",\"t\":[\"Java 10 引入了一项新的语言特性，即局部变量类型推断（Local-Variable Type Inference）， 它允许在局部变量声明时，根据变量的初始值，推断出变量的数据类型。\"]},\"78\":{\"h\":\"语法\",\"t\":[\"局部变量类型推断的语法非常简单，只需要将 var 关键字作为局部变量的类型即可。\",\"var list = new ArrayList<String>(); // 自动推断 ArrayList<String> var stream = list.stream(); // 自动推断 Stream<String> \"]},\"79\":{\"h\":\"示例\",\"t\":[\"相比传统的方式和 Java 7 的钻石操作符（Diamond Operator），Java 10 的局部变量类型推断使得代码更加精炼：\",\"// 传统方式（等号两边都需要） List<String> list = new ArrayList<String>(); // Java7的钻石操作符（Diamond Operator）（只需要在左边申明类型即可） List<String> list = new ArrayList<>(); // Java10的局部变量类型推断（类型在等号右边决定） var list = new ArrayList<String>(); \",\"在使用 var 进行局部变量类型推断时，需要注意以下几点：\",\"必须在声明的同时进行初始化\",\"仅限于局部变量，不能用于定义成员变量、方法参数和返回类型\",\"每次只能定义一个变量，不能复合声明多个变量\",\"通过使用局部变量类型推断，我们能够在不失代码可读性的前提下，减少了冗余的类型声明，使得代码更加简洁清晰。\\n这一特性尤其在Lambda表达式、集合初始化等场景下表现突出，提高了代码的书写效率。\\n在实际项目中，合理运用局部变量类型推断，将有助于代码的维护和阅读。\"]},\"80\":{\"c\":[\"Java\"]},\"81\":{\"c\":[]},\"82\":{\"h\":\"Java 14 新特性：switch表达式增强\",\"t\":[\"Java 14（JEP 361）引入了 switch 表达式的新特性，其中包括了 \\\"箭头标签（case ... ->）\\\" 和 yield 语句的增强， 同时支持 Lambda 语法，使得代码更加灵活、简洁，并为未来的模式匹配（JEP 305）特性做好了准备。\"]},\"83\":{\"h\":\"传统的switch语句\",\"t\":[\"首先，让我们回顾一下传统的switch语句，它们在处理多个条件时可能显得有些冗长：\",\"switch (day) { case MONDAY: case FRIDAY: case SUNDAY: System.out.println(6); break; case TUESDAY: System.out.println(7); break; case THURSDAY: case SATURDAY: System.out.println(8); break; case WEDNESDAY: System.out.println(9); break; } \",\"传统的 switch 语句存在以下问题：\",\"设计受到C和C++等低级语言的影响，且默认支持fall through语义\",\"过多的break语句使得代码显得冗长\"]},\"84\":{\"h\":\"switch表达式增强\"},\"85\":{\"h\":\"箭头标签（case L ->）\",\"t\":[\"引入了一种新的开关标签\\\"case L ->\\\"，用于表示只有一个分支的情况\",\"允许每种情况下有多个常量，用逗号分隔\",\"标签右侧的代码仅限于表达式、块或抛出异常throw语句\",\"switch (day) { case MONDAY, FRIDAY, SUNDAY -> System.out.println(6); case TUESDAY -> System.out.println(7); case THURSDAY, SATURDAY -> System.out.println(8); case WEDNESDAY -> System.out.println(9); } \"]},\"86\":{\"h\":\"局部变量独立作用域\",\"t\":[\"在 Java 14 中，允许在每个分支中声明局部变量，避免块中变量命名冲突和误用。\",\"switch (day) { case MONDAY: case TUESDAY: int temp = ... // 'temp'的作用域延续到 } break; case WEDNESDAY: case THURSDAY: int temp2 = ... // 不能将此变量命名为'temp' break; default: int temp3 = ... // 不能将此变量命名为'temp' } \"]},\"87\":{\"h\":\"switch表达式\",\"t\":[\"Switch 表达式被引入，允许将 switch 语句用作表达式，通过 Lambda 语法，根据输入值返回不同的结果。\",\"// 根据输入值`k`的不同，返回不同的字符串，并通过`System.out.println`打印结果 static void howMany(int k) { System.out.println( switch (k) { case 1 -> \\\"one\\\"; case 2 -> \\\"two\\\"; default -> \\\"many\\\"; } ); } \",\"Switch表达式的常见形式如下：\",\"T result = switch (arg) { case L1 -> e1; case L2 -> e2; default -> e3; }; \",\"Switch表达式是多态表达式（poly expression）。\",\"多态性是指在编译时不确定具体类型，而在运行时确定类型的特性。\"]},\"88\":{\"h\":\"yield语句返回值\",\"t\":[\"允许在switch表达式中使用yield语句，而不是使用break语句，用于返回一个值，结束switch表达式的执行。\",\"int numLetters = switch (day) { case MONDAY, FRIDAY, SUNDAY -> 6; case TUESDAY -> 7; case THURSDAY, SATURDAY -> 8; case WEDNESDAY -> { int temp = performComplexCalculation(); // 在这里进行一些复杂的计算 yield temp; // 使用yield返回计算结果 } }; \"]},\"89\":{\"h\":\"发展脉络\",\"t\":[\"追溯JEP 361的发展历程：从JDK 12预览版(JEP 325)到JDK 13预览版(JEP 354)，\\n虽然部分功能在早期版本中已经出现，但建议在 JDK 14 及以后的版本中使用，以获得更好的稳定性和支持。\"]},\"90\":{\"c\":[\"Java\"]},\"91\":{\"c\":[]},\"92\":{\"h\":\"Java 15 新特性：隐藏类\",\"t\":[\"Hidden Classes 提供了一种在运行时生成类的机制，在编译时未知，并且不能直接在源代码中引用， 需要通过反射间接使用它们，隐藏类是为框架设计的，具有以下特性：\",\"动态生成内部类：隐藏类天生为框架设计，在运行时生成内部类\",\"反射访问限制：隐藏类只能通过反射访问，不能直接被其他类的字节码访问\",\"独立加载和卸载：隐藏类可以独立于其他类加载和卸载\",\"框架扩展性：适用于需要在运行时生成类的框架，提高语言的灵活性和效率\"]},\"93\":{\"h\":\"原理\"},\"94\":{\"h\":\"框架中应用\",\"t\":[\"https://bugs.openjdk.org/browse/JDK-8220607\"]},\"95\":{\"c\":[\"Java\"]},\"96\":{\"c\":[]},\"97\":{\"h\":\"Java 15 新特性：文本块\",\"t\":[\"Java 15（JEP 378）引入了文本块（Text Blocks）这一新特性，旨在简化多行字符串的表示，提高代码可读性，并减少在字符串中使用转义符的需求。 文本块通过引入三个双引号的胖分隔符（\\\"\\\"\\\"）来实现，同时支持转义序列，为开发人员提供更直观、易读的字符串处理方式。\"]},\"98\":{\"h\":\"快速上手\",\"t\":[\"HTML示例\",\"// 使用“一维”字符串文字 String html = \\\"<html>\\\\n\\\" + \\\" <body>\\\\n\\\" + \\\" <p>Hello, world</p>\\\\n\\\" + \\\" </body>\\\\n\\\" + \\\"</html>\\\\n\\\"; // 使用“二维”文本块 String html = \\\"\\\"\\\" <html> <body> <p>Hello, world</p> </body> </html> \\\"\\\"\\\"; \",\"SQL示例\",\"// 使用“一维”字符串文字 String query = \\\"SELECT \\\\\\\"EMP_ID\\\\\\\", \\\\\\\"LAST_NAME\\\\\\\" FROM \\\\\\\"EMPLOYEE_TB\\\\\\\"\\\\n\\\" + \\\"WHERE \\\\\\\"CITY\\\\\\\" = 'INDIANAPOLIS'\\\\n\\\" + \\\"ORDER BY \\\\\\\"EMP_ID\\\\\\\", \\\\\\\"LAST_NAME\\\\\\\";\\\\n\\\"; // 使用“二维”文本块 String query = \\\"\\\"\\\" SELECT \\\"EMP_ID\\\", \\\"LAST_NAME\\\" FROM \\\"EMPLOYEE_TB\\\" WHERE \\\"CITY\\\" = 'INDIANAPOLIS' ORDER BY \\\"EMP_ID\\\", \\\"LAST_NAME\\\"; \\\"\\\"\\\"; \",\"Polyglot语言示例\",\"// 使用“一维”字符串文字 ScriptEngine engine = new ScriptEngineManager().getEngineByName(\\\"js\\\"); Object obj = engine.eval(\\\"function hello() {\\\\n\\\" + \\\" print('\\\\\\\"Hello, world\\\\\\\"');\\\\n\\\" + \\\"}\\\\n\\\" + \\\"\\\\n\\\" + \\\"hello();\\\\n\\\"); // 使用“二维”文本块 ScriptEngine engine = new ScriptEngineManager().getEngineByName(\\\"js\\\"); Object obj = engine.eval(\\\"function hello() {\\\\n\\\" + \\\" print('\\\\\\\"Hello, world\\\\\\\"');\\\\n\\\" + \\\"}\\\\n\\\" + \\\"\\\\n\\\" + \\\"hello();\\\\n\\\"); \"]},\"99\":{\"h\":\"编译时处理\",\"t\":[\"文本块是String类型的常量表达式，类似于字符串字面量。然而，与字符串字面值不同，文本块的内容在编译时经历三个步骤的处理：行终止符的规范化、附带白色空间的移除和解释转义序列：\",\"转换内容的行终止符 \",\"行终止符从CR（\\\\u000D）和CRLF（\\\\u000D\\\\u000A）规范化为LF（\\\\u000A）\",\"删除内容周围附带的白色空间（用于匹配Java源代码的缩进）\",\"解释内容中的转义序列，执行解释作为最后一步开发人员可以编写转义序列，如\\\\n，而不会被前面的步骤修改或删除\",\"处理后的内容以CONSTANT_String_info形式记录在类文件的常量池中，运行时，文本块被计算为String的实例。\"]},\"100\":{\"h\":\"新增转义序列\",\"t\":[\"为了更精细地控制换行符和空格的处理，引入了两个新的转义序列：\\\\ <line-terminator> 和 \\\\s。\"]},\"101\":{\"h\":\"换行符 \\\\ <line-terminator>\",\"t\":[\"// 传统方式 String literal = \\\"Lorem ipsum dolor sit amet, consectetur adipiscing \\\" + \\\"elit, sed do eiusmod tempor incididunt ut labore \\\" + \\\"et dolore magna aliqua.\\\"; // 使用 \\\\ <line-terminator\\\\> String text = \\\"\\\"\\\" Lorem ipsum dolor sit amet, consectetur adipiscing \\\\ elit, sed do eiusmod tempor incididunt ut labore \\\\ et dolore magna aliqua.\\\\ \\\"\\\"\\\"; \",\"Tips： 因为字符和传统字符串不允许嵌入换行符，所以\\\\ <line-terminator> 转义序列只适用于文本块\"]},\"102\":{\"h\":\"单个空格 \\\\s\",\"t\":[\"新的 \\\\s 转义序列简单地转换为单个空格（\\\\u0020）\",\"// 使用 \\\\s 保持固定长度 String colors = \\\"\\\"\\\" red \\\\s green\\\\s blue \\\\s \\\"\\\"\\\"; \",\"转义序列直到去除无意义的空格后才被解释，\\\\s 可以作为栅栏，防止尾随空格被去除。 在这个示例中，每行末尾使用 \\\\s 可以确保每行长度恰好为六个字符。\"]},\"103\":{\"h\":\"文本块连接\",\"t\":[\"文本块的连接是引入的一个方便的特性，使得字符串的拼接变得更加简洁。 在连接时，相邻的文本块将自动合并，无需显式使用加号连接操作符。\",\"// 字符串和文本块连接 String code = \\\"public void print(Object o) {\\\" + \\\"\\\"\\\" System.out.println(Objects.toString(o)); } \\\"\\\"\\\"; // 相邻的文本块将自动合并，无需显式使用加号连接操作符 String code = \\\"\\\"\\\" public void print(Object o) { \\\"\\\"\\\" \\\"\\\"\\\" System.out.println(Objects.toString(o)); } \\\"\\\"\\\"; \",\"在上述示例中，两个相邻的文本块会自动连接，形成一个整体的字符串。 这种自动连接的特性让代码更加清晰，减少了冗余的拼接操作。\"]},\"104\":{\"h\":\"文本块新方法\",\"t\":[\"文本块引入了一些新方法，以便更方便地处理多行字符串：\",\"String::stripIndent()：去除多行字符串的前导空格\",\"String::translateEscapes()：转义多行字符串中的转义字符\",\"String::formatted()：在文本块中使用占位符进行值替换\",\"String::lines()：：将多行字符串拆分为行的流，方便逐行处理。\"]},\"105\":{\"c\":[\"Java\"]},\"106\":{\"c\":[]},\"107\":{\"h\":\"Java 16 新特性：instanceof增强\",\"t\":[\"Java 16 引入了 instanceof 的增强语法，用于更简便地判断对象是否是某个类的实例并进行相应的局部类型转换。\"]},\"108\":{\"h\":\"instanceof 基础用法\",\"t\":[\"if (obj instanceof String) { String someString = (String) obj; // 强制类型转换 // ... } \",\"这个强制转换通常是在 instanceof 检查之后 的第一件事，所以为什么不围绕它优化一下语法呢？\"]},\"109\":{\"h\":\"instanceof 增强用法\",\"t\":[\"if (obj instanceof String someString) { // ... } // 这里 someString 超出了作用域 \",\"若 instanceof 检查成功，将自动将变量转换为指定类型\",\"定义的变量实质上是一个局部变量，只在if语句的范围内可见\"]},\"110\":{\"h\":\"常见用法建议\",\"t\":[\"不仅如此！使用模式匹配，我们可以更灵活地应用条件测试。\",\"利用已定义的 obj，在不需要额外嵌套的情况下判断字符串是否以“Awesome”开头\",\"// 以前 return (someObject instanceof String) && ((String) someObject).startsWith(\\\"Awesome\\\"); // 现在 return someObject instanceof String someString && someString.startsWith(\\\"Awesome\\\"); \",\"甚至在 equals 方法中，代码会更加简洁\",\"// 以前 public boolean equals(Object obj) { if (obj instanceof Integer) { return value == ((Integer) obj).intValue(); } return false; } // 现在 public boolean equals(Object obj) { return (obj instanceof Integer i) && value == i.intValue(); } \",\"多么不同！现在代码简洁而直观。\"]},\"111\":{\"h\":\"发展脉络\",\"t\":[\"该功能经历了2个预览版本（JDK 14中的JEP 305、JDK 15中的JEP 375），最终定稿于JDK 16中的JEP 394。\"]},\"112\":{\"c\":[\"Java\"]},\"113\":{\"c\":[]},\"114\":{\"h\":\"Java 16 新特性：record类\",\"t\":[\"Java 16引入的record类是一种用于简化不可变数据管理的特殊类。 它通过紧凑的语法提供了对不可变数据的支持，并自动生成常见的方法， 如equals()、hashCode()和toString()等，从而减少了开发者的样板代码。\"]},\"115\":{\"h\":\"传统Java Bean问题\",\"t\":[\"在处理不可变数据时，传统的Java Bean存在“繁琐”和“冗长”的问题。 为了管理少量值的不可变数据，开发者需要编写大量低价值、重复且容易出错的代码， 包括构造函数、访问器(getter/setter)、equals、hashCode、toString等。\",\"例如，用于携带x和y坐标的类通常会演变成以下繁琐形式：\",\"class Point { private final int x; private final int y; Point(int x, int y) { this.x = x; this.y = y; } int x() { return x; } int y() { return y; } public boolean equals(Object o) { if (!(o instanceof Point)) return false; Point other = (Point) o; return other.x == x && other.y == y; } public int hashCode() { return Objects.hash(x, y); } public String toString() { return String.format(\\\"Point[x=%d, y=%d]\\\", x, y); } } \"]},\"116\":{\"h\":\"引入record类\",\"t\":[\"语法如下：使用 record关键字，指定类名称为 Point，定义参数列表 x 和 y 作为组件\",\"record Point(int x, int y) { } \",\"record申明的类，具备这些特点：\",\"它是一个final类\",\"自动实现equals、hashCode、toString函数\",\"成员变量均为public属性\",\"所以，对于之前写的Point类，它等价于一个这样的类：\",\"// Record类声明，使用record关键字，名称为Point，带有两个参数x和y public final class Point { // 1. 自动生成成员变量（fields） final int x; final int y; // 2. 自动生成构造函数(constructor) public Point( int x, int y){ this.x = x; this.y = y; } // 3. 自动生成的访问方法 public int x () { return x; } public int y () { return y; } // 4. 自动生成equals和hashCode方法 @Override public boolean equals (Object obj){ // 实现相等性比较的逻辑 } @Override public int hashCode () { // 生成哈希码的逻辑 } // 5. 自动生成toString方法 @Override public String toString () { return \\\"Point{\\\" + \\\"x=\\\" + x + \\\", y=\\\" + y + '}'; } } \",\"通过使用record类，你可以更专注于业务逻辑而不是样板代码，提高了代码的可读性和可维护性。\"]},\"117\":{\"h\":\"显示声明紧凑构造函数\",\"t\":[\"未显式声明构造函数时，系统会自动生成包含所有成员变量的隐式构造函数。 当显式声明紧凑构造函数可以省略形式参数列表、编译后在构造函数的末尾自动分配给相应的形式参数（this.x = x;）。\",\"验证参数的紧凑构造函数\",\"record Book(String title, String author, int pageCount) { Book { if (pageCount <= 0) { throw new IllegalArgumentException(\\\"页数必须大于零.\\\"); } } } \",\"规范的紧凑构造函数\",\"// 记录类 Rational 表示有理数，包含分子（num）和分母（denom）两个成员变量 record Rational(int num, int denom) { Rational { int gcd = gcd(num, denom); // 计算最大公约数 num /= gcd; // 将分子除以最大公约数 denom /= gcd; // 将分母除以最大公约数 } } \",\"这个声明等同于传统的构造函数形式：\",\"record Rational(int num, int denom) { Rational(int num, int demon) { // 逻辑代码 int gcd = gcd(num, denom); num /= gcd; denom /= gcd; // 赋值代码 this.num = num; this.denom = denom; } } \",\"记录类语义一致性\",\"例如，考虑以下方式声明的记录类R：\",\"record R(T1 c1, ..., Tn cn){ } \",\"如果通过以下方式复制R的实例r1：\",\"R r2 = new R(r1.c1(), r1.c2(), ..., r1.cn()); \",\"则假设 r1 不是空引用，表达式 r1.equals(r2) 总是为 true。 这是因为记录类的隐式声明的 equals 方法保证了相同字段值的两个记录实例相等。\",\"Tips: 程序员需要谨慎确保显式声明的方法维持语义一致性\",\"避免不良风格的代码\",\"record SmallPoint(int x, int y) { public int x() { return this.x < 100 ? this.x : 100; } public int y() { return this.y < 100 ? this.y : 100; } } \",\"这是一个不良风格的代码，违反了语义一致性的原则，访问器x(),y()方法调整类实例的状态； 改进建议， 如果需要限制坐标值的范围，应该在构造函数或其他明确的位置处理。\",\"record SmallPoint(int x, int y) { // 紧凑构造函数中限制坐标值的范围 public SmallPoint { this.x = Math.min(x, 100); this.y = Math.min(y, 100); } } \"]},\"118\":{\"h\":\"发展脉络\",\"t\":[\"record 类最初在JDK 14预览版(JEP 359)提出，随后在JDK 15预览版(JEP 384)再次推出。\\n最终，它在JDK 16中(JEP 395)正式发布，成为Java语言的一项重要特性。\"]},\"119\":{\"c\":[\"Java\"]},\"120\":{\"c\":[]},\"121\":{\"h\":\"Java 17 新特性：switch的模式匹配（Preview）\"},\"122\":{\"c\":[\"Java\"]},\"123\":{\"c\":[]},\"124\":{\"h\":\"Java 17 新特性：密封类\"},\"125\":{\"c\":[\"Java\"]},\"126\":{\"c\":[]},\"127\":{\"h\":\"Java 9 新特性：交互式编程环境JShell\",\"t\":[\"JShell 是 Java 9 引入的一个交互式编程环境，它是 Java 编程语言的 REPL（Read-Eval-Print Loop）实现。 REPL 是一种编程环境，允许用户输入表达式并立即看到结果，而无需事先编写和编译完整的程序。 JShell 的目标是提供一个轻量级、灵活且易于使用的工具，使得 Java 开发者能够更直观地编写和测试代码。\"]},\"128\":{\"h\":\"JShell快速入门\"},\"129\":{\"h\":\"启动JShell\",\"t\":[\"打开终端，然后执行命令：jshell，执行效果如下：\",\"➜ ~ jshell | 欢迎使用 JShell -- 版本 9 | 要大致了解该版本, 请键入: /help intro jshell> \"]},\"130\":{\"h\":\"帮助介绍 /help intro\",\"t\":[\"执行 /help intro 命令以获取有关 JShell 工具的简要介绍，intro 是主题，提供了关于 jshell 工具的核心概念和使用方法的信息。\",\"jshell> /help intro | | intro | ===== | | 使用 jshell 工具可以执行 Java 代码，从而立即获取结果。 | 您可以输入 Java 定义（变量、方法、类等等），例如：int x = 8 | 或 Java 表达式，例如：x + x | 或 Java 语句或导入。 | 这些小块的 Java 代码称为“片段”。 | | 这些 jshell 工具命令还可以让您了解和 | 控制您正在执行的操作，例如：/list | | 有关命令的列表，请执行：/help jshell> \"]},\"131\":{\"h\":\"定义变量、方法、类\",\"t\":[\"// 定义变量 jshell> int x = 8 x ==> 8 // 定义方法 jshell> int square(int num) { ...> return num * num; ...> } | 已创建 方法 square(int) // 定义类 jshell> public class Message{ ...> private String msg; ...> public Message(String msg){ ...> this.msg = msg; ...> } ...> public String getMessage(){ ...> return msg; ...> } ...> } | 已创建 类 Message jshell> \"]},\"132\":{\"h\":\"执行表达式、调用方法\",\"t\":[\"// 执行 Java 表达式 jshell> x + x $4 ==> 16 // 调用方法 jshell> square(5) $5 ==> 25 // 创建类实例并调用方法 jshell> Message messageObj = new Message(\\\"Hello, JShell!\\\"); messageObj ==> Message@6d4b1c02 jshell> messageObj.getMessage() $7 ==> \\\"Hello, JShell!\\\" \"]},\"133\":{\"h\":\"查看定义的变量：/vars\",\"t\":[\"jshell> /vars | int x = 8 | int $4 = 16 | int $5 = 25 | Message messageObj = Message@6d4b1c02 | String $7 = \\\"Hello, JShell!\\\" \"]},\"134\":{\"h\":\"查看定义的方法：/methods\",\"t\":[\"jshell> /methods | int square(int) \"]},\"135\":{\"h\":\"查看定义的类：/types\",\"t\":[\"jshell> /types | class Message \"]},\"136\":{\"h\":\"列出输入源条目：/list\",\"t\":[\"执行后，可以看到之前在jshell中输入的内容清单：\",\"jshell> /list 1 : int x = 8; 2 : int square(int num) { return num * num; } 3 : public class Message{ private String msg; public Message(String msg){ this.msg = msg; } public String getMessage(){ return msg; } } 4 : x + x 5 : square(5) 6 : Message messageObj = new Message(\\\"Hello, JShell!\\\"); 7 : messageObj.getMessage() jshell> \"]},\"137\":{\"h\":\"编辑源条目：/edit\",\"t\":[\"上面通过/list列出了输入的条目信息，下面试试通过/edit编辑下，比如：\",\"jshell> /edit 2 \",\"这将打开编辑器，修改先前定义的 square 方法。\",\"修改完成后，点击 accept 即可\"]},\"138\":{\"h\":\"删除源条目：/drop\",\"t\":[\"使用 /drop 命令可以删除之前输入的源代码块。可以通过指定名称或 ID 删除特定的源代码块。例如：\",\"jshell> /drop Message | 已删除 类 Message \",\"这将删除之前定义的 Message 类。\"]},\"139\":{\"h\":\"保存文件：/save\",\"t\":[\"通过 /save 命令，您可以将 JShell 中的源代码保存到文件中，以便将其保留或与他人共享。例如：\",\"jshell> /save myCode.java \",\"这将把当前所有的源代码保存到一个名为 myCode.java 的文件中。\"]},\"140\":{\"h\":\"打开文件：/open\",\"t\":[\"使用 /open 命令可以将文件的内容导入到 JShell 中，以便重新使用或修改。例如：\",\"jshell> /open myCode.java \",\"这将导入之前保存的 myCode.java 文件中的源代码。\"]},\"141\":{\"h\":\"重置jshell：/reset\",\"t\":[\"使用 /reset 命令可以清空 JShell 的状态，包括所有定义的变量、方法和类。例如：\",\"jshell> /reset | 正在重置状态 \",\"这将重置 JShell 并清除所有之前定义的内容。\"]},\"142\":{\"h\":\"查看引入的包：/imports\",\"t\":[\"使用 /imports 命令可以查看当前已经导入的包。这对于确保您在 JShell 中能够访问所需的类和方法非常有用。例如：\",\"jshell> /imports | import java.util.* \",\"这表明已经导入了 java.util 包。\"]},\"143\":{\"h\":\"退出jshell：/exit\",\"t\":[\"使用 /exit 命令可以退出 JShell。如果需要，在命令后可以添加一个整数表达式片段作为退出代码。例如：\",\"jshell> /exit 0 \",\"这将以退出代码 0 退出 JShell。\"]},\"144\":{\"h\":\"查看命令：/help\",\"t\":[\"最后，使用 /help 命令可以随时查看 JShell 的帮助信息，了解各种命令和主题的使用方法。例如：\",\"jshell> /help | 键入 Java 语言表达式, 语句或声明。 | 或者键入以下命令之一: | /list [<名称或 id>|-all|-start] | 列出您键入的源 | /edit <名称或 id> | 编辑源条目 | /drop <名称或 id> | 删除源条目 | /save [-all|-history|-start] <文件> | 将片段源保存到文件 | /open <file> | 打开文件作为源输入 | /vars [<名称或 id>|-all|-start] | 列出已声明变量及其值 | /methods [<名称或 id>|-all|-start] | 列出已声明方法及其签名 | /types [<名称或 id>|-all|-start] | 列出类型声明 | /imports | 列出导入的项 | /exit [<integer-expression-snippet>] | 退出 jshell 工具 | /env [-class-path <路径>] [-module-path <路径>] [-add-modules <模块>] ... | 查看或更改评估上下文 | /reset [-class-path <路径>] [-module-path <路径>] [-add-modules <模块>]... | 重置 jshell 工具 | /reload [-restore] [-quiet] [-class-path <路径>] [-module-path <路径>]... | 重置和重放相关历史记录 -- 当前历史记录或上一个历史记录 (-restore) | /history [-all] | 您键入的内容的历史记录 | /help [<command>|<subject>] | 获取有关使用 jshell 工具的信息 | /set editor|start|feedback|mode|prompt|truncation|format ... | 设置配置信息 | /? [<command>|<subject>] | 获取有关使用 jshell 工具的信息 | /! | 重新运行上一个片段 -- 请参阅 /help rerun | /<id> | 按 ID 或 ID 范围重新运行片段 -- 参见 /help rerun | /-<n> | 重新运行以前的第 n 个片段 -- 请参阅 /help rerun | | 有关详细信息, 请键入 '/help', 后跟 | 命令或主题的名称。 | 例如 '/help /list' 或 '/help intro'。主题: | | intro | jshell 工具的简介 | keys | 类似 readline 的输入编辑的说明 | id | 片段 ID 以及如何使用它们的说明 | shortcuts | 片段和命令输入提示, 信息访问以及 | 自动代码生成的按键说明 | context | /env /reload 和 /reset 的评估上下文选项的说明 | rerun | 重新评估以前输入片段的方法的说明 jshell> \",\"这将显示 JShell 的主要帮助信息。\"]},\"145\":{\"c\":[\"Java\"]},\"146\":{\"c\":[]},\"147\":{\"h\":\"Java 9 新特性：不可变集合的快捷创建方法\",\"t\":[\"Java 9引入了一项令人期待的新特性，即“Convenience Factory Methods for Collections”（集合的便利工厂方法），旨在使不可变集合的创建更加简单和便捷。 在此之前，我们通常使用构造方法来初始化集合，而Java 9为我们提供了一些全新的静态工厂方法，使得创建不可变集合的过程更为优雅。\"]},\"148\":{\"h\":\"Java 9的集合创建方式\",\"t\":[\"Java 9引入了一些便利的工厂方法，使得创建和初始化集合对象变得更加简洁和方便。 这些改进包括List.of()、Set.of()和Map.of()等方法，用于创建不可变的集合对象。\",\"// 创建不可变列表 List<String> immutableList = List.of(\\\"item1\\\", \\\"item2\\\", \\\"item3\\\"); // 创建不可变集合 Set<String> immutableSet = Set.of(\\\"item1\\\", \\\"item2\\\", \\\"item3\\\"); // 创建不可变映射 Map<String, Integer> immutableMap = Map.of(\\\"a\\\", 1, \\\"b\\\", 2, \\\"c\\\", 3); \",\"这样一行代码就完成了整个集合的创建和初始化过程，使得代码更加简洁、清晰，并且具有更高的可读性。\"]},\"149\":{\"h\":\"Java 8的集合创建方式\",\"t\":[\"Java 8引入了Lambda表达式和流式操作，这使得集合的初始化过程变得更加流畅和具有函数式编程的特性。\",\"// 创建不可变列表 List<String> immutableList = Collections.unmodifiableList( Stream.of(\\\"item1\\\", \\\"item2\\\", \\\"item3\\\").collect(Collectors.toList()) ); // 创建不可变集合 Set<String> immutableSet = Collections.unmodifiableSet( Stream.of(\\\"item1\\\", \\\"item2\\\", \\\"item3\\\").collect(Collectors.toSet()) ); // 创建不可变映射 Map<String, Integer> immutableMap = Collections.unmodifiableMap( Stream.of(new String[][]{{\\\"a\\\", \\\"1\\\"}, {\\\"b\\\", \\\"2\\\"}, {\\\"c\\\", \\\"3\\\"}}) .collect(Collectors.toMap(data -> data[0], data -> Integer.parseInt(data[1]))) ); \",\"虽然相较于传统方式，Java 8的写法更为紧凑，但仍显得略显繁琐。\"]},\"150\":{\"h\":\"传统的集合创建方式\",\"t\":[\"// 创建不可变列表 List<String> traditionalList = new ArrayList<>(); traditionalList.add(\\\"item1\\\"); traditionalList.add(\\\"item2\\\"); traditionalList.add(\\\"item3\\\"); traditionalList = Collections.unmodifiableList(traditionalList); // 创建不可变集合 Set<String> traditionalSet = new HashSet<>(); traditionalSet.add(\\\"item1\\\"); traditionalSet.add(\\\"item2\\\"); traditionalSet.add(\\\"item3\\\"); traditionalSet = Collections.unmodifiableSet(traditionalSet); // 创建不可变映射 Map<String, Integer> traditionalMap = new HashMap<>(); traditionalMap.put(\\\"a\\\", 1); traditionalMap.put(\\\"b\\\", 2); traditionalMap.put(\\\"c\\\", 3); traditionalMap = Collections.unmodifiableMap(traditionalMap); \",\"这种方式繁琐且不够直观，给代码的可读性和编写效率带来了一定的挑战。\"]},\"151\":{\"h\":\"List.of() vs. Arrays.asList()\",\"t\":[\"可变性：List.of 创建的是不可变集合，Arrays.asList 是可变集合\",\"// List.of 创建建的列表是不可变的 List<Integer> immutableList = List.of(1, 2, 3); // 无法添加、删除或修改元素，以下操作会导致 UnsupportedOperationException immutableList.add(4); immutableList.set(0, 0); // Arrays.asList() 创建的列表是可变的 List<Integer> mutableList = Arrays.asList(1, 2, 3); // 可以使用 add()、set() 方法修改元素，但不允许改变列表的大小 mutableList.add(4); mutableList.set(0, 0); \",\"null元素：List.of 不允许包含 null 元素，Arrays.asList 允许包含 null 元素，但不推荐\",\"List<Integer> listWithNull = Arrays.asList(1, null, 3); \",\"底层数据结构：List.of 使用不可变数据结构，Arrays.asList底层使用数组，对列表修改将反映在原始数组上\",\"List<Integer> immutableList = List.of(1, 2, 3); List<Integer> mutableList = Arrays.asList(1, 2, 3); \"]},\"152\":{\"c\":[\"Java\"]},\"153\":{\"c\":[]},\"154\":{\"h\":\"\"},\"155\":{\"c\":[]},\"156\":{\"c\":[]},\"157\":{\"h\":\"Life\"},\"158\":{\"c\":[]},\"159\":{\"c\":[]},\"160\":{\"h\":\"Java11\"},\"161\":{\"c\":[]},\"162\":{\"c\":[]},\"163\":{\"h\":\"Java10\"},\"164\":{\"c\":[]},\"165\":{\"c\":[]},\"166\":{\"h\":\"Java14\"},\"167\":{\"c\":[]},\"168\":{\"c\":[]},\"169\":{\"h\":\"Java15\"},\"170\":{\"c\":[]},\"171\":{\"c\":[]},\"172\":{\"h\":\"Java16\"},\"173\":{\"c\":[]},\"174\":{\"c\":[]},\"175\":{\"h\":\"Java17\"},\"176\":{\"c\":[]},\"177\":{\"c\":[]},\"178\":{\"h\":\"Java9\"},\"179\":{\"c\":[]},\"180\":{\"c\":[]},\"181\":{\"h\":\"分类\"},\"182\":{\"c\":[]},\"183\":{\"c\":[]},\"184\":{\"h\":\"标签\"},\"185\":{\"c\":[]},\"186\":{\"c\":[]},\"187\":{\"h\":\"文章\"},\"188\":{\"c\":[]},\"189\":{\"c\":[]},\"190\":{\"h\":\"收藏\"},\"191\":{\"c\":[]},\"192\":{\"c\":[]},\"193\":{\"h\":\"时间轴\"},\"194\":{\"c\":[]},\"195\":{\"c\":[]},\"196\":{\"h\":\"程序人生 分类\"},\"197\":{\"c\":[]},\"198\":{\"c\":[]},\"199\":{\"h\":\"标签: 程序人生\"},\"200\":{\"c\":[]},\"201\":{\"c\":[]},\"202\":{\"h\":\"Java 分类\"},\"203\":{\"c\":[]},\"204\":{\"c\":[]},\"205\":{\"h\":\"标签: Java\"},\"206\":{\"c\":[]},\"207\":{\"c\":[]},\"208\":{\"h\":\"标签: Java 11\"},\"209\":{\"c\":[]},\"210\":{\"c\":[]},\"211\":{\"h\":\"标签: Java 10\"},\"212\":{\"c\":[]},\"213\":{\"c\":[]},\"214\":{\"h\":\"标签: Java 14\"},\"215\":{\"c\":[]},\"216\":{\"c\":[]},\"217\":{\"h\":\"标签: Java 15\"},\"218\":{\"c\":[]},\"219\":{\"c\":[]},\"220\":{\"h\":\"标签: Java 16\"},\"221\":{\"c\":[]},\"222\":{\"c\":[]},\"223\":{\"h\":\"标签: Java 17\"},\"224\":{\"c\":[]},\"225\":{\"c\":[]},\"226\":{\"h\":\"标签: Java 9\"},\"227\":{\"c\":[]},\"228\":{\"c\":[]}},\"dirtCount\":0,\"index\":[[\"时间轴\",{\"0\":{\"193\":1}}],[\"收藏\",{\"0\":{\"190\":1}}],[\"底层数据结构\",{\"1\":{\"151\":1}}],[\"无法添加\",{\"1\":{\"151\":1}}],[\"无需显式使用加号连接操作符\",{\"1\":{\"103\":2}}],[\"给代码的可读性和编写效率带来了一定的挑战\",{\"1\":{\"150\":1}}],[\"虽然相较于传统方式\",{\"1\":{\"149\":1}}],[\"虽然部分功能在早期版本中已经出现\",{\"1\":{\"89\":1}}],[\"清晰\",{\"1\":{\"148\":1}}],[\"创建的列表是可变的\",{\"1\":{\"151\":1}}],[\"创建的是不可变集合\",{\"1\":{\"151\":1}}],[\"创建建的列表是不可变的\",{\"1\":{\"151\":1}}],[\"创建不可变映射\",{\"1\":{\"148\":1,\"149\":1,\"150\":1}}],[\"创建不可变集合\",{\"1\":{\"148\":1,\"149\":1,\"150\":1}}],[\"创建不可变列表\",{\"1\":{\"148\":1,\"149\":1,\"150\":1}}],[\"创建类实例并调用方法\",{\"1\":{\"132\":1}}],[\"旨在使不可变集合的创建更加简单和便捷\",{\"1\":{\"147\":1}}],[\"旨在简化多行字符串的表示\",{\"1\":{\"97\":1}}],[\"集合的便利工厂方法\",{\"1\":{\"147\":1}}],[\"集合初始化等场景下表现突出\",{\"1\":{\"79\":1}}],[\"信息访问以及\",{\"1\":{\"144\":1}}],[\"主题\",{\"1\":{\"144\":1}}],[\"后跟\",{\"1\":{\"144\":1}}],[\"有关详细信息\",{\"1\":{\"144\":1}}],[\"有关命令的列表\",{\"1\":{\"130\":1}}],[\"个片段\",{\"1\":{\"144\":1}}],[\"个人简介\",{\"0\":{\"3\":1}}],[\"参见\",{\"1\":{\"144\":1}}],[\"范围重新运行片段\",{\"1\":{\"144\":1}}],[\"按\",{\"1\":{\"144\":1}}],[\"按下\",{\"1\":{\"40\":1,\"42\":1,\"44\":1}}],[\"设置配置信息\",{\"1\":{\"144\":1}}],[\"设计受到c和c++等低级语言的影响\",{\"1\":{\"83\":1}}],[\"获取有关使用\",{\"1\":{\"144\":2}}],[\"您键入的内容的历史记录\",{\"1\":{\"144\":1}}],[\"您可以将\",{\"1\":{\"139\":1}}],[\"您可以输入\",{\"1\":{\"130\":1}}],[\"quiet\",{\"1\":{\"144\":1}}],[\"query\",{\"1\":{\"98\":2}}],[\"键入\",{\"1\":{\"144\":1}}],[\"了解各种命令和主题的使用方法\",{\"1\":{\"144\":1}}],[\"退出\",{\"1\":{\"143\":1,\"144\":1}}],[\"退出jshell\",{\"0\":{\"143\":1}}],[\"查看或更改评估上下文\",{\"1\":{\"144\":1}}],[\"查看命令\",{\"0\":{\"144\":1}}],[\"查看引入的包\",{\"0\":{\"142\":1}}],[\"查看定义的类\",{\"0\":{\"135\":1}}],[\"查看定义的方法\",{\"0\":{\"134\":1}}],[\"查看定义的变量\",{\"0\":{\"133\":1}}],[\"正在重置状态\",{\"1\":{\"141\":1}}],[\"正式发布\",{\"1\":{\"118\":1}}],[\"保存文件\",{\"0\":{\"139\":1}}],[\"保持固定长度\",{\"1\":{\"102\":1}}],[\"已删除\",{\"1\":{\"138\":1}}],[\"已创建\",{\"1\":{\"131\":2}}],[\"命令或主题的名称\",{\"1\":{\"144\":1}}],[\"命令可以随时查看\",{\"1\":{\"144\":1}}],[\"命令可以退出\",{\"1\":{\"143\":1}}],[\"命令可以查看当前已经导入的包\",{\"1\":{\"142\":1}}],[\"命令可以清空\",{\"1\":{\"141\":1}}],[\"命令可以将文件的内容导入到\",{\"1\":{\"140\":1}}],[\"命令可以删除之前输入的源代码块\",{\"1\":{\"138\":1}}],[\"命令\",{\"1\":{\"139\":1}}],[\"命令以获取有关\",{\"1\":{\"130\":1}}],[\"点击\",{\"1\":{\"137\":1}}],[\"修改完成后\",{\"1\":{\"137\":1}}],[\"修改先前定义的\",{\"1\":{\"137\":1}}],[\"比如\",{\"1\":{\"137\":1}}],[\"下面试试通过\",{\"1\":{\"137\":1}}],[\"列出导入的项\",{\"1\":{\"144\":1}}],[\"列出类型声明\",{\"1\":{\"144\":1}}],[\"列出已声明方法及其签名\",{\"1\":{\"144\":1}}],[\"列出已声明变量及其值\",{\"1\":{\"144\":1}}],[\"列出您键入的源\",{\"1\":{\"144\":1}}],[\"列出输入源条目\",{\"0\":{\"136\":1}}],[\"列表默认为\",{\"1\":{\"13\":1}}],[\"$7\",{\"1\":{\"132\":1,\"133\":1}}],[\"$5\",{\"1\":{\"132\":1,\"133\":1}}],[\"$4\",{\"1\":{\"132\":1,\"133\":1}}],[\"$$\",{\"1\":{\"15\":2}}],[\"调用方法\",{\"0\":{\"132\":1},\"1\":{\"132\":1}}],[\"控制您正在执行的操作\",{\"1\":{\"130\":1}}],[\"片段和命令输入提示\",{\"1\":{\"144\":1}}],[\"片段\",{\"1\":{\"130\":1,\"144\":1}}],[\"变量\",{\"1\":{\"130\":1}}],[\"变红\",{\"1\":{\"29\":1}}],[\"帮助介绍\",{\"0\":{\"130\":1}}],[\"帮助你控制注入图片或视频的大小\",{\"1\":{\"19\":1}}],[\"请参阅\",{\"1\":{\"144\":2}}],[\"请执行\",{\"1\":{\"130\":1}}],[\"请键入\",{\"1\":{\"129\":1,\"144\":1}}],[\"请滚动鼠标滚轮进入下一页\",{\"1\":{\"7\":1}}],[\"要大致了解该版本\",{\"1\":{\"129\":1}}],[\"版本\",{\"1\":{\"129\":1}}],[\"欢迎使用\",{\"1\":{\"129\":1}}],[\"|\",{\"1\":{\"129\":2,\"130\":14,\"131\":2,\"133\":5,\"134\":1,\"135\":1,\"138\":1,\"141\":1,\"142\":1,\"144\":60}}],[\"~\",{\"1\":{\"129\":1}}],[\"➜\",{\"1\":{\"129\":1}}],[\"执行后\",{\"1\":{\"136\":1}}],[\"执行表达式\",{\"0\":{\"132\":1}}],[\"执行\",{\"1\":{\"130\":1,\"132\":1}}],[\"执行效果如下\",{\"1\":{\"129\":1}}],[\"执行解释作为最后一步开发人员可以编写转义序列\",{\"1\":{\"99\":1}}],[\"打开文件作为源输入\",{\"1\":{\"144\":1}}],[\"打开文件\",{\"0\":{\"140\":1}}],[\"打开终端\",{\"1\":{\"129\":1}}],[\"打算做一些改变\",{\"1\":{\"67\":1}}],[\"启动jshell\",{\"0\":{\"129\":1}}],[\"灵活且易于使用的工具\",{\"1\":{\"127\":1}}],[\"编辑源条目\",{\"0\":{\"137\":1},\"1\":{\"144\":1}}],[\"编程语言的\",{\"1\":{\"127\":1}}],[\"编译后在构造函数的末尾自动分配给相应的形式参数\",{\"1\":{\"117\":1}}],[\"编译时处理\",{\"0\":{\"99\":1}}],[\"是可变集合\",{\"1\":{\"151\":1}}],[\"是主题\",{\"1\":{\"130\":1}}],[\"是一种编程环境\",{\"1\":{\"127\":1}}],[\"是\",{\"1\":{\"127\":1}}],[\"交互式编程环境jshell\",{\"0\":{\"127\":1}}],[\"密封类\",{\"0\":{\"124\":1}}],[\"成为java语言的一项重要特性\",{\"1\":{\"118\":1}}],[\"成员变量均为public属性\",{\"1\":{\"116\":1}}],[\"随后在jdk\",{\"1\":{\"118\":1}}],[\"紧凑构造函数中限制坐标值的范围\",{\"1\":{\"117\":1}}],[\"应该在构造函数或其他明确的位置处理\",{\"1\":{\"117\":1}}],[\"改进建议\",{\"1\":{\"117\":1}}],[\"违反了语义一致性的原则\",{\"1\":{\"117\":1}}],[\"避免不良风格的代码\",{\"1\":{\"117\":1}}],[\"避免块中变量命名冲突和误用\",{\"1\":{\"86\":1}}],[\"程序员需要谨慎确保显式声明的方法维持语义一致性\",{\"1\":{\"117\":1}}],[\"程序人生\",{\"0\":{\"196\":1,\"199\":1},\"2\":{\"4\":1,\"69\":1}}],[\"总是为\",{\"1\":{\"117\":1}}],[\"则假设\",{\"1\":{\"117\":1}}],[\"考虑以下方式声明的记录类r\",{\"1\":{\"117\":1}}],[\"考虑购买一个3d打印机\",{\"1\":{\"68\":1}}],[\"赋值代码\",{\"1\":{\"117\":1}}],[\"逻辑代码\",{\"1\":{\"117\":1}}],[\"计算最大公约数\",{\"1\":{\"117\":1}}],[\"计划启动一个专栏\",{\"1\":{\"48\":1}}],[\"两个成员变量\",{\"1\":{\"117\":1}}],[\"两个相邻的文本块会自动连接\",{\"1\":{\"103\":1}}],[\"记录类语义一致性\",{\"1\":{\"117\":1}}],[\"记录类\",{\"1\":{\"117\":1}}],[\"规范的紧凑构造函数\",{\"1\":{\"117\":1}}],[\"规范化为lf\",{\"1\":{\"99\":1}}],[\"页数必须大于零\",{\"1\":{\"117\":1}}],[\"验证参数的紧凑构造函数\",{\"1\":{\"117\":1}}],[\"当前历史记录或上一个历史记录\",{\"1\":{\"144\":1}}],[\"当显式声明紧凑构造函数可以省略形式参数列表\",{\"1\":{\"117\":1}}],[\"当坚持成为一种热爱\",{\"1\":{\"3\":1,\"68\":1}}],[\"系统会自动生成包含所有成员变量的隐式构造函数\",{\"1\":{\"117\":1}}],[\"未显式声明构造函数时\",{\"1\":{\"117\":1}}],[\"显示声明紧凑构造函数\",{\"0\":{\"117\":1}}],[\"5\",{\"1\":{\"116\":1,\"132\":1,\"136\":2}}],[\"生成哈希码的逻辑\",{\"1\":{\"116\":1}}],[\"实现\",{\"1\":{\"127\":1}}],[\"实现相等性比较的逻辑\",{\"1\":{\"116\":1}}],[\"实战做一个稚晖君的机器人\",{\"1\":{\"68\":1}}],[\"带有两个参数x和y\",{\"1\":{\"116\":1}}],[\"名称为point\",{\"1\":{\"116\":1}}],[\"对列表修改将反映在原始数组上\",{\"1\":{\"151\":1}}],[\"对于之前写的point类\",{\"1\":{\"116\":1}}],[\"对技术有着强烈的热爱\",{\"1\":{\"3\":1}}],[\"具备这些特点\",{\"1\":{\"116\":1}}],[\"具有以下特性\",{\"1\":{\"92\":1}}],[\"作为组件\",{\"1\":{\"116\":1}}],[\"作者\",{\"1\":{\"7\":1}}],[\"定义类\",{\"1\":{\"131\":1}}],[\"定义方法\",{\"1\":{\"131\":1}}],[\"定义变量\",{\"0\":{\"131\":1},\"1\":{\"131\":1}}],[\"定义\",{\"1\":{\"130\":1}}],[\"定义参数列表\",{\"1\":{\"116\":1}}],[\"定义的变量实质上是一个局部变量\",{\"1\":{\"109\":1}}],[\"指定类名称为\",{\"1\":{\"116\":1}}],[\"引入的一个交互式编程环境\",{\"1\":{\"127\":1}}],[\"引入record类\",{\"0\":{\"116\":1}}],[\"引入了两个新的转义序列\",{\"1\":{\"100\":1}}],[\"引入了文本块\",{\"1\":{\"97\":1}}],[\"引入了一种新的开关标签\",{\"1\":{\"85\":1}}],[\"引入了一项新的语言特性\",{\"1\":{\"77\":1}}],[\"引入了\",{\"1\":{\"82\":1,\"107\":1}}],[\"y=\",{\"1\":{\"115\":1,\"116\":1}}],[\"y\",{\"1\":{\"115\":10,\"116\":9,\"117\":8}}],[\"yield语句返回值\",{\"0\":{\"88\":1}}],[\"yield\",{\"1\":{\"82\":1,\"88\":1}}],[\"例如\",{\"1\":{\"115\":1,\"117\":1,\"130\":3,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":2}}],[\"访问器x\",{\"1\":{\"117\":1}}],[\"访问器\",{\"1\":{\"115\":1}}],[\"访问官方网站\",{\"1\":{\"48\":1}}],[\"包\",{\"1\":{\"142\":1}}],[\"包括所有定义的变量\",{\"1\":{\"141\":1}}],[\"包括构造函数\",{\"1\":{\"115\":1}}],[\"包含分子\",{\"1\":{\"117\":1}}],[\"包含\",{\"1\":{\"73\":1}}],[\"重新评估以前输入片段的方法的说明\",{\"1\":{\"144\":1}}],[\"重新运行以前的第\",{\"1\":{\"144\":1}}],[\"重新运行上一个片段\",{\"1\":{\"144\":1}}],[\"重置和重放相关历史记录\",{\"1\":{\"144\":1}}],[\"重置\",{\"1\":{\"144\":1}}],[\"重置jshell\",{\"0\":{\"141\":1}}],[\"重复且容易出错的代码\",{\"1\":{\"115\":1}}],[\"重点分享java领域的前沿知识\",{\"1\":{\"48\":1}}],[\"冗长\",{\"1\":{\"115\":1}}],[\"繁琐\",{\"1\":{\"115\":1}}],[\"从而立即获取结果\",{\"1\":{\"130\":1}}],[\"从而减少了开发者的样板代码\",{\"1\":{\"114\":1}}],[\"从jdk\",{\"1\":{\"89\":1}}],[\"等方法\",{\"1\":{\"148\":1}}],[\"等\",{\"1\":{\"114\":1}}],[\"等号两边都需要\",{\"1\":{\"79\":1}}],[\"该功能经历了2个预览版本\",{\"1\":{\"111\":1}}],[\"甚至在\",{\"1\":{\"110\":1}}],[\"现在代码简洁而直观\",{\"1\":{\"110\":1}}],[\"现在\",{\"1\":{\"110\":2}}],[\"开发者能够更直观地编写和测试代码\",{\"1\":{\"127\":1}}],[\"开发者需要编写大量低价值\",{\"1\":{\"115\":1}}],[\"开发者需要额外的配置和依赖\",{\"1\":{\"74\":1}}],[\"开头\",{\"1\":{\"110\":1}}],[\"利用已定义的\",{\"1\":{\"110\":1}}],[\"常见用法建议\",{\"0\":{\"110\":1}}],[\"常用注解\",{\"1\":{\"73\":1}}],[\"只在if语句的范围内可见\",{\"1\":{\"109\":1}}],[\"只需要在左边申明类型即可\",{\"1\":{\"79\":1}}],[\"只需要将\",{\"1\":{\"78\":1}}],[\"检查成功\",{\"1\":{\"109\":1}}],[\"检查之后\",{\"1\":{\"108\":1}}],[\"若\",{\"1\":{\"109\":1}}],[\"超出了作用域\",{\"1\":{\"109\":1}}],[\"增强用法\",{\"0\":{\"109\":1}}],[\"强制类型转换\",{\"1\":{\"108\":1}}],[\"基础用法\",{\"0\":{\"108\":1}}],[\"方法修改元素\",{\"1\":{\"151\":1}}],[\"方法和类\",{\"1\":{\"141\":1}}],[\"方法\",{\"0\":{\"131\":1},\"1\":{\"130\":1,\"131\":1,\"137\":1}}],[\"方法调整类实例的状态\",{\"1\":{\"117\":1}}],[\"方法保证了相同字段值的两个记录实例相等\",{\"1\":{\"117\":1}}],[\"方法中\",{\"1\":{\"110\":1}}],[\"方法参数和返回类型\",{\"1\":{\"79\":1}}],[\"方便逐行处理\",{\"1\":{\"104\":1}}],[\"去除多行字符串的前导空格\",{\"1\":{\"104\":1}}],[\"减少了冗余的拼接操作\",{\"1\":{\"103\":1}}],[\"减少了冗余的类型声明\",{\"1\":{\"79\":1}}],[\"形成一个整体的字符串\",{\"1\":{\"103\":1}}],[\"字符串和文本块连接\",{\"1\":{\"103\":1}}],[\"字符串文字\",{\"1\":{\"98\":3}}],[\"防止尾随空格被去除\",{\"1\":{\"102\":1}}],[\"单个空格\",{\"0\":{\"102\":1}}],[\"转义多行字符串中的转义字符\",{\"1\":{\"104\":1}}],[\"转义序列直到去除无意义的空格后才被解释\",{\"1\":{\"102\":1}}],[\"转义序列简单地转换为单个空格\",{\"1\":{\"102\":1}}],[\"转义序列只适用于文本块\",{\"1\":{\"101\":1}}],[\"转换内容的行终止符\",{\"1\":{\"99\":1}}],[\"所以为什么不围绕它优化一下语法呢\",{\"1\":{\"108\":1}}],[\"所以\",{\"1\":{\"101\":1,\"116\":1}}],[\"所以你无需担心它的长度\",{\"1\":{\"12\":1}}],[\"因为字符和传统字符串不允许嵌入换行符\",{\"1\":{\"101\":1}}],[\"换行符\",{\"0\":{\"101\":1}}],[\"新的\",{\"1\":{\"102\":1}}],[\"新增转义序列\",{\"0\":{\"100\":1}}],[\"新特性\",{\"0\":{\"71\":1,\"77\":1,\"82\":1,\"92\":1,\"97\":1,\"107\":1,\"114\":1,\"121\":1,\"124\":1,\"127\":1,\"147\":1}}],[\"运行时\",{\"1\":{\"99\":1}}],[\"运行时映像中将不包含这些类\",{\"1\":{\"73\":1}}],[\"处理后的内容以constant\",{\"1\":{\"99\":1}}],[\"如果需要\",{\"1\":{\"143\":1}}],[\"如果需要限制坐标值的范围\",{\"1\":{\"117\":1}}],[\"如果通过以下方式复制r的实例r1\",{\"1\":{\"117\":1}}],[\"如equals\",{\"1\":{\"114\":1}}],[\"如\",{\"1\":{\"99\":1}}],[\"解释内容中的转义序列\",{\"1\":{\"99\":1}}],[\"行终止符从cr\",{\"1\":{\"99\":1}}],[\"行终止符的规范化\",{\"1\":{\"99\":1}}],[\"附带白色空间的移除和解释转义序列\",{\"1\":{\"99\":1}}],[\"与字符串字面值不同\",{\"1\":{\"99\":1}}],[\"然后执行命令\",{\"1\":{\"129\":1}}],[\"然后一件件去实现它\",{\"1\":{\"67\":1}}],[\"然而\",{\"1\":{\"99\":1}}],[\"类似\",{\"1\":{\"144\":1}}],[\"类似于字符串字面量\",{\"1\":{\"99\":1}}],[\"类\",{\"0\":{\"131\":1},\"1\":{\"131\":1,\"138\":2}}],[\"类等等\",{\"1\":{\"130\":1}}],[\"类最初在jdk\",{\"1\":{\"118\":1}}],[\"类型在等号右边决定\",{\"1\":{\"79\":1}}],[\"二维\",{\"1\":{\"98\":3}}],[\"快速上手\",{\"0\":{\"98\":1}}],[\"易读的字符串处理方式\",{\"1\":{\"97\":1}}],[\"来实现\",{\"1\":{\"97\":1}}],[\"来自\",{\"1\":{\"73\":4}}],[\"文章\",{\"0\":{\"187\":1}}],[\"文件中的源代码\",{\"1\":{\"140\":1}}],[\"文本块引入了一些新方法\",{\"1\":{\"104\":1}}],[\"文本块新方法\",{\"0\":{\"104\":1}}],[\"文本块的连接是引入的一个方便的特性\",{\"1\":{\"103\":1}}],[\"文本块的内容在编译时经历三个步骤的处理\",{\"1\":{\"99\":1}}],[\"文本块连接\",{\"0\":{\"103\":1}}],[\"文本块被计算为string的实例\",{\"1\":{\"99\":1}}],[\"文本块是string类型的常量表达式\",{\"1\":{\"99\":1}}],[\"文本块通过引入三个双引号的胖分隔符\",{\"1\":{\"97\":1}}],[\"文本块\",{\"0\":{\"97\":1},\"1\":{\"98\":3}}],[\"文字并包含\",{\"1\":{\"12\":1}}],[\"框架中应用\",{\"0\":{\"94\":1}}],[\"框架扩展性\",{\"1\":{\"92\":1}}],[\"原理\",{\"0\":{\"93\":1}}],[\"适用于需要在运行时生成类的框架\",{\"1\":{\"92\":1}}],[\"独立加载和卸载\",{\"1\":{\"92\":1}}],[\"反射访问限制\",{\"1\":{\"92\":1}}],[\"动态生成内部类\",{\"1\":{\"92\":1}}],[\"动画\",{\"0\":{\"25\":1,\"27\":1}}],[\"动画片段用于高亮或显隐幻灯片中的元素\",{\"1\":{\"23\":1}}],[\"动画片段\",{\"0\":{\"22\":1,\"23\":1,\"24\":1,\"26\":1,\"28\":1,\"30\":1}}],[\"需要通过反射间接使用它们\",{\"1\":{\"92\":1}}],[\"需要注意以下几点\",{\"1\":{\"79\":1}}],[\"隐藏类可以独立于其他类加载和卸载\",{\"1\":{\"92\":1}}],[\"隐藏类只能通过反射访问\",{\"1\":{\"92\":1}}],[\"隐藏类天生为框架设计\",{\"1\":{\"92\":1}}],[\"隐藏类是为框架设计的\",{\"1\":{\"92\":1}}],[\"隐藏类\",{\"0\":{\"92\":1}}],[\"及以后的版本中使用\",{\"1\":{\"89\":1}}],[\"及其最新动态\",{\"1\":{\"48\":1}}],[\"但不推荐\",{\"1\":{\"151\":1}}],[\"但不允许改变列表的大小\",{\"1\":{\"151\":1}}],[\"但仍显得略显繁琐\",{\"1\":{\"149\":1}}],[\"但仍可以作为独立模块使用\",{\"1\":{\"74\":1}}],[\"但仍可作为独立模块使用\",{\"1\":{\"71\":1}}],[\"但建议在\",{\"1\":{\"89\":1}}],[\"到jdk\",{\"1\":{\"89\":1}}],[\"到明年这个时候回头去看\",{\"1\":{\"67\":1}}],[\"追溯jep\",{\"1\":{\"89\":1}}],[\"发展脉络\",{\"0\":{\"89\":1,\"111\":1,\"118\":1}}],[\"而java\",{\"1\":{\"147\":1}}],[\"而无需事先编写和编译完整的程序\",{\"1\":{\"127\":1}}],[\"而不会被前面的步骤修改或删除\",{\"1\":{\"99\":1}}],[\"而不是使用break语句\",{\"1\":{\"88\":1}}],[\"而在运行时确定类型的特性\",{\"1\":{\"87\":1}}],[\"多么不同\",{\"1\":{\"110\":1}}],[\"多态性是指在编译时不确定具体类型\",{\"1\":{\"87\":1}}],[\"多个动画片段\",{\"0\":{\"29\":1}}],[\"k\",{\"1\":{\"87\":2}}],[\"keys\",{\"1\":{\"144\":1}}],[\"keystores\",{\"1\":{\"63\":1}}],[\"key\",{\"1\":{\"51\":1,\"61\":1}}],[\"返回不同的字符串\",{\"1\":{\"87\":1}}],[\"根据输入值`k`的不同\",{\"1\":{\"87\":1}}],[\"根据输入值返回不同的结果\",{\"1\":{\"87\":1}}],[\"根据变量的初始值\",{\"1\":{\"77\":1}}],[\"允许包含\",{\"1\":{\"151\":1}}],[\"允许用户输入表达式并立即看到结果\",{\"1\":{\"127\":1}}],[\"允许在switch表达式中使用yield语句\",{\"1\":{\"88\":1}}],[\"允许在每个分支中声明局部变量\",{\"1\":{\"86\":1}}],[\"允许将\",{\"1\":{\"87\":1}}],[\"允许每种情况下有多个常量\",{\"1\":{\"85\":1}}],[\"局部变量独立作用域\",{\"0\":{\"86\":1}}],[\"局部变量类型推断的语法非常简单\",{\"1\":{\"78\":1}}],[\"局部变量类型推断\",{\"0\":{\"77\":1}}],[\"块或抛出异常throw语句\",{\"1\":{\"85\":1}}],[\"用于创建不可变的集合对象\",{\"1\":{\"148\":1}}],[\"用于携带x和y坐标的类通常会演变成以下繁琐形式\",{\"1\":{\"115\":1}}],[\"用于更简便地判断对象是否是某个类的实例并进行相应的局部类型转换\",{\"1\":{\"107\":1}}],[\"用于匹配java源代码的缩进\",{\"1\":{\"99\":1}}],[\"用于返回一个值\",{\"1\":{\"88\":1}}],[\"用于表示只有一个分支的情况\",{\"1\":{\"85\":1}}],[\"用逗号分隔\",{\"1\":{\"85\":1}}],[\"过多的break语句使得代码显得冗长\",{\"1\":{\"83\":1}}],[\"过渡动画\",{\"0\":{\"35\":1}}],[\"且默认支持fall\",{\"1\":{\"83\":1}}],[\"它是\",{\"1\":{\"127\":1}}],[\"它是一个final类\",{\"1\":{\"116\":1}}],[\"它在jdk\",{\"1\":{\"118\":1}}],[\"它等价于一个这样的类\",{\"1\":{\"116\":1}}],[\"它通过紧凑的语法提供了对不可变数据的支持\",{\"1\":{\"114\":1}}],[\"它们在处理多个条件时可能显得有些冗长\",{\"1\":{\"83\":1}}],[\"它允许在局部变量声明时\",{\"1\":{\"77\":1}}],[\"让我们回顾一下传统的switch语句\",{\"1\":{\"83\":1}}],[\"首先\",{\"1\":{\"83\":1}}],[\"传统java\",{\"0\":{\"115\":1}}],[\"传统的集合创建方式\",{\"0\":{\"150\":1}}],[\"传统的java\",{\"1\":{\"115\":1}}],[\"传统的\",{\"1\":{\"83\":1}}],[\"传统的switch语句\",{\"0\":{\"83\":1}}],[\"传统方式\",{\"1\":{\"79\":1,\"101\":1}}],[\"特性做好了准备\",{\"1\":{\"82\":1}}],[\"并清除所有之前定义的内容\",{\"1\":{\"141\":1}}],[\"并自动生成常见的方法\",{\"1\":{\"114\":1}}],[\"并减少在字符串中使用转义符的需求\",{\"1\":{\"97\":1}}],[\"并且具有更高的可读性\",{\"1\":{\"148\":1}}],[\"并且不能直接在源代码中引用\",{\"1\":{\"92\":1}}],[\"并且它会自动换行\",{\"1\":{\"12\":1}}],[\"并通过`system\",{\"1\":{\"87\":1}}],[\"并为未来的模式匹配\",{\"1\":{\"82\":1}}],[\"简洁\",{\"1\":{\"82\":1}}],[\"语言表达式\",{\"1\":{\"144\":1}}],[\"语句或声明\",{\"1\":{\"144\":1}}],[\"语句或导入\",{\"1\":{\"130\":1}}],[\"语句用作表达式\",{\"1\":{\"87\":1}}],[\"语句存在以下问题\",{\"1\":{\"83\":1}}],[\"语句的增强\",{\"1\":{\"82\":1}}],[\"语法如下\",{\"1\":{\"116\":1}}],[\"语法\",{\"0\":{\"78\":1},\"1\":{\"82\":1,\"87\":1}}],[\"语法来分布高亮特定行\",{\"1\":{\"38\":1}}],[\"语法的各种标记\",{\"1\":{\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1}}],[\"箭头标签\",{\"0\":{\"85\":1},\"1\":{\"82\":1}}],[\"其中包括了\",{\"1\":{\"82\":1}}],[\"表示有理数\",{\"1\":{\"117\":1}}],[\"表达式\",{\"1\":{\"117\":1,\"130\":1,\"132\":1}}],[\"表达式被引入\",{\"1\":{\"87\":1}}],[\"表达式的新特性\",{\"1\":{\"82\":1}}],[\"表格和分割线\",{\"1\":{\"16\":1}}],[\"将片段源保存到文件\",{\"1\":{\"144\":1}}],[\"将分母除以最大公约数\",{\"1\":{\"117\":1}}],[\"将分子除以最大公约数\",{\"1\":{\"117\":1}}],[\"将自动将变量转换为指定类型\",{\"1\":{\"109\":1}}],[\"将多行字符串拆分为行的流\",{\"1\":{\"104\":1}}],[\"将有助于代码的维护和阅读\",{\"1\":{\"79\":1}}],[\"将不再可用\",{\"1\":{\"73\":1}}],[\"合理运用局部变量类型推断\",{\"1\":{\"79\":1}}],[\"通过使用record类\",{\"1\":{\"116\":1}}],[\"通过使用局部变量类型推断\",{\"1\":{\"79\":1}}],[\"通过\",{\"1\":{\"87\":1,\"139\":1}}],[\"通过启用\",{\"1\":{\"38\":1}}],[\"每行末尾使用\",{\"1\":{\"102\":1}}],[\"每次只能定义一个变量\",{\"1\":{\"79\":1}}],[\"每天还是患得患失\",{\"1\":{\"67\":1}}],[\"仅限于局部变量\",{\"1\":{\"79\":1}}],[\"必须在声明的同时进行初始化\",{\"1\":{\"79\":1}}],[\"进行局部变量类型推断时\",{\"1\":{\"79\":1}}],[\"进入大厂\",{\"1\":{\"68\":1}}],[\"相邻的文本块将自动合并\",{\"1\":{\"103\":2}}],[\"相比传统的方式和\",{\"1\":{\"79\":1}}],[\"相关工具将不再可用\",{\"1\":{\"73\":1}}],[\"示例\",{\"0\":{\"79\":1}}],[\"自动代码生成的按键说明\",{\"1\":{\"144\":1}}],[\"自动生成tostring方法\",{\"1\":{\"116\":1}}],[\"自动生成equals和hashcode方法\",{\"1\":{\"116\":1}}],[\"自动生成的访问方法\",{\"1\":{\"116\":1}}],[\"自动生成构造函数\",{\"1\":{\"116\":1}}],[\"自动生成成员变量\",{\"1\":{\"116\":1}}],[\"自动实现equals\",{\"1\":{\"116\":1}}],[\"自动推断\",{\"1\":{\"78\":2}}],[\"自认为自己并不是一个聪明的人\",{\"1\":{\"3\":1}}],[\"关键字作为局部变量的类型即可\",{\"1\":{\"78\":1}}],[\"推断出变量的数据类型\",{\"1\":{\"77\":1}}],[\"即\",{\"1\":{\"147\":1}}],[\"即局部变量类型推断\",{\"1\":{\"77\":1}}],[\"即可\",{\"1\":{\"137\":1}}],[\"即可以向此元素进行放大\",{\"1\":{\"44\":1}}],[\"即可在幻灯片获得焦点时进入全屏模式\",{\"1\":{\"42\":1}}],[\"即可在幻灯片获得焦点时进入预览模式\",{\"1\":{\"40\":1}}],[\"技术\",{\"1\":{\"74\":1}}],[\"技术学习\",{\"1\":{\"68\":1}}],[\"移除\",{\"0\":{\"74\":1}}],[\"移除javaee和corba模块以及javafx\",{\"0\":{\"71\":1}}],[\"上面通过\",{\"1\":{\"137\":1}}],[\"上的\",{\"1\":{\"73\":1}}],[\"上使用\",{\"1\":{\"44\":1}}],[\"就像\",{\"1\":{\"73\":1}}],[\"提出\",{\"1\":{\"118\":1}}],[\"提供了关于\",{\"1\":{\"130\":1}}],[\"提供了一种在运行时生成类的机制\",{\"1\":{\"92\":1}}],[\"提供者\",{\"1\":{\"73\":1}}],[\"提高了代码的可读性和可维护性\",{\"1\":{\"116\":1}}],[\"提高了代码的书写效率\",{\"1\":{\"79\":1}}],[\"提高代码可读性\",{\"1\":{\"97\":1}}],[\"提高语言的灵活性和效率\",{\"1\":{\"92\":1}}],[\"提高薪水待遇\",{\"1\":{\"68\":1}}],[\"存储库中删除\",{\"1\":{\"73\":1}}],[\"源代码从\",{\"1\":{\"73\":1}}],[\"删除或修改元素\",{\"1\":{\"151\":1}}],[\"删除特定的源代码块\",{\"1\":{\"138\":1}}],[\"删除源条目\",{\"0\":{\"138\":1},\"1\":{\"144\":1}}],[\"删除内容周围附带的白色空间\",{\"1\":{\"99\":1}}],[\"删除后的影响\",{\"1\":{\"73\":1}}],[\"删除线\",{\"1\":{\"12\":1}}],[\"工具命令还可以让您了解和\",{\"1\":{\"130\":1}}],[\"工具可以执行\",{\"1\":{\"130\":1}}],[\"工具的简介\",{\"1\":{\"144\":1}}],[\"工具的简要介绍\",{\"1\":{\"130\":1}}],[\"工具的信息\",{\"1\":{\"144\":2}}],[\"工具的核心概念和使用方法的信息\",{\"1\":{\"130\":1}}],[\"工具\",{\"1\":{\"73\":2,\"144\":2}}],[\"以下操作会导致\",{\"1\":{\"151\":1}}],[\"以及如何使用它们的说明\",{\"1\":{\"144\":1}}],[\"以及所有不在\",{\"1\":{\"16\":1}}],[\"以便重新使用或修改\",{\"1\":{\"140\":1}}],[\"以便将其保留或与他人共享\",{\"1\":{\"139\":1}}],[\"以便更方便地处理多行字符串\",{\"1\":{\"104\":1}}],[\"以前\",{\"1\":{\"110\":2}}],[\"以获得更好的稳定性和支持\",{\"1\":{\"89\":1}}],[\"以在项目中继续使用\",{\"1\":{\"74\":1}}],[\"以上6个模块的聚合模块\",{\"1\":{\"73\":1}}],[\"服务元数据\",{\"1\":{\"73\":1}}],[\"完全删除了以下九个模块\",{\"1\":{\"73\":1}}],[\"完善博客网站功能\",{\"1\":{\"68\":1}}],[\"彻底删除\",{\"0\":{\"73\":1}}],[\"弃用过程\",{\"0\":{\"72\":1}}],[\"同时支持转义序列\",{\"1\":{\"97\":1}}],[\"同时支持\",{\"1\":{\"82\":1}}],[\"同时\",{\"1\":{\"71\":1}}],[\"模块被标记为\",{\"1\":{\"72\":1}}],[\"模块\",{\"1\":{\"71\":1}}],[\"和map\",{\"1\":{\"148\":1}}],[\"和分母\",{\"1\":{\"117\":1}}],[\"和tostring\",{\"1\":{\"114\":1}}],[\"和crlf\",{\"1\":{\"99\":1}}],[\"和\",{\"1\":{\"71\":1,\"72\":1,\"73\":1,\"82\":1,\"100\":1,\"115\":1,\"116\":1,\"144\":1}}],[\"和动画\",{\"1\":{\"23\":1}}],[\"中能够访问所需的类和方法非常有用\",{\"1\":{\"142\":1}}],[\"中的源代码保存到文件中\",{\"1\":{\"139\":1}}],[\"中被移除\",{\"1\":{\"74\":1}}],[\"中\",{\"1\":{\"72\":1,\"86\":1,\"140\":1}}],[\"中移除了\",{\"1\":{\"71\":1}}],[\"中整理学习笔记\",{\"1\":{\"68\":1}}],[\"加油\",{\"1\":{\"68\":3}}],[\"写下我的标语\",{\"1\":{\"68\":1}}],[\"学习硬件知识\",{\"1\":{\"68\":1}}],[\"学习极客时间的课程\",{\"1\":{\"68\":1}}],[\"硬件知识学习\",{\"1\":{\"68\":1}}],[\"目标\",{\"1\":{\"68\":1}}],[\"寻找一份新的工作\",{\"1\":{\"68\":1}}],[\"职业发展\",{\"1\":{\"68\":1}}],[\"坚持下来\",{\"1\":{\"68\":1}}],[\"搭建图床\",{\"1\":{\"68\":1}}],[\"购买域名\",{\"1\":{\"68\":1}}],[\"填充网站内容\",{\"1\":{\"68\":1}}],[\"博客网站改进\",{\"1\":{\"68\":1}}],[\"小目标清单\",{\"0\":{\"68\":1}}],[\"再次推出\",{\"1\":{\"118\":1}}],[\"再次总结\",{\"1\":{\"67\":1}}],[\"再次点击即可缩小\",{\"1\":{\"44\":1}}],[\"说出自己想做的事情\",{\"1\":{\"67\":1}}],[\"先从定一个小目标开始吧\",{\"1\":{\"67\":1}}],[\"盲目的努力使我整个人精神状态不是很好\",{\"1\":{\"67\":1}}],[\"没钱的危机感让我情绪崩溃\",{\"1\":{\"67\":1}}],[\"感觉没有收获什么\",{\"1\":{\"67\":1}}],[\"一维\",{\"1\":{\"98\":3}}],[\"一样\",{\"1\":{\"73\":1}}],[\"一年过去了\",{\"1\":{\"67\":1}}],[\"一个链接\",{\"1\":{\"12\":1}}],[\"一个简单的幻灯片演示与各种小贴士\",{\"1\":{\"7\":1}}],[\"今天是元旦\",{\"1\":{\"67\":1}}],[\"年终回顾\",{\"0\":{\"67\":1}}],[\"6d4b1c02\",{\"1\":{\"132\":1,\"133\":1}}],[\"6\",{\"1\":{\"63\":1,\"83\":1,\"85\":1,\"88\":1,\"136\":1}}],[\"7\",{\"1\":{\"63\":1,\"79\":1,\"83\":1,\"85\":1,\"88\":1,\"136\":1}}],[\"n\",{\"1\":{\"98\":18,\"99\":1,\"144\":1}}],[\"name\",{\"1\":{\"98\":4}}],[\"native\",{\"1\":{\"62\":1}}],[\"nashorn\",{\"1\":{\"57\":1,\"61\":1,\"63\":2}}],[\"negotiation\",{\"1\":{\"63\":1}}],[\"nest\",{\"1\":{\"61\":1}}],[\"newer\",{\"1\":{\"63\":1}}],[\"new\",{\"1\":{\"55\":1,\"63\":2,\"78\":1,\"79\":3,\"98\":2,\"117\":2,\"132\":1,\"136\":1,\"149\":1,\"150\":3}}],[\"no\",{\"1\":{\"61\":1}}],[\"notion\",{\"1\":{\"68\":1}}],[\"not\",{\"1\":{\"60\":1}}],[\"non\",{\"1\":{\"58\":1}}],[\"none\",{\"1\":{\"33\":1}}],[\"null\",{\"1\":{\"151\":3}}],[\"null元素\",{\"1\":{\"151\":1}}],[\"nullpointerexceptions\",{\"1\":{\"58\":1}}],[\"num\",{\"1\":{\"117\":10,\"131\":3,\"136\":3}}],[\"numletters\",{\"1\":{\"88\":1}}],[\"numa\",{\"1\":{\"58\":1}}],[\"number\",{\"1\":{\"55\":1}}],[\"world\",{\"1\":{\"98\":2}}],[\"world<\",{\"1\":{\"98\":2}}],[\"where\",{\"1\":{\"98\":2}}],[\"wednesday\",{\"1\":{\"83\":1,\"85\":1,\"86\":1,\"88\":1}}],[\"web\",{\"1\":{\"54\":1,\"73\":1}}],[\"wsimport\",{\"1\":{\"73\":1}}],[\"wsgen\",{\"1\":{\"73\":1}}],[\"ws\",{\"1\":{\"73\":6}}],[\"wait\",{\"1\":{\"63\":1}}],[\"walking\",{\"1\":{\"63\":1}}],[\"warnings\",{\"1\":{\"56\":1,\"63\":2}}],[\"with\",{\"1\":{\"54\":1,\"61\":1}}],[\"windows\",{\"1\":{\"51\":1,\"56\":1,\"58\":1,\"63\":1}}],[\"8的写法更为紧凑\",{\"1\":{\"149\":1}}],[\"8的集合创建方式\",{\"0\":{\"149\":1}}],[\"8引入了lambda表达式和流式操作\",{\"1\":{\"149\":1}}],[\"8220607\",{\"1\":{\"94\":1}}],[\"8\",{\"0\":{\"64\":1},\"1\":{\"54\":1,\"63\":3,\"83\":1,\"85\":1,\"88\":1,\"130\":1,\"131\":2,\"133\":1,\"136\":1}}],[\"vs\",{\"0\":{\"151\":1}}],[\"void\",{\"1\":{\"87\":1,\"103\":2}}],[\"volatile\",{\"1\":{\"58\":1}}],[\"versions\",{\"1\":{\"63\":1}}],[\"version\",{\"1\":{\"63\":3}}],[\"versioning\",{\"1\":{\"62\":1}}],[\"vector\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"v\",{\"1\":{\"53\":1}}],[\"vars\",{\"0\":{\"133\":1},\"1\":{\"133\":1,\"144\":1}}],[\"var\",{\"1\":{\"78\":3,\"79\":2}}],[\"variable\",{\"1\":{\"61\":1,\"62\":1,\"63\":1,\"77\":1}}],[\"variables\",{\"1\":{\"51\":1}}],[\"validate\",{\"1\":{\"63\":1}}],[\"value\",{\"1\":{\"56\":1,\"110\":2}}],[\"values\",{\"1\":{\"51\":1,\"52\":1}}],[\"virtual\",{\"1\":{\"51\":1,\"52\":1,\"53\":1}}],[\"u0020\",{\"1\":{\"102\":1}}],[\"u000a\",{\"1\":{\"99\":2}}],[\"u000d\",{\"1\":{\"99\":2}}],[\"util\",{\"1\":{\"142\":2}}],[\"ut\",{\"1\":{\"101\":2}}],[\"utf\",{\"1\":{\"54\":1,\"63\":1}}],[\"ui\",{\"1\":{\"63\":1}}],[\"use\",{\"1\":{\"63\":1}}],[\"unsupportedoperationexception\",{\"1\":{\"151\":1}}],[\"unmodifiablemap\",{\"1\":{\"149\":1,\"150\":1}}],[\"unmodifiableset\",{\"1\":{\"149\":1,\"150\":1}}],[\"unmodifiablelist\",{\"1\":{\"149\":1,\"150\":1}}],[\"unit\",{\"1\":{\"63\":1}}],[\"unified\",{\"1\":{\"63\":3}}],[\"unicode\",{\"1\":{\"61\":1,\"62\":1,\"63\":2}}],[\"unix\",{\"1\":{\"56\":1}}],[\"unused\",{\"1\":{\"59\":1,\"60\":1}}],[\"uncommit\",{\"1\":{\"59\":1}}],[\"unnamed\",{\"1\":{\"51\":2}}],[\"update\",{\"1\":{\"63\":1}}],[\"updates\",{\"1\":{\"63\":3}}],[\"up\",{\"1\":{\"25\":1}}],[\"put\",{\"1\":{\"150\":3}}],[\"public\",{\"1\":{\"103\":2,\"110\":2,\"115\":3,\"116\":7,\"117\":3,\"131\":3,\"136\":3}}],[\"p>\",{\"1\":{\"98\":2}}],[\"performcomplexcalculation\",{\"1\":{\"88\":1}}],[\"performance\",{\"1\":{\"63\":1}}],[\"platform\",{\"1\":{\"63\":3}}],[\"pkcs12\",{\"1\":{\"63\":1}}],[\"phase\",{\"1\":{\"63\":1}}],[\"path\",{\"1\":{\"144\":6}}],[\"pattern\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1}}],[\"patterns\",{\"1\":{\"51\":2,\"52\":1,\"53\":1}}],[\"pagecount\",{\"1\":{\"117\":2}}],[\"parseint\",{\"1\":{\"149\":1}}],[\"parser\",{\"1\":{\"63\":1}}],[\"parallel\",{\"1\":{\"62\":1}}],[\"parallelscavenge\",{\"1\":{\"58\":1}}],[\"parameters\",{\"1\":{\"61\":1}}],[\"pack200\",{\"1\":{\"58\":1,\"61\":1}}],[\"packaging\",{\"1\":{\"56\":1,\"58\":1,\"63\":1}}],[\"pause\",{\"1\":{\"57\":1,\"60\":1}}],[\"pipeline\",{\"1\":{\"55\":1,\"63\":1}}],[\"pseudo\",{\"1\":{\"55\":1}}],[\"polyglot语言示例\",{\"1\":{\"98\":1}}],[\"poly\",{\"1\":{\"87\":1}}],[\"poly1305\",{\"1\":{\"61\":1}}],[\"point\",{\"1\":{\"55\":1,\"115\":6,\"116\":5}}],[\"ports\",{\"1\":{\"57\":1,\"58\":1}}],[\"port\",{\"1\":{\"51\":1,\"53\":1,\"55\":1,\"56\":2,\"60\":1,\"63\":3}}],[\"private\",{\"1\":{\"115\":2,\"131\":1,\"136\":1}}],[\"println`打印结果\",{\"1\":{\"87\":1}}],[\"println\",{\"1\":{\"83\":4,\"85\":4,\"87\":1,\"103\":2}}],[\"print\",{\"1\":{\"63\":1,\"98\":2,\"103\":2,\"127\":1}}],[\"protocol\",{\"1\":{\"63\":1}}],[\"property\",{\"1\":{\"63\":1}}],[\"proposals\",{\"1\":{\"48\":1}}],[\"project\",{\"1\":{\"63\":1}}],[\"process\",{\"1\":{\"63\":2}}],[\"processing\",{\"1\":{\"56\":1}}],[\"profiling\",{\"1\":{\"61\":1}}],[\"programs\",{\"1\":{\"61\":1}}],[\"promptly\",{\"1\":{\"60\":1}}],[\"prepare\",{\"1\":{\"51\":1,\"63\":1}}],[\"preview\",{\"0\":{\"121\":1},\"1\":{\"51\":6,\"52\":4,\"53\":4,\"54\":1,\"55\":1,\"56\":1,\"57\":3,\"58\":3,\"59\":2,\"60\":1}}],[\"4\",{\"1\":{\"116\":1,\"136\":1,\"151\":2}}],[\"415\",{\"1\":{\"55\":1}}],[\"414\",{\"1\":{\"55\":1}}],[\"412\",{\"1\":{\"55\":1}}],[\"411\",{\"1\":{\"55\":1}}],[\"410\",{\"1\":{\"55\":1}}],[\"419\",{\"1\":{\"54\":1}}],[\"418\",{\"1\":{\"54\":1}}],[\"417\",{\"1\":{\"54\":1}}],[\"416\",{\"1\":{\"54\":1}}],[\"413\",{\"1\":{\"54\":1}}],[\"409\",{\"1\":{\"55\":1}}],[\"407\",{\"1\":{\"55\":1}}],[\"406\",{\"1\":{\"55\":1}}],[\"403\",{\"1\":{\"55\":1}}],[\"408\",{\"1\":{\"54\":1}}],[\"400\",{\"1\":{\"54\":1}}],[\"405\",{\"1\":{\"53\":1}}],[\"421\",{\"1\":{\"54\":1}}],[\"420\",{\"1\":{\"54\":1}}],[\"428\",{\"1\":{\"53\":1}}],[\"427\",{\"1\":{\"53\":1}}],[\"426\",{\"1\":{\"53\":1}}],[\"425\",{\"1\":{\"53\":1}}],[\"424\",{\"1\":{\"53\":1}}],[\"422\",{\"1\":{\"53\":1}}],[\"429\",{\"1\":{\"52\":1}}],[\"453\",{\"1\":{\"51\":1}}],[\"452\",{\"1\":{\"51\":1}}],[\"451\",{\"1\":{\"51\":1}}],[\"449\",{\"1\":{\"51\":1}}],[\"448\",{\"1\":{\"51\":1}}],[\"446\",{\"1\":{\"51\":1}}],[\"445\",{\"1\":{\"51\":1}}],[\"444\",{\"1\":{\"51\":1}}],[\"443\",{\"1\":{\"51\":1}}],[\"442\",{\"1\":{\"51\":1}}],[\"441\",{\"1\":{\"51\":1}}],[\"440\",{\"1\":{\"51\":1}}],[\"438\",{\"1\":{\"52\":1}}],[\"437\",{\"1\":{\"52\":1}}],[\"436\",{\"1\":{\"52\":1}}],[\"434\",{\"1\":{\"52\":1}}],[\"433\",{\"1\":{\"52\":1}}],[\"432\",{\"1\":{\"52\":1}}],[\"439\",{\"1\":{\"51\":1}}],[\"431\",{\"1\":{\"51\":1}}],[\"430\",{\"1\":{\"51\":1}}],[\"zgc\",{\"1\":{\"51\":1,\"56\":1,\"57\":1,\"58\":2,\"59\":1,\"61\":1}}],[\"zoom\",{\"1\":{\"33\":1}}],[\"getmessage\",{\"1\":{\"131\":1,\"132\":1,\"136\":2}}],[\"getter\",{\"1\":{\"115\":1}}],[\"getenginebyname\",{\"1\":{\"98\":2}}],[\"generated\",{\"1\":{\"63\":1}}],[\"generate\",{\"1\":{\"63\":1}}],[\"generation\",{\"1\":{\"62\":1}}],[\"generational\",{\"1\":{\"51\":1}}],[\"generators\",{\"1\":{\"55\":1}}],[\"gtk\",{\"1\":{\"63\":1}}],[\"gstreamer\",{\"1\":{\"63\":1}}],[\"ghash\",{\"1\":{\"63\":1}}],[\"gcd\",{\"1\":{\"117\":8}}],[\"gc\",{\"1\":{\"58\":1,\"62\":1,\"63\":2}}],[\"g1\",{\"1\":{\"58\":1,\"60\":2,\"62\":1,\"63\":2}}],[\"github\",{\"1\":{\"56\":1}}],[\"git\",{\"1\":{\"56\":1}}],[\"garbage\",{\"1\":{\"57\":2,\"58\":1,\"60\":1,\"61\":2,\"62\":1,\"63\":2}}],[\"ga\",{\"0\":{\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1}}],[\"graphics\",{\"1\":{\"63\":2}}],[\"green\",{\"1\":{\"27\":2,\"102\":1}}],[\"grow\",{\"1\":{\"27\":1}}],[\"详细了解java\",{\"1\":{\"48\":1}}],[\"跟随我们一起深入了解java的最新进展\",{\"1\":{\"48\":1}}],[\"希望大家能够关注并收藏起来\",{\"1\":{\"48\":1}}],[\"会持续不断地发布相关内容\",{\"1\":{\"48\":1}}],[\"会让文字在不超出幻灯片范围的情况下尽可能大\",{\"1\":{\"18\":1}}],[\"这种方式繁琐且不够直观\",{\"1\":{\"150\":1}}],[\"这种自动连接的特性让代码更加清晰\",{\"1\":{\"103\":1}}],[\"这使得集合的初始化过程变得更加流畅和具有函数式编程的特性\",{\"1\":{\"149\":1}}],[\"这样一行代码就完成了整个集合的创建和初始化过程\",{\"1\":{\"148\":1}}],[\"这表明已经导入了\",{\"1\":{\"142\":1}}],[\"这对于确保您在\",{\"1\":{\"142\":1}}],[\"这将显示\",{\"1\":{\"144\":1}}],[\"这将以退出代码\",{\"1\":{\"143\":1}}],[\"这将重置\",{\"1\":{\"141\":1}}],[\"这将导入之前保存的\",{\"1\":{\"140\":1}}],[\"这将把当前所有的源代码保存到一个名为\",{\"1\":{\"139\":1}}],[\"这将删除之前定义的\",{\"1\":{\"138\":1}}],[\"这将打开编辑器\",{\"1\":{\"137\":1}}],[\"这些改进包括list\",{\"1\":{\"148\":1}}],[\"这些\",{\"1\":{\"130\":1}}],[\"这些小块的\",{\"1\":{\"130\":1}}],[\"这是因为记录类的隐式声明的\",{\"1\":{\"117\":1}}],[\"这是一个不良风格的代码\",{\"1\":{\"117\":1}}],[\"这是一个有着\",{\"1\":{\"12\":1}}],[\"这是一个\",{\"0\":{\"12\":1}}],[\"这里\",{\"1\":{\"109\":1}}],[\"这个声明等同于传统的构造函数形式\",{\"1\":{\"117\":1}}],[\"这个强制转换通常是在\",{\"1\":{\"108\":1}}],[\"这个专栏将详细解读从java\",{\"1\":{\"48\":1}}],[\"这一新特性\",{\"1\":{\"97\":1}}],[\"这一特性尤其在lambda表达式\",{\"1\":{\"79\":1}}],[\"为了管理少量值的不可变数据\",{\"1\":{\"115\":1}}],[\"为了更精细地控制换行符和空格的处理\",{\"1\":{\"100\":1}}],[\"为了帮助大家跟上最新的技术潮流\",{\"1\":{\"48\":1}}],[\"为开发人员提供更直观\",{\"1\":{\"97\":1}}],[\"为开发者提供了适应期\",{\"1\":{\"72\":1}}],[\"为之努力\",{\"1\":{\"3\":1}}],[\"持续连载\",{\"0\":{\"48\":1}}],[\"前沿特性解读系列\",{\"0\":{\"48\":1}}],[\"前提就是要有把握\",{\"1\":{\"3\":1}}],[\"9引入了一些便利的工厂方法\",{\"1\":{\"148\":1}}],[\"9引入了一项令人期待的新特性\",{\"1\":{\"147\":1}}],[\"9的集合创建方式\",{\"0\":{\"148\":1}}],[\"9为我们提供了一些全新的静态工厂方法\",{\"1\":{\"147\":1}}],[\"9\",{\"0\":{\"48\":1,\"63\":1,\"127\":1,\"147\":1,\"226\":1},\"1\":{\"48\":1,\"72\":1,\"73\":1,\"83\":1,\"85\":1,\"127\":1,\"129\":1}}],[\"结束switch表达式的执行\",{\"1\":{\"88\":1}}],[\"结束\",{\"0\":{\"45\":1}}],[\"的主要帮助信息\",{\"1\":{\"144\":1}}],[\"的评估上下文选项的说明\",{\"1\":{\"144\":1}}],[\"的输入编辑的说明\",{\"1\":{\"144\":1}}],[\"的帮助信息\",{\"1\":{\"144\":1}}],[\"的状态\",{\"1\":{\"141\":1}}],[\"的文件中\",{\"1\":{\"139\":1}}],[\"的目标是提供一个轻量级\",{\"1\":{\"127\":1}}],[\"的问题\",{\"1\":{\"115\":1}}],[\"的第一件事\",{\"1\":{\"108\":1}}],[\"的增强语法\",{\"1\":{\"107\":1}}],[\"的作用域延续到\",{\"1\":{\"86\":1}}],[\"的局部变量类型推断使得代码更加精炼\",{\"1\":{\"79\":1}}],[\"的钻石操作符\",{\"1\":{\"79\":1}}],[\"的同时点击幻灯片的任何元素\",{\"1\":{\"44\":1}}],[\"的段落\",{\"1\":{\"12\":1}}],[\"缩放\",{\"0\":{\"44\":1}}],[\"全屏模式\",{\"0\":{\"42\":1}}],[\"override\",{\"1\":{\"116\":3}}],[\"overhead\",{\"1\":{\"61\":1}}],[\"other\",{\"1\":{\"115\":3}}],[\"obj\",{\"1\":{\"98\":2,\"108\":2,\"109\":1,\"110\":6,\"116\":1}}],[\"objects\",{\"1\":{\"63\":1,\"103\":2,\"115\":1}}],[\"object\",{\"1\":{\"63\":1,\"98\":2,\"103\":2,\"110\":2,\"115\":1,\"116\":1}}],[\"order\",{\"1\":{\"98\":2}}],[\"org\",{\"1\":{\"94\":1}}],[\"orbd\",{\"1\":{\"73\":1}}],[\"ocsp\",{\"1\":{\"63\":1}}],[\"older\",{\"1\":{\"63\":1}}],[\"open\",{\"0\":{\"140\":1},\"1\":{\"140\":2,\"144\":1}}],[\"openjdk\",{\"1\":{\"48\":1,\"73\":1,\"94\":1}}],[\"operator\",{\"1\":{\"79\":2}}],[\"op\",{\"1\":{\"61\":1}}],[\"one\",{\"1\":{\"60\":1,\"87\":1}}],[\"on\",{\"1\":{\"58\":2,\"62\":1,\"63\":3}}],[\"of\",{\"0\":{\"151\":1},\"1\":{\"51\":1,\"63\":3,\"148\":6,\"149\":3,\"151\":6}}],[\"o\",{\"1\":{\"40\":1,\"63\":1,\"103\":4,\"115\":3}}],[\"out\",{\"1\":{\"25\":3,\"83\":4,\"85\":4,\"87\":2,\"103\":2}}],[\"或者键入以下命令之一\",{\"1\":{\"144\":1}}],[\"或\",{\"1\":{\"40\":1,\"42\":1,\"130\":2,\"144\":2}}],[\"equals\",{\"1\":{\"110\":3,\"115\":2,\"116\":1,\"117\":2}}],[\"et\",{\"1\":{\"101\":2}}],[\"eiusmod\",{\"1\":{\"101\":2}}],[\"employee\",{\"1\":{\"98\":2}}],[\"emp\",{\"1\":{\"98\":4}}],[\"e3\",{\"1\":{\"87\":1}}],[\"e2\",{\"1\":{\"87\":1}}],[\"e1\",{\"1\":{\"87\":1}}],[\"ecmascript\",{\"1\":{\"63\":1}}],[\"eval\",{\"1\":{\"63\":1,\"98\":2,\"127\":1}}],[\"event\",{\"1\":{\"58\":1}}],[\"exit\",{\"0\":{\"143\":1},\"1\":{\"143\":2,\"144\":1}}],[\"extension\",{\"1\":{\"63\":1}}],[\"extensions\",{\"1\":{\"62\":1}}],[\"expression\",{\"1\":{\"87\":1,\"144\":1}}],[\"expressions\",{\"1\":{\"58\":1,\"59\":1,\"60\":1}}],[\"experimental\",{\"1\":{\"55\":1,\"60\":1,\"61\":1,\"62\":1}}],[\"ee\",{\"1\":{\"61\":1,\"71\":1,\"72\":1,\"73\":1}}],[\"epsilon\",{\"1\":{\"61\":1}}],[\"editor|start|feedback|mode|prompt|truncation|format\",{\"1\":{\"144\":1}}],[\"edit编辑下\",{\"1\":{\"137\":1}}],[\"edit\",{\"0\":{\"137\":1},\"1\":{\"137\":1,\"144\":1}}],[\"eddsa\",{\"1\":{\"57\":1}}],[\"edwards\",{\"1\":{\"57\":1}}],[\"elit\",{\"1\":{\"101\":2}}],[\"elide\",{\"1\":{\"63\":1}}],[\"elastic\",{\"1\":{\"56\":1}}],[\"element\",{\"1\":{\"9\":1}}],[\"env\",{\"1\":{\"144\":2}}],[\"engine\",{\"1\":{\"57\":1,\"61\":1,\"63\":1,\"98\":4}}],[\"enable\",{\"1\":{\"56\":1,\"63\":1}}],[\"encapsulate\",{\"1\":{\"55\":1,\"56\":1,\"63\":1}}],[\"encapsulation\",{\"1\":{\"51\":1}}],[\"enhanced\",{\"1\":{\"55\":1,\"63\":2}}],[\"enhancement\",{\"1\":{\"48\":1}}],[\"esc\",{\"1\":{\"40\":1}}],[\"预览模式\",{\"0\":{\"40\":1}}],[\"+\",{\"1\":{\"38\":2,\"58\":1,\"98\":14,\"101\":2,\"103\":1,\"116\":5,\"130\":1,\"132\":1,\"136\":1}}],[\"x=\",{\"1\":{\"115\":1,\"116\":1}}],[\"xjc\",{\"1\":{\"73\":1}}],[\"xml\",{\"1\":{\"63\":1,\"73\":7}}],[\"xerces\",{\"1\":{\"63\":1}}],[\"x86\",{\"1\":{\"51\":1}}],[\"x\",{\"1\":{\"38\":2,\"115\":10,\"116\":9,\"117\":9,\"130\":3,\"131\":2,\"132\":2,\"133\":1,\"136\":3}}],[\"插件\",{\"1\":{\"38\":1}}],[\"插件后\",{\"1\":{\"14\":1,\"15\":1}}],[\"代码称为\",{\"1\":{\"130\":1}}],[\"代码会更加简洁\",{\"1\":{\"110\":1}}],[\"代码\",{\"0\":{\"38\":1},\"1\":{\"130\":1}}],[\"代码块会自动高亮\",{\"1\":{\"14\":1}}],[\"功能\",{\"0\":{\"36\":1,\"37\":1,\"39\":1,\"41\":1,\"43\":1}}],[\"可变性\",{\"1\":{\"151\":1}}],[\"可以使用\",{\"1\":{\"151\":1}}],[\"可以通过指定名称或\",{\"1\":{\"138\":1}}],[\"可以通过配置中的\",{\"1\":{\"33\":1}}],[\"可以看到之前在jshell中输入的内容清单\",{\"1\":{\"136\":1}}],[\"可以确保每行长度恰好为六个字符\",{\"1\":{\"102\":1}}],[\"可以作为栅栏\",{\"1\":{\"102\":1}}],[\"可能的值\",{\"1\":{\"33\":1}}],[\"也被剥离\",{\"1\":{\"71\":1}}],[\"也可以通过在特定幻灯片添加\",{\"1\":{\"33\":1}}],[\"也不会有好运会落在我身上\",{\"1\":{\"3\":1}}],[\"选项全局设置\",{\"1\":{\"33\":1}}],[\"第一个显示\",{\"1\":{\"31\":1}}],[\"第二个显示\",{\"1\":{\"31\":2}}],[\"最终\",{\"1\":{\"118\":1}}],[\"最终定稿于jdk\",{\"1\":{\"111\":1}}],[\"最后\",{\"1\":{\"68\":1,\"144\":1}}],[\"最后显示\",{\"1\":{\"31\":1}}],[\"最新版本的各种有趣的新特性\",{\"1\":{\"48\":1}}],[\"最新发布\",{\"0\":{\"0\":1}}],[\"不允许包含\",{\"1\":{\"151\":1}}],[\"不可变集合的快捷创建方法\",{\"0\":{\"147\":1}}],[\"不是空引用\",{\"1\":{\"117\":1}}],[\"不仅如此\",{\"1\":{\"110\":1}}],[\"不能直接被其他类的字节码访问\",{\"1\":{\"92\":1}}],[\"不能将此变量命名为\",{\"1\":{\"86\":2}}],[\"不能复合声明多个变量\",{\"1\":{\"79\":1}}],[\"不能用于定义成员变量\",{\"1\":{\"79\":1}}],[\"不再有命令行标志能够启用它们\",{\"1\":{\"73\":1}}],[\"不同元素可以有相同的动画顺序\",{\"1\":{\"31\":1}}],[\"不达目的不罢休\",{\"1\":{\"3\":1}}],[\"属性局部设置\",{\"1\":{\"33\":1}}],[\"属性改变元素的动画顺序\",{\"1\":{\"31\":1}}],[\"属性自定义幻灯片背景\",{\"1\":{\"21\":1}}],[\"顺序\",{\"0\":{\"31\":1}}],[\"渐变\",{\"0\":{\"32\":1,\"33\":1,\"34\":1}}],[\"渐出\",{\"1\":{\"29\":1}}],[\"渐入\",{\"1\":{\"29\":1}}],[\"元素\",{\"1\":{\"151\":2}}],[\"元素产生过渡动画效果\",{\"1\":{\"35\":1}}],[\"元素使其拥有多个动画片段\",{\"1\":{\"29\":1}}],[\"元素上添加属性\",{\"1\":{\"9\":1}}],[\"l2\",{\"1\":{\"87\":1}}],[\"l1\",{\"1\":{\"87\":1}}],[\"l\",{\"0\":{\"85\":1},\"1\":{\"85\":1}}],[\"life\",{\"0\":{\"157\":1}}],[\"literal\",{\"1\":{\"101\":1}}],[\"listwithnull\",{\"1\":{\"151\":1}}],[\"list<integer>\",{\"1\":{\"151\":5}}],[\"list<string>\",{\"1\":{\"79\":2,\"148\":1,\"149\":1,\"150\":1}}],[\"list列出了输入的条目信息\",{\"1\":{\"137\":1}}],[\"list\",{\"0\":{\"136\":1,\"151\":1},\"1\":{\"78\":2,\"79\":3,\"130\":1,\"136\":1,\"144\":2,\"148\":1,\"151\":6}}],[\"linking\",{\"1\":{\"63\":1}}],[\"linker\",{\"1\":{\"56\":1,\"63\":1}}],[\"lines\",{\"1\":{\"104\":1}}],[\"line\",{\"1\":{\"63\":1}}],[\"lint\",{\"1\":{\"63\":1}}],[\"linux\",{\"1\":{\"44\":1,\"53\":1,\"56\":1,\"63\":4}}],[\"labore\",{\"1\":{\"101\":2}}],[\"last\",{\"1\":{\"98\":4}}],[\"layout\",{\"1\":{\"63\":1}}],[\"layer\",{\"1\":{\"61\":1,\"63\":2}}],[\"launch\",{\"1\":{\"61\":1,\"63\":1}}],[\"lambda\",{\"1\":{\"61\":1,\"82\":1,\"87\":1}}],[\"latency\",{\"1\":{\"57\":1,\"61\":1}}],[\"language\",{\"1\":{\"56\":1,\"62\":1,\"63\":1}}],[\"lorem\",{\"1\":{\"101\":2}}],[\"loop\",{\"1\":{\"63\":1,\"127\":1}}],[\"logging\",{\"1\":{\"63\":3}}],[\"logo\",{\"1\":{\"19\":1}}],[\"locale\",{\"1\":{\"63\":1}}],[\"local\",{\"1\":{\"61\":1,\"62\":2,\"77\":1}}],[\"locking\",{\"1\":{\"57\":1,\"63\":1}}],[\"low\",{\"1\":{\"57\":2,\"60\":1,\"61\":2}}],[\"loading\",{\"1\":{\"51\":1}}],[\"leverage\",{\"1\":{\"63\":1}}],[\"level\",{\"1\":{\"63\":1}}],[\"legacy\",{\"1\":{\"57\":1,\"59\":1}}],[\"let\",{\"1\":{\"38\":3}}],[\"left\",{\"1\":{\"25\":1}}],[\"drop\",{\"0\":{\"138\":1},\"1\":{\"138\":2,\"144\":1}}],[\"drbg\",{\"1\":{\"63\":1}}],[\"day\",{\"1\":{\"83\":1,\"85\":1,\"86\":1,\"88\":1}}],[\"datagram\",{\"1\":{\"63\":1}}],[\"datagramsocket\",{\"1\":{\"57\":1}}],[\"data\",{\"1\":{\"21\":1,\"31\":1,\"33\":1,\"35\":1,\"62\":1,\"63\":2,\"149\":4}}],[\"dtls\",{\"1\":{\"63\":1}}],[\"diamond\",{\"1\":{\"79\":2}}],[\"diagnostic\",{\"1\":{\"63\":1}}],[\"disable\",{\"1\":{\"57\":1,\"63\":1}}],[\"disallow\",{\"1\":{\"51\":1}}],[\"digital\",{\"1\":{\"57\":1}}],[\"do\",{\"1\":{\"101\":2}}],[\"dolore\",{\"1\":{\"101\":2}}],[\"dolor\",{\"1\":{\"101\":2}}],[\"doclet\",{\"1\":{\"63\":1}}],[\"doclint\",{\"1\":{\"63\":1}}],[\"documentation\",{\"1\":{\"54\":1,\"63\":1}}],[\"domain\",{\"1\":{\"56\":1}}],[\"down\",{\"1\":{\"25\":1}}],[\"dynamic\",{\"1\":{\"51\":1,\"59\":1,\"61\":1,\"63\":1}}],[\"demon\",{\"1\":{\"117\":1}}],[\"demos\",{\"1\":{\"63\":1}}],[\"denom\",{\"1\":{\"117\":9}}],[\"defined\",{\"1\":{\"63\":1}}],[\"default\",{\"1\":{\"54\":1,\"56\":1,\"60\":1,\"63\":3,\"86\":1,\"87\":2}}],[\"desktop\",{\"1\":{\"63\":1}}],[\"deserialization\",{\"1\":{\"55\":1}}],[\"deprecation\",{\"1\":{\"63\":2}}],[\"deprecated\",{\"1\":{\"63\":1,\"72\":1}}],[\"deprecate\",{\"1\":{\"51\":1,\"54\":1,\"55\":2,\"57\":2,\"58\":2,\"61\":2,\"63\":2}}],[\"devices\",{\"1\":{\"62\":1}}],[\"development\",{\"0\":{\"49\":1,\"50\":1}}],[\"d\",{\"1\":{\"38\":1,\"115\":2}}],[\"false\",{\"1\":{\"110\":1,\"115\":1}}],[\"failure\",{\"1\":{\"63\":1}}],[\"factory\",{\"1\":{\"63\":1,\"147\":1}}],[\"fade\",{\"1\":{\"25\":8,\"33\":1}}],[\"full\",{\"1\":{\"62\":1}}],[\"function\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"98\":2}}],[\"flag\",{\"1\":{\"63\":1}}],[\"flight\",{\"1\":{\"61\":1}}],[\"floating\",{\"1\":{\"55\":1}}],[\"friday\",{\"1\":{\"83\":1,\"85\":1,\"88\":1}}],[\"framework\",{\"1\":{\"63\":1}}],[\"fragment\",{\"1\":{\"23\":1,\"31\":1}}],[\"from\",{\"1\":{\"56\":1,\"60\":1,\"98\":2}}],[\"features\",{\"1\":{\"56\":1,\"63\":2}}],[\"fields\",{\"1\":{\"116\":1}}],[\"final\",{\"1\":{\"115\":2,\"116\":3}}],[\"finalization\",{\"1\":{\"54\":1}}],[\"filter\",{\"1\":{\"63\":1}}],[\"filters\",{\"1\":{\"55\":1}}],[\"files\",{\"1\":{\"63\":2}}],[\"file\",{\"1\":{\"61\":2,\"63\":1}}],[\"fifth\",{\"1\":{\"52\":1}}],[\"fit\",{\"1\":{\"18\":1}}],[\"font\",{\"1\":{\"63\":1}}],[\"fourth\",{\"1\":{\"52\":1,\"53\":1}}],[\"format\",{\"1\":{\"115\":1}}],[\"formatted\",{\"1\":{\"104\":1}}],[\"forest\",{\"1\":{\"62\":1}}],[\"foreign\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":2,\"57\":1,\"58\":1}}],[\"for\",{\"1\":{\"51\":2,\"52\":1,\"53\":1,\"54\":2,\"55\":3,\"56\":2,\"57\":2,\"58\":2,\"60\":1,\"61\":1,\"62\":1,\"63\":9,\"147\":1}}],[\"f11\",{\"1\":{\"42\":1}}],[\"f\",{\"1\":{\"42\":1}}],[\"bean存在\",{\"1\":{\"115\":1}}],[\"bean问题\",{\"0\":{\"115\":1}}],[\"beaninfo\",{\"1\":{\"63\":1}}],[\"book\",{\"1\":{\"117\":2}}],[\"boolean\",{\"1\":{\"110\":2,\"115\":1,\"116\":1}}],[\"body>\",{\"1\":{\"98\":2}}],[\"browse\",{\"1\":{\"94\":1}}],[\"break\",{\"1\":{\"83\":4,\"86\":2}}],[\"bugs\",{\"1\":{\"94\":1}}],[\"build\",{\"1\":{\"63\":1}}],[\"buffers\",{\"1\":{\"58\":1}}],[\"bind\",{\"1\":{\"73\":3}}],[\"biased\",{\"1\":{\"57\":1}}],[\"bit\",{\"1\":{\"51\":1}}],[\"based\",{\"1\":{\"56\":1,\"61\":1,\"62\":2,\"63\":1}}],[\"background\",{\"1\":{\"21\":1}}],[\"byte\",{\"1\":{\"58\":1}}],[\"by\",{\"1\":{\"54\":1,\"56\":1,\"63\":3,\"98\":2}}],[\"b\",{\"1\":{\"38\":1,\"148\":1,\"149\":1,\"150\":1}}],[\"b|c\",{\"1\":{\"38\":1}}],[\"blue\",{\"1\":{\"27\":2,\"102\":1}}],[\"blocks\",{\"1\":{\"57\":1,\"58\":1,\"59\":1,\"97\":1}}],[\"block\",{\"1\":{\"13\":1}}],[\"背景\",{\"0\":{\"21\":1}}],[\"使得创建和初始化集合对象变得更加简洁和方便\",{\"1\":{\"148\":1}}],[\"使得创建不可变集合的过程更为优雅\",{\"1\":{\"147\":1}}],[\"使得\",{\"1\":{\"127\":1}}],[\"使得字符串的拼接变得更加简洁\",{\"1\":{\"103\":1}}],[\"使得代码更加简洁\",{\"1\":{\"148\":1}}],[\"使得代码更加简洁清晰\",{\"1\":{\"79\":1}}],[\"使得代码更加灵活\",{\"1\":{\"82\":1}}],[\"使相同的\",{\"1\":{\"35\":1}}],[\"使它们填充满幻灯片垂直方向上的剩余空间\",{\"1\":{\"19\":1}}],[\"使用不可变数据结构\",{\"1\":{\"151\":1}}],[\"使用record关键字\",{\"1\":{\"116\":1}}],[\"使用模式匹配\",{\"1\":{\"110\":1}}],[\"使用yield返回计算结果\",{\"1\":{\"88\":1}}],[\"使用\",{\"1\":{\"9\":3,\"98\":6,\"101\":1,\"102\":1,\"116\":1,\"130\":1,\"138\":1,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1}}],[\"c2\",{\"1\":{\"117\":1}}],[\"cn\",{\"1\":{\"117\":2}}],[\"c1\",{\"1\":{\"117\":2}}],[\"city\",{\"1\":{\"98\":2}}],[\"c++\",{\"1\":{\"63\":1}}],[\"c++14\",{\"1\":{\"56\":1}}],[\"case\",{\"0\":{\"85\":1},\"1\":{\"82\":1,\"83\":7,\"85\":5,\"86\":4,\"87\":4,\"88\":4}}],[\"catalogs\",{\"1\":{\"63\":1}}],[\"cache\",{\"1\":{\"63\":1}}],[\"css\",{\"1\":{\"63\":1}}],[\"cpu\",{\"1\":{\"63\":1}}],[\"critical\",{\"1\":{\"63\":1}}],[\"create\",{\"1\":{\"63\":1}}],[\"cryptographic\",{\"1\":{\"61\":1}}],[\"certificates\",{\"1\":{\"62\":1,\"63\":1}}],[\"chacha20\",{\"1\":{\"61\":1}}],[\"channels\",{\"1\":{\"56\":1}}],[\"cldr\",{\"1\":{\"63\":1}}],[\"client\",{\"1\":{\"61\":1,\"63\":1}}],[\"classes\",{\"1\":{\"51\":1,\"55\":1,\"56\":2,\"57\":2,\"92\":1}}],[\"class\",{\"0\":{\"25\":1,\"27\":1},\"1\":{\"18\":1,\"19\":1,\"23\":1,\"61\":1,\"62\":1,\"63\":1,\"115\":1,\"116\":1,\"131\":1,\"135\":1,\"136\":1,\"144\":3}}],[\"cds\",{\"1\":{\"59\":1,\"60\":1,\"63\":1}}],[\"cms\",{\"1\":{\"58\":1,\"63\":1}}],[\"curve448\",{\"1\":{\"61\":1}}],[\"curve25519\",{\"1\":{\"61\":1}}],[\"curve\",{\"1\":{\"57\":1}}],[\"current\",{\"1\":{\"27\":3}}],[\"colors\",{\"1\":{\"102\":1}}],[\"collect\",{\"1\":{\"149\":3}}],[\"collectors\",{\"1\":{\"149\":3}}],[\"collector\",{\"1\":{\"57\":2,\"58\":1,\"60\":1,\"61\":2,\"62\":1,\"63\":2}}],[\"collections\",{\"1\":{\"51\":1,\"60\":1,\"63\":1,\"147\":1,\"149\":3,\"150\":3}}],[\"cosnaming\",{\"1\":{\"73\":1}}],[\"coin\",{\"1\":{\"63\":1}}],[\"correctly\",{\"1\":{\"63\":1}}],[\"corba\",{\"1\":{\"61\":1,\"71\":1,\"72\":1,\"73\":4}}],[\"core\",{\"1\":{\"54\":1}}],[\"compact\",{\"1\":{\"63\":1}}],[\"compile\",{\"1\":{\"63\":1}}],[\"compiler\",{\"1\":{\"55\":1,\"62\":1,\"63\":3}}],[\"compilation\",{\"1\":{\"63\":2}}],[\"command\",{\"1\":{\"63\":1}}],[\"commands\",{\"1\":{\"63\":1}}],[\"committed\",{\"1\":{\"60\":1}}],[\"combinations\",{\"1\":{\"63\":1}}],[\"combination\",{\"1\":{\"58\":1}}],[\"code\",{\"1\":{\"54\":1,\"61\":1,\"63\":2,\"103\":2}}],[\"convenience\",{\"1\":{\"63\":1,\"147\":1}}],[\"convex\",{\"1\":{\"33\":1}}],[\"consectetur\",{\"1\":{\"101\":2}}],[\"consolidate\",{\"1\":{\"62\":1}}],[\"constructor\",{\"1\":{\"116\":1}}],[\"constants\",{\"1\":{\"60\":1,\"61\":1}}],[\"const\",{\"1\":{\"14\":1}}],[\"contended\",{\"1\":{\"63\":1}}],[\"context\",{\"1\":{\"55\":1,\"144\":1}}],[\"controls\",{\"1\":{\"63\":1}}],[\"control\",{\"1\":{\"61\":1,\"63\":1}}],[\"concatenation\",{\"1\":{\"63\":1}}],[\"concave\",{\"1\":{\"33\":1}}],[\"concurrent\",{\"1\":{\"56\":1,\"58\":1,\"63\":1}}],[\"concurrency\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"63\":1}}],[\"ctrl\",{\"1\":{\"44\":1}}],[\"c\",{\"1\":{\"38\":2,\"148\":1,\"149\":1,\"150\":1}}],[\"r1\",{\"1\":{\"117\":5}}],[\"r2\",{\"1\":{\"117\":2}}],[\"rational\",{\"1\":{\"117\":5}}],[\"random\",{\"1\":{\"55\":1}}],[\"rsa\",{\"1\":{\"63\":1}}],[\"run\",{\"1\":{\"63\":2}}],[\"root\",{\"1\":{\"62\":1}}],[\"rmi\",{\"1\":{\"55\":1,\"57\":1}}],[\"risc\",{\"1\":{\"53\":1}}],[\"right\",{\"1\":{\"25\":1}}],[\"rerun\",{\"1\":{\"144\":4}}],[\"reload\",{\"1\":{\"144\":2}}],[\"release\",{\"1\":{\"62\":1,\"63\":1}}],[\"repl\",{\"1\":{\"127\":2}}],[\"repository\",{\"1\":{\"62\":1}}],[\"reorganize\",{\"1\":{\"63\":1}}],[\"renderer\",{\"1\":{\"63\":1}}],[\"rendering\",{\"1\":{\"55\":1}}],[\"readline\",{\"1\":{\"144\":1}}],[\"read\",{\"1\":{\"63\":1,\"127\":1}}],[\"return\",{\"1\":{\"60\":1,\"110\":5,\"115\":6,\"116\":3,\"117\":2,\"131\":2,\"136\":2}}],[\"remove\",{\"1\":{\"55\":2,\"57\":2,\"58\":2,\"61\":1,\"62\":1,\"63\":5}}],[\"removal\",{\"1\":{\"51\":1,\"54\":1,\"55\":2,\"57\":1}}],[\"reset\",{\"0\":{\"141\":1},\"1\":{\"141\":2,\"144\":2}}],[\"reserved\",{\"1\":{\"63\":1}}],[\"result\",{\"1\":{\"87\":1}}],[\"resolve\",{\"1\":{\"63\":1}}],[\"resolution\",{\"1\":{\"54\":1,\"63\":1}}],[\"restore\",{\"1\":{\"55\":1,\"144\":2}}],[\"reflection\",{\"1\":{\"54\":1}}],[\"reimplement\",{\"1\":{\"54\":1,\"57\":1,\"59\":1}}],[\"record申明的类\",{\"1\":{\"116\":1}}],[\"record关键字\",{\"1\":{\"116\":1}}],[\"record类声明\",{\"1\":{\"116\":1}}],[\"record类\",{\"0\":{\"114\":1}}],[\"recorder\",{\"1\":{\"61\":1}}],[\"records\",{\"1\":{\"56\":1,\"57\":1,\"58\":1}}],[\"record\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"116\":1,\"117\":6,\"118\":1}}],[\"red\",{\"1\":{\"27\":2,\"102\":1}}],[\"r\",{\"1\":{\"18\":1,\"19\":1,\"117\":3}}],[\"🚀\",{\"1\":{\"48\":1}}],[\"👆\",{\"1\":{\"18\":1,\"19\":1}}],[\"👇\",{\"1\":{\"8\":1}}],[\"布局\",{\"0\":{\"17\":1,\"18\":1,\"19\":1,\"20\":1}}],[\"⚠请注意\",{\"1\":{\"16\":1}}],[\"item3\",{\"1\":{\"148\":2,\"149\":2,\"150\":2}}],[\"item2\",{\"1\":{\"148\":2,\"149\":2,\"150\":2}}],[\"item1\",{\"1\":{\"148\":2,\"149\":2,\"150\":2}}],[\"illegalargumentexception\",{\"1\":{\"117\":1}}],[\"if\",{\"1\":{\"108\":1,\"109\":1,\"110\":1,\"115\":1,\"117\":1}}],[\"ipsum\",{\"1\":{\"101\":2}}],[\"id>\",{\"1\":{\"144\":2}}],[\"id>|\",{\"1\":{\"144\":4}}],[\"id\",{\"1\":{\"98\":4,\"138\":1,\"144\":4}}],[\"idlj\",{\"1\":{\"73\":1}}],[\"i\",{\"1\":{\"63\":1,\"110\":2}}],[\"immutablemap\",{\"1\":{\"148\":1,\"149\":1}}],[\"immutableset\",{\"1\":{\"148\":1,\"149\":1}}],[\"immutablelist\",{\"1\":{\"148\":1,\"149\":1,\"151\":4}}],[\"image\",{\"1\":{\"63\":1}}],[\"images\",{\"1\":{\"63\":2}}],[\"implement\",{\"1\":{\"63\":1}}],[\"implementations\",{\"1\":{\"63\":1}}],[\"imports\",{\"0\":{\"142\":1},\"1\":{\"142\":2,\"144\":1}}],[\"import\",{\"1\":{\"63\":2,\"142\":1}}],[\"improve\",{\"1\":{\"61\":1,\"63\":3}}],[\"info形式记录在类文件的常量池中\",{\"1\":{\"99\":1}}],[\"inference\",{\"1\":{\"62\":1,\"77\":1}}],[\"incididunt\",{\"1\":{\"101\":2}}],[\"incoming\",{\"1\":{\"63\":1}}],[\"incubator\",{\"1\":{\"51\":1,\"52\":3,\"53\":2,\"54\":2,\"55\":2,\"56\":3,\"57\":1,\"58\":2}}],[\"indianapolis\",{\"1\":{\"98\":2}}],[\"indify\",{\"1\":{\"63\":1}}],[\"index\",{\"1\":{\"31\":1}}],[\"instructions\",{\"1\":{\"63\":1}}],[\"instanceof增强\",{\"0\":{\"107\":1}}],[\"instanceof\",{\"0\":{\"108\":1,\"109\":1},\"1\":{\"56\":1,\"57\":1,\"58\":1,\"107\":1,\"108\":2,\"109\":2,\"110\":4,\"115\":1}}],[\"instance\",{\"1\":{\"51\":1}}],[\"intro\",{\"0\":{\"130\":1},\"1\":{\"129\":1,\"130\":4,\"144\":2}}],[\"intrinsics\",{\"1\":{\"61\":1}}],[\"intvalue\",{\"1\":{\"110\":2}}],[\"integer>\",{\"1\":{\"148\":1,\"149\":1,\"150\":1}}],[\"integer\",{\"1\":{\"110\":3,\"149\":1}}],[\"interface\",{\"1\":{\"62\":1,\"63\":1}}],[\"internal\",{\"1\":{\"63\":1}}],[\"internals\",{\"1\":{\"55\":1,\"56\":1}}],[\"interned\",{\"1\":{\"63\":1}}],[\"internet\",{\"1\":{\"54\":1}}],[\"int\",{\"1\":{\"86\":3,\"87\":1,\"88\":2,\"115\":7,\"116\":9,\"117\":15,\"130\":1,\"131\":4,\"133\":3,\"134\":2,\"136\":3}}],[\"into\",{\"1\":{\"62\":1,\"63\":1}}],[\"in\",{\"0\":{\"49\":1,\"50\":1},\"1\":{\"25\":3,\"54\":1,\"63\":4}}],[\"inline\",{\"1\":{\"13\":1}}],[\"i=0\",{\"1\":{\"15\":1}}],[\"snippet>\",{\"1\":{\"144\":1}}],[\"snippets\",{\"1\":{\"54\":1}}],[\"square\",{\"1\":{\"131\":2,\"132\":1,\"134\":1,\"136\":2,\"137\":1}}],[\"sql示例\",{\"1\":{\"98\":1}}],[\"smallpoint\",{\"1\":{\"117\":3}}],[\"smart\",{\"1\":{\"63\":1}}],[\"s\",{\"0\":{\"102\":1},\"1\":{\"100\":1,\"102\":7}}],[\"save\",{\"0\":{\"139\":1},\"1\":{\"139\":2,\"144\":1}}],[\"saturday\",{\"1\":{\"83\":1,\"85\":1,\"88\":1}}],[\"saaj\",{\"1\":{\"73\":1}}],[\"samples\",{\"1\":{\"63\":1}}],[\"s390x\",{\"1\":{\"63\":1}}],[\"system\",{\"1\":{\"63\":2,\"83\":4,\"85\":4,\"87\":1,\"103\":2}}],[\"syntax\",{\"1\":{\"61\":1}}],[\"sunday\",{\"1\":{\"83\":1,\"85\":1,\"88\":1}}],[\"suite\",{\"1\":{\"60\":1}}],[\"sum\",{\"1\":{\"15\":1}}],[\"sweep\",{\"1\":{\"58\":1,\"63\":1}}],[\"switch的模式匹配\",{\"0\":{\"121\":1}}],[\"switch表达式是多态表达式\",{\"1\":{\"87\":1}}],[\"switch表达式的常见形式如下\",{\"1\":{\"87\":1}}],[\"switch表达式\",{\"0\":{\"87\":1}}],[\"switch表达式增强\",{\"0\":{\"82\":1,\"84\":1}}],[\"switch\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"58\":1,\"59\":1,\"60\":1,\"82\":1,\"83\":2,\"85\":1,\"86\":1,\"87\":4,\"88\":1}}],[\"someobject\",{\"1\":{\"110\":3}}],[\"somestring\",{\"1\":{\"108\":1,\"109\":2,\"110\":2}}],[\"source\",{\"1\":{\"61\":1,\"63\":1}}],[\"solaris\",{\"1\":{\"57\":1,\"58\":1}}],[\"socket\",{\"1\":{\"56\":1,\"59\":1}}],[\"shortcuts\",{\"1\":{\"144\":1}}],[\"sha\",{\"1\":{\"63\":2}}],[\"sharing\",{\"1\":{\"62\":1}}],[\"shell\",{\"1\":{\"63\":1}}],[\"shenandoah\",{\"1\":{\"57\":1,\"60\":1}}],[\"shrink\",{\"1\":{\"27\":1}}],[\"scriptenginemanager\",{\"1\":{\"98\":2}}],[\"scriptengine\",{\"1\":{\"98\":2}}],[\"schemagen\",{\"1\":{\"73\":1}}],[\"scheme\",{\"1\":{\"63\":1}}],[\"scalable\",{\"1\":{\"57\":1,\"61\":1}}],[\"scoped\",{\"1\":{\"51\":1,\"52\":1}}],[\"store\",{\"1\":{\"63\":1}}],[\"start\",{\"1\":{\"144\":5}}],[\"startswith\",{\"1\":{\"110\":2}}],[\"static\",{\"1\":{\"87\":1}}],[\"statements\",{\"1\":{\"63\":2}}],[\"stapling\",{\"1\":{\"63\":1}}],[\"standard\",{\"1\":{\"58\":1,\"61\":1}}],[\"stack\",{\"1\":{\"56\":1,\"63\":2}}],[\"stream<string>\",{\"1\":{\"78\":1}}],[\"stream\",{\"1\":{\"78\":2,\"149\":3}}],[\"streaming\",{\"1\":{\"58\":1}}],[\"stretch\",{\"1\":{\"19\":1}}],[\"strongly\",{\"1\":{\"55\":1,\"56\":1}}],[\"structured\",{\"1\":{\"51\":1,\"52\":1,\"53\":1}}],[\"stripindent\",{\"1\":{\"104\":1}}],[\"strict\",{\"1\":{\"55\":1}}],[\"strings\",{\"1\":{\"63\":2}}],[\"string\",{\"1\":{\"51\":1,\"63\":2,\"98\":4,\"99\":1,\"101\":2,\"102\":1,\"103\":2,\"104\":4,\"108\":3,\"109\":1,\"110\":3,\"115\":2,\"116\":1,\"117\":2,\"131\":3,\"133\":1,\"136\":3,\"149\":1}}],[\"strike\",{\"1\":{\"27\":1}}],[\"sparc\",{\"1\":{\"57\":1,\"58\":1}}],[\"specific\",{\"1\":{\"55\":1,\"63\":1}}],[\"spin\",{\"1\":{\"63\":1}}],[\"spi\",{\"1\":{\"54\":1}}],[\"sit\",{\"1\":{\"101\":2}}],[\"simplified\",{\"1\":{\"63\":1}}],[\"simple\",{\"1\":{\"54\":1}}],[\"single\",{\"1\":{\"61\":1,\"62\":1}}],[\"signature\",{\"1\":{\"57\":1}}],[\"sixth\",{\"1\":{\"51\":1}}],[\"set<string>\",{\"1\":{\"148\":1,\"149\":1,\"150\":1}}],[\"set\",{\"1\":{\"144\":1,\"148\":2,\"151\":3}}],[\"setter\",{\"1\":{\"115\":1}}],[\"sed\",{\"1\":{\"101\":2}}],[\"se\",{\"1\":{\"73\":1}}],[\"select\",{\"1\":{\"98\":2}}],[\"selected\",{\"1\":{\"63\":2}}],[\"selection\",{\"1\":{\"63\":1}}],[\"search\",{\"1\":{\"63\":1}}],[\"sealed\",{\"1\":{\"55\":1,\"56\":1,\"57\":1}}],[\"segmented\",{\"1\":{\"63\":1}}],[\"serialization\",{\"1\":{\"63\":1}}],[\"serialold\",{\"1\":{\"58\":1}}],[\"service\",{\"1\":{\"63\":1}}],[\"servertool\",{\"1\":{\"73\":1}}],[\"server\",{\"1\":{\"54\":1}}],[\"sections\",{\"1\":{\"63\":1}}],[\"securerandom\",{\"1\":{\"63\":1}}],[\"secure\",{\"1\":{\"63\":1}}],[\"security\",{\"1\":{\"55\":1,\"61\":1,\"63\":1}}],[\"second\",{\"1\":{\"52\":4,\"54\":2,\"55\":1,\"56\":1,\"57\":3,\"58\":1}}],[\"semantics\",{\"1\":{\"55\":1}}],[\"semi\",{\"1\":{\"25\":1}}],[\"sequenced\",{\"1\":{\"51\":1}}],[\"slideend\",{\"1\":{\"45\":1}}],[\"slide\",{\"1\":{\"9\":1,\"33\":1}}],[\"slidestart\",{\"1\":{\"6\":1}}],[\"03\",{\"0\":{\"52\":1,\"54\":1,\"56\":1,\"58\":1,\"60\":1,\"62\":1,\"64\":1}}],[\"09\",{\"0\":{\"51\":1,\"53\":1,\"55\":1,\"57\":1,\"59\":1,\"61\":1,\"63\":1}}],[\"0\",{\"1\":{\"15\":1,\"63\":4,\"117\":1,\"143\":2,\"149\":1,\"151\":4}}],[\"tn\",{\"1\":{\"117\":1}}],[\"tnamesrv\",{\"1\":{\"73\":1}}],[\"t1\",{\"1\":{\"117\":1}}],[\"tb\",{\"1\":{\"98\":2}}],[\"t\",{\"1\":{\"87\":1}}],[\"tuesday\",{\"1\":{\"83\":1,\"85\":1,\"86\":1,\"88\":1}}],[\"traditionalmap\",{\"1\":{\"150\":6}}],[\"traditionalset\",{\"1\":{\"150\":6}}],[\"traditionallist\",{\"1\":{\"150\":6}}],[\"translateescapes\",{\"1\":{\"104\":1}}],[\"transaction\",{\"1\":{\"73\":1}}],[\"transport\",{\"1\":{\"61\":1,\"63\":1}}],[\"transition\",{\"1\":{\"33\":3}}],[\"true\",{\"1\":{\"117\":1}}],[\"troubleshooting\",{\"1\":{\"63\":1}}],[\"title\",{\"1\":{\"117\":1}}],[\"tips\",{\"1\":{\"101\":1,\"117\":1}}],[\"tiff\",{\"1\":{\"63\":1}}],[\"ti\",{\"1\":{\"63\":1}}],[\"tiered\",{\"1\":{\"63\":1}}],[\"time\",{\"1\":{\"57\":1,\"60\":1,\"62\":1,\"63\":4}}],[\"tag\",{\"1\":{\"62\":1}}],[\"types\",{\"0\":{\"135\":1},\"1\":{\"135\":1,\"144\":1}}],[\"type\",{\"1\":{\"62\":1,\"77\":1}}],[\"tls\",{\"1\":{\"61\":1,\"63\":2}}],[\"two\",{\"1\":{\"60\":1,\"63\":1,\"87\":1}}],[\"tomap\",{\"1\":{\"149\":1}}],[\"toset\",{\"1\":{\"149\":1}}],[\"tostring函数\",{\"1\":{\"116\":1}}],[\"tostring等\",{\"1\":{\"115\":1}}],[\"tostring\",{\"1\":{\"103\":2,\"115\":1,\"116\":1}}],[\"tolist\",{\"1\":{\"149\":1}}],[\"tools\",{\"1\":{\"58\":1,\"61\":1}}],[\"tool\",{\"1\":{\"56\":1,\"58\":1,\"62\":1,\"63\":1}}],[\"to\",{\"1\":{\"51\":1,\"56\":2,\"63\":1}}],[\"this\",{\"1\":{\"115\":2,\"116\":2,\"117\":9,\"131\":1,\"136\":1}}],[\"third\",{\"1\":{\"51\":1,\"53\":1,\"54\":1,\"56\":1}}],[\"throw\",{\"1\":{\"117\":1}}],[\"through语义\",{\"1\":{\"83\":1}}],[\"thread\",{\"1\":{\"56\":1,\"62\":1}}],[\"threads\",{\"1\":{\"51\":1,\"52\":1,\"53\":1}}],[\"thursday\",{\"1\":{\"83\":1,\"85\":1,\"86\":1,\"88\":1}}],[\"the\",{\"1\":{\"51\":2,\"55\":3,\"57\":3,\"58\":4,\"59\":1,\"61\":3,\"62\":2,\"63\":8}}],[\"then\",{\"1\":{\"25\":2}}],[\"theta\",{\"1\":{\"15\":2}}],[\"terminator\",{\"1\":{\"101\":1}}],[\"terminator>\",{\"0\":{\"101\":1},\"1\":{\"100\":1,\"101\":1}}],[\"tempor\",{\"1\":{\"101\":2}}],[\"temp3\",{\"1\":{\"86\":1}}],[\"temp2\",{\"1\":{\"86\":1}}],[\"temp\",{\"1\":{\"86\":4,\"88\":2}}],[\"templates\",{\"1\":{\"51\":1}}],[\"test\",{\"1\":{\"63\":3}}],[\"tests\",{\"1\":{\"63\":2}}],[\"text\",{\"1\":{\"18\":1,\"57\":1,\"58\":1,\"59\":1,\"97\":1,\"101\":1}}],[\"tex\",{\"1\":{\"15\":1}}],[\"js\",{\"1\":{\"98\":2}}],[\"jshell>\",{\"1\":{\"129\":1,\"130\":2,\"131\":4,\"132\":4,\"133\":1,\"134\":1,\"135\":1,\"136\":2,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":2}}],[\"jshell快速入门\",{\"0\":{\"128\":1}}],[\"jshell\",{\"1\":{\"63\":1,\"127\":2,\"129\":3,\"130\":4,\"132\":2,\"133\":1,\"136\":1,\"139\":1,\"140\":1,\"141\":2,\"142\":1,\"143\":2,\"144\":7}}],[\"jep\",{\"1\":{\"82\":2,\"89\":2,\"97\":1,\"118\":3}}],[\"jeps\",{\"1\":{\"48\":2}}],[\"jndi\",{\"1\":{\"73\":1}}],[\"jta\",{\"1\":{\"73\":1}}],[\"jlink\",{\"1\":{\"63\":1}}],[\"jhat\",{\"1\":{\"63\":1}}],[\"jaf\",{\"1\":{\"73\":1}}],[\"jaxb\",{\"1\":{\"73\":2}}],[\"jax\",{\"1\":{\"73\":2}}],[\"jaxp\",{\"1\":{\"63\":1}}],[\"jar\",{\"1\":{\"63\":1}}],[\"java17\",{\"0\":{\"175\":1}}],[\"java16\",{\"0\":{\"172\":1}}],[\"java15\",{\"0\":{\"169\":1}}],[\"java14\",{\"0\":{\"166\":1}}],[\"java10\",{\"0\":{\"163\":1}}],[\"java10的局部变量类型推断\",{\"1\":{\"79\":1}}],[\"java11\",{\"0\":{\"73\":1,\"160\":1}}],[\"java7的钻石操作符\",{\"1\":{\"79\":1}}],[\"java9\",{\"0\":{\"72\":1,\"178\":1}}],[\"javafx\",{\"0\":{\"74\":1},\"1\":{\"63\":2,\"71\":1,\"74\":2}}],[\"javadoc\",{\"1\":{\"63\":2}}],[\"javac\",{\"1\":{\"63\":2}}],[\"javah\",{\"1\":{\"62\":1}}],[\"javascript\",{\"1\":{\"57\":1,\"61\":1}}],[\"java\",{\"0\":{\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"71\":1,\"77\":1,\"82\":1,\"92\":1,\"97\":1,\"107\":1,\"114\":1,\"121\":1,\"124\":1,\"127\":1,\"147\":1,\"148\":1,\"149\":1,\"202\":1,\"205\":1,\"208\":1,\"211\":1,\"214\":1,\"217\":1,\"220\":1,\"223\":1,\"226\":1},\"1\":{\"54\":1,\"61\":1,\"62\":1,\"63\":5,\"71\":2,\"72\":2,\"73\":10,\"74\":1,\"77\":1,\"79\":2,\"82\":1,\"86\":1,\"97\":1,\"107\":1,\"114\":1,\"127\":3,\"130\":5,\"132\":1,\"139\":2,\"140\":2,\"142\":2,\"144\":1,\"147\":1,\"148\":1,\"149\":2},\"2\":{\"65\":1,\"75\":1,\"80\":1,\"90\":1,\"95\":1,\"105\":1,\"112\":1,\"119\":1,\"122\":1,\"125\":1,\"145\":1,\"152\":1}}],[\"jre\",{\"1\":{\"63\":1}}],[\"jvm\",{\"1\":{\"60\":1,\"63\":4}}],[\"jfr\",{\"1\":{\"58\":1}}],[\"jit\",{\"1\":{\"55\":1,\"62\":1}}],[\"jdk\",{\"1\":{\"55\":1,\"56\":1,\"62\":1,\"63\":2,\"73\":6,\"89\":1,\"94\":1,\"111\":2}}],[\"j\",{\"1\":{\"15\":1}}],[\"格式使用数学公式\",{\"1\":{\"15\":1}}],[\"你需要在元素上添加\",{\"1\":{\"23\":1}}],[\"你可以更专注于业务逻辑而不是样板代码\",{\"1\":{\"116\":1}}],[\"你可以对代码块进行高亮\",{\"1\":{\"38\":1}}],[\"你可以在相邻的幻灯片上添加\",{\"1\":{\"35\":1}}],[\"你可以在幻灯片中使用\",{\"1\":{\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1}}],[\"你可以使用\",{\"1\":{\"31\":1,\"38\":1}}],[\"你可以按照顺序包裹一个\",{\"1\":{\"29\":1}}],[\"你可以通过向特定幻灯片添加\",{\"1\":{\"21\":1}}],[\"你也可以使用\",{\"1\":{\"15\":1}}],[\"==>\",{\"1\":{\"131\":1,\"132\":4}}],[\"=====\",{\"1\":{\"130\":1}}],[\"==\",{\"1\":{\"110\":2,\"115\":2}}],[\"=>\",{\"1\":{\"38\":1}}],[\"=\",{\"1\":{\"14\":1,\"15\":1,\"38\":3,\"78\":2,\"79\":3,\"86\":3,\"87\":1,\"88\":2,\"98\":10,\"101\":2,\"102\":1,\"103\":2,\"108\":1,\"115\":3,\"116\":2,\"117\":12,\"130\":1,\"131\":2,\"132\":1,\"133\":5,\"136\":3,\"148\":3,\"149\":3,\"150\":6,\"151\":5}}],[\"aslist底层使用数组\",{\"1\":{\"151\":1}}],[\"aslist\",{\"0\":{\"151\":1},\"1\":{\"151\":6}}],[\"author\",{\"1\":{\"117\":1}}],[\"automatically\",{\"1\":{\"63\":1}}],[\"auto\",{\"1\":{\"35\":1}}],[\"awesome\",{\"1\":{\"110\":3}}],[\"aware\",{\"1\":{\"58\":1}}],[\"adipiscing\",{\"1\":{\"101\":2}}],[\"add\",{\"1\":{\"63\":1,\"73\":1,\"144\":2,\"150\":6,\"151\":3}}],[\"additional\",{\"1\":{\"62\":1,\"63\":1}}],[\"address\",{\"1\":{\"54\":1}}],[\"amet\",{\"1\":{\"101\":2}}],[\"ahead\",{\"1\":{\"63\":1}}],[\"arrays\",{\"0\":{\"151\":1},\"1\":{\"151\":7}}],[\"arraylist<>\",{\"1\":{\"79\":1,\"150\":1}}],[\"arraylist<string>\",{\"1\":{\"78\":2,\"79\":2}}],[\"arg\",{\"1\":{\"87\":1}}],[\"arguments\",{\"1\":{\"63\":1}}],[\"arm64\",{\"1\":{\"63\":1}}],[\"arm32\",{\"1\":{\"63\":1}}],[\"areas\",{\"1\":{\"63\":1}}],[\"archives\",{\"1\":{\"59\":1,\"60\":1,\"63\":1}}],[\"attributes\",{\"1\":{\"63\":1}}],[\"attribution\",{\"1\":{\"63\":1}}],[\"agent\",{\"1\":{\"63\":1}}],[\"agents\",{\"1\":{\"51\":1}}],[\"agreement\",{\"1\":{\"61\":1}}],[\"abortable\",{\"1\":{\"60\":1}}],[\"accept\",{\"1\":{\"137\":1}}],[\"access\",{\"1\":{\"56\":1,\"57\":1,\"58\":1,\"61\":1}}],[\"activation\",{\"1\":{\"55\":1,\"57\":1,\"73\":1}}],[\"aot\",{\"1\":{\"55\":1}}],[\"application\",{\"1\":{\"62\":1,\"63\":3}}],[\"applet\",{\"1\":{\"55\":1,\"63\":1}}],[\"apis\",{\"1\":{\"63\":2}}],[\"api\",{\"1\":{\"51\":3,\"52\":2,\"53\":2,\"54\":3,\"55\":3,\"56\":3,\"57\":2,\"58\":2,\"59\":1,\"60\":1,\"61\":1,\"63\":6}}],[\"aarch64\",{\"1\":{\"55\":1,\"56\":1,\"60\":1,\"61\":1,\"63\":1}}],[\"all\",{\"1\":{\"144\":1}}],[\"all|\",{\"1\":{\"144\":5}}],[\"allocation\",{\"1\":{\"58\":1,\"62\":1}}],[\"aliqua\",{\"1\":{\"101\":2}}],[\"algorithms\",{\"1\":{\"61\":1,\"63\":1}}],[\"algorithm\",{\"1\":{\"57\":1}}],[\"alpine\",{\"1\":{\"56\":1}}],[\"always\",{\"1\":{\"55\":1}}],[\"alternative\",{\"1\":{\"62\":1}}],[\"alt\",{\"1\":{\"44\":1}}],[\"annotation\",{\"1\":{\"73\":1}}],[\"annotations\",{\"1\":{\"63\":2}}],[\"and\",{\"1\":{\"51\":2,\"55\":1,\"57\":2,\"58\":2,\"61\":4,\"63\":5,\"73\":3}}],[\"animate\",{\"1\":{\"35\":1}}],[\"a\",{\"1\":{\"14\":1,\"38\":2,\"57\":2,\"60\":1,\"61\":2,\"62\":1,\"148\":1,\"149\":1,\"150\":1}}],[\"319\",{\"1\":{\"62\":1}}],[\"317\",{\"1\":{\"62\":1}}],[\"316\",{\"1\":{\"62\":1}}],[\"314\",{\"1\":{\"62\":1}}],[\"313\",{\"1\":{\"62\":1}}],[\"312\",{\"1\":{\"62\":1}}],[\"310\",{\"1\":{\"62\":1}}],[\"318\",{\"1\":{\"61\":1}}],[\"315\",{\"1\":{\"61\":1}}],[\"346\",{\"1\":{\"60\":1}}],[\"344\",{\"1\":{\"60\":1}}],[\"341\",{\"1\":{\"60\":1}}],[\"340\",{\"1\":{\"60\":1}}],[\"349\",{\"1\":{\"58\":1}}],[\"345\",{\"1\":{\"58\":1}}],[\"343\",{\"1\":{\"58\":1}}],[\"347\",{\"1\":{\"56\":1}}],[\"307\",{\"1\":{\"62\":1}}],[\"304\",{\"1\":{\"62\":1}}],[\"309\",{\"1\":{\"61\":1}}],[\"305\",{\"1\":{\"58\":1,\"82\":1,\"111\":1}}],[\"306\",{\"1\":{\"55\":1}}],[\"370\",{\"1\":{\"58\":1}}],[\"379\",{\"1\":{\"57\":1}}],[\"378\",{\"1\":{\"57\":1,\"97\":1}}],[\"377\",{\"1\":{\"57\":1}}],[\"375\",{\"1\":{\"57\":1,\"111\":1}}],[\"374\",{\"1\":{\"57\":1}}],[\"373\",{\"1\":{\"57\":1}}],[\"372\",{\"1\":{\"57\":1}}],[\"371\",{\"1\":{\"57\":1}}],[\"376\",{\"1\":{\"56\":1}}],[\"368\",{\"1\":{\"58\":1}}],[\"367\",{\"1\":{\"58\":1}}],[\"366\",{\"1\":{\"58\":1}}],[\"365\",{\"1\":{\"58\":1}}],[\"364\",{\"1\":{\"58\":1}}],[\"363\",{\"1\":{\"58\":1}}],[\"362\",{\"1\":{\"58\":1}}],[\"361的发展历程\",{\"1\":{\"89\":1}}],[\"361\",{\"1\":{\"58\":1,\"82\":1}}],[\"360\",{\"1\":{\"57\":1}}],[\"369\",{\"1\":{\"56\":1}}],[\"336\",{\"1\":{\"61\":1}}],[\"335\",{\"1\":{\"61\":1}}],[\"333\",{\"1\":{\"61\":1}}],[\"332\",{\"1\":{\"61\":1}}],[\"331\",{\"1\":{\"61\":1}}],[\"330\",{\"1\":{\"61\":1}}],[\"334\",{\"1\":{\"60\":1}}],[\"339\",{\"1\":{\"57\":1}}],[\"338\",{\"1\":{\"56\":1}}],[\"385\",{\"1\":{\"57\":1}}],[\"384\",{\"1\":{\"57\":1,\"118\":1}}],[\"383\",{\"1\":{\"57\":1}}],[\"381\",{\"1\":{\"57\":1}}],[\"389\",{\"1\":{\"56\":1}}],[\"388\",{\"1\":{\"56\":1}}],[\"387\",{\"1\":{\"56\":1}}],[\"386\",{\"1\":{\"56\":1}}],[\"380\",{\"1\":{\"56\":1}}],[\"382\",{\"1\":{\"55\":1}}],[\"355\",{\"1\":{\"59\":1}}],[\"354\",{\"1\":{\"59\":1,\"89\":1}}],[\"353\",{\"1\":{\"59\":1}}],[\"351\",{\"1\":{\"59\":1}}],[\"350\",{\"1\":{\"59\":1}}],[\"359\",{\"1\":{\"58\":1,\"118\":1}}],[\"358\",{\"1\":{\"58\":1}}],[\"352\",{\"1\":{\"58\":1}}],[\"357\",{\"1\":{\"56\":1}}],[\"356\",{\"1\":{\"55\":1}}],[\"397\",{\"1\":{\"56\":1}}],[\"396\",{\"1\":{\"56\":1}}],[\"395\",{\"1\":{\"56\":1,\"118\":1}}],[\"394\",{\"1\":{\"56\":1,\"111\":1}}],[\"393\",{\"1\":{\"56\":1}}],[\"392\",{\"1\":{\"56\":1}}],[\"390\",{\"1\":{\"56\":1}}],[\"398\",{\"1\":{\"55\":1}}],[\"391\",{\"1\":{\"55\":1}}],[\"322\",{\"1\":{\"62\":1}}],[\"329\",{\"1\":{\"61\":1}}],[\"328\",{\"1\":{\"61\":1}}],[\"327\",{\"1\":{\"61\":1}}],[\"324\",{\"1\":{\"61\":1}}],[\"323\",{\"1\":{\"61\":1}}],[\"321\",{\"1\":{\"61\":1}}],[\"320\",{\"1\":{\"61\":1}}],[\"325\",{\"1\":{\"60\":1,\"89\":1}}],[\"32\",{\"1\":{\"51\":1}}],[\"3\",{\"1\":{\"13\":1,\"38\":1,\"61\":1,\"63\":2,\"116\":1,\"136\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":5}}],[\"299\",{\"1\":{\"63\":1}}],[\"298\",{\"1\":{\"63\":1}}],[\"297\",{\"1\":{\"63\":1}}],[\"295\",{\"1\":{\"63\":1}}],[\"294\",{\"1\":{\"63\":1}}],[\"292\",{\"1\":{\"63\":1}}],[\"291\",{\"1\":{\"63\":1}}],[\"290\",{\"1\":{\"63\":1}}],[\"296\",{\"1\":{\"62\":1}}],[\"289\",{\"1\":{\"63\":1}}],[\"288\",{\"1\":{\"63\":1}}],[\"287\",{\"1\":{\"63\":1}}],[\"285\",{\"1\":{\"63\":1}}],[\"284\",{\"1\":{\"63\":1}}],[\"283\",{\"1\":{\"63\":1}}],[\"282\",{\"1\":{\"63\":1}}],[\"281\",{\"1\":{\"63\":1}}],[\"280\",{\"1\":{\"63\":1}}],[\"286\",{\"1\":{\"62\":1}}],[\"279\",{\"1\":{\"63\":1}}],[\"278\",{\"1\":{\"63\":1}}],[\"277\",{\"1\":{\"63\":1}}],[\"276\",{\"1\":{\"63\":1}}],[\"275\",{\"1\":{\"63\":1}}],[\"274\",{\"1\":{\"63\":1}}],[\"273\",{\"1\":{\"63\":1}}],[\"272\",{\"1\":{\"63\":1}}],[\"271\",{\"1\":{\"63\":1}}],[\"270\",{\"1\":{\"63\":1}}],[\"269\",{\"1\":{\"63\":1}}],[\"268\",{\"1\":{\"63\":1}}],[\"267\",{\"1\":{\"63\":1}}],[\"266\",{\"1\":{\"63\":1}}],[\"265\",{\"1\":{\"63\":1}}],[\"264\",{\"1\":{\"63\":1}}],[\"263\",{\"1\":{\"63\":1}}],[\"262\",{\"1\":{\"63\":1}}],[\"261\",{\"1\":{\"63\":1}}],[\"260\",{\"1\":{\"63\":1}}],[\"249\",{\"1\":{\"63\":1}}],[\"248\",{\"1\":{\"63\":1}}],[\"247\",{\"1\":{\"63\":1}}],[\"246\",{\"1\":{\"63\":1}}],[\"245\",{\"1\":{\"63\":1}}],[\"244\",{\"1\":{\"63\":1}}],[\"243\",{\"1\":{\"63\":1}}],[\"241\",{\"1\":{\"63\":1}}],[\"240\",{\"1\":{\"63\":1}}],[\"259\",{\"1\":{\"63\":1}}],[\"258\",{\"1\":{\"63\":1}}],[\"257\",{\"1\":{\"63\":1}}],[\"256\",{\"1\":{\"63\":1}}],[\"255\",{\"1\":{\"63\":1}}],[\"254\",{\"1\":{\"63\":1}}],[\"253\",{\"1\":{\"63\":1}}],[\"252\",{\"1\":{\"63\":1}}],[\"251\",{\"1\":{\"63\":1}}],[\"250\",{\"1\":{\"63\":1}}],[\"25\",{\"0\":{\"61\":1},\"1\":{\"132\":1,\"133\":1}}],[\"200\",{\"1\":{\"63\":1}}],[\"2014\",{\"0\":{\"64\":1}}],[\"201\",{\"1\":{\"63\":1}}],[\"2017\",{\"0\":{\"63\":1}}],[\"2018\",{\"0\":{\"61\":1,\"62\":1}}],[\"2019\",{\"0\":{\"59\":1,\"60\":1}}],[\"2024年的展望和计划\",{\"0\":{\"67\":1}}],[\"2020\",{\"0\":{\"57\":1,\"58\":1}}],[\"2021\",{\"0\":{\"55\":1,\"56\":1}}],[\"2022\",{\"0\":{\"53\":1,\"54\":1}}],[\"2023\",{\"0\":{\"51\":1,\"52\":1,\"67\":1}}],[\"20\",{\"0\":{\"52\":1,\"53\":1,\"62\":1}}],[\"229\",{\"1\":{\"63\":1}}],[\"228\",{\"1\":{\"63\":1}}],[\"227\",{\"1\":{\"63\":1}}],[\"226\",{\"1\":{\"63\":1}}],[\"225\",{\"1\":{\"63\":1}}],[\"224\",{\"1\":{\"63\":1}}],[\"223\",{\"1\":{\"63\":1}}],[\"222\",{\"1\":{\"63\":1}}],[\"221\",{\"1\":{\"63\":1}}],[\"220\",{\"1\":{\"63\":1}}],[\"22\",{\"0\":{\"50\":1,\"54\":1}}],[\"238\",{\"1\":{\"63\":1}}],[\"237\",{\"1\":{\"63\":1}}],[\"236\",{\"1\":{\"63\":1}}],[\"235\",{\"1\":{\"63\":1}}],[\"233\",{\"1\":{\"63\":1}}],[\"232\",{\"1\":{\"63\":1}}],[\"231\",{\"1\":{\"63\":1}}],[\"230\",{\"1\":{\"60\":1}}],[\"23\",{\"0\":{\"49\":1}}],[\"219\",{\"1\":{\"63\":1}}],[\"217\",{\"1\":{\"63\":1}}],[\"216\",{\"1\":{\"63\":1}}],[\"215\",{\"1\":{\"63\":1}}],[\"214\",{\"1\":{\"63\":1}}],[\"213\",{\"1\":{\"63\":1}}],[\"212\",{\"1\":{\"63\":1}}],[\"211\",{\"1\":{\"63\":1}}],[\"21\",{\"0\":{\"48\":1,\"51\":1,\"52\":1,\"63\":1}}],[\"2\",{\"1\":{\"13\":1,\"38\":2,\"63\":3,\"87\":1,\"116\":1,\"136\":1,\"137\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":4}}],[\"100\",{\"1\":{\"117\":6}}],[\"102\",{\"1\":{\"63\":1}}],[\"10\",{\"0\":{\"62\":1,\"77\":1,\"211\":1},\"1\":{\"61\":1,\"77\":1,\"79\":1}}],[\"110\",{\"1\":{\"63\":1}}],[\"11\",{\"0\":{\"61\":1,\"71\":1,\"208\":1},\"1\":{\"63\":1,\"71\":1,\"73\":1,\"74\":1}}],[\"12预览版\",{\"1\":{\"89\":1}}],[\"12\",{\"0\":{\"60\":1}}],[\"13预览版\",{\"1\":{\"89\":1}}],[\"13\",{\"0\":{\"59\":1}}],[\"15预览版\",{\"1\":{\"118\":1}}],[\"15中的jep\",{\"1\":{\"111\":1}}],[\"158\",{\"1\":{\"63\":1}}],[\"15\",{\"0\":{\"57\":2,\"92\":1,\"97\":1,\"217\":1},\"1\":{\"97\":1}}],[\"16中\",{\"1\":{\"118\":1}}],[\"16中的jep\",{\"1\":{\"111\":1}}],[\"16引入的record类是一种用于简化不可变数据管理的特殊类\",{\"1\":{\"114\":1}}],[\"165\",{\"1\":{\"63\":1}}],[\"16\",{\"0\":{\"56\":2,\"107\":1,\"114\":1,\"220\":1},\"1\":{\"107\":1,\"132\":1,\"133\":1}}],[\"14预览版\",{\"1\":{\"118\":1}}],[\"14中的jep\",{\"1\":{\"111\":1}}],[\"143\",{\"1\":{\"63\":1}}],[\"14\",{\"0\":{\"55\":1,\"58\":1,\"82\":1,\"214\":1},\"1\":{\"82\":1,\"86\":1,\"89\":1}}],[\"17\",{\"0\":{\"55\":1,\"58\":1,\"59\":1,\"121\":1,\"124\":1,\"223\":1}}],[\"181\",{\"1\":{\"61\":1}}],[\"189\",{\"1\":{\"60\":1}}],[\"18\",{\"0\":{\"54\":1,\"64\":1}}],[\"199\",{\"1\":{\"63\":1}}],[\"197\",{\"1\":{\"63\":1}}],[\"193\",{\"1\":{\"63\":1}}],[\"19\",{\"0\":{\"51\":1,\"53\":1,\"60\":1}}],[\"1\",{\"1\":{\"13\":1,\"14\":1,\"15\":1,\"38\":2,\"61\":1,\"63\":1,\"87\":1,\"116\":1,\"136\":1,\"148\":1,\"149\":2,\"150\":1,\"151\":5}}],[\"项目\",{\"1\":{\"13\":6}}],[\"斜体\",{\"1\":{\"12\":1}}],[\"粗体\",{\"1\":{\"12\":1}}],[\"标签\",{\"0\":{\"184\":1,\"199\":1,\"205\":1,\"208\":1,\"211\":1,\"214\":1,\"217\":1,\"220\":1,\"223\":1,\"226\":1}}],[\"标签右侧的代码仅限于表达式\",{\"1\":{\"85\":1}}],[\"标准语法中的内容均不受支持\",{\"1\":{\"16\":1}}],[\"标题默认会自动转换为大写\",{\"1\":{\"12\":1}}],[\"标注水平幻灯片\",{\"1\":{\"9\":1}}],[\"标注幻灯片\",{\"0\":{\"8\":1,\"9\":1}}],[\"mutablelist\",{\"1\":{\"151\":4}}],[\"multi\",{\"1\":{\"63\":2}}],[\"mycode\",{\"1\":{\"139\":2,\"140\":2}}],[\"msg\",{\"1\":{\"131\":5,\"136\":5}}],[\"monday\",{\"1\":{\"83\":1,\"85\":1,\"86\":1,\"88\":1}}],[\"models\",{\"1\":{\"63\":1}}],[\"module\",{\"1\":{\"63\":1,\"144\":3}}],[\"modules\",{\"1\":{\"61\":1,\"73\":1,\"144\":2}}],[\"modularization\",{\"1\":{\"63\":1}}],[\"modular\",{\"1\":{\"63\":4}}],[\"most\",{\"1\":{\"63\":1}}],[\"more\",{\"1\":{\"63\":2}}],[\"min\",{\"1\":{\"117\":2}}],[\"milling\",{\"1\":{\"63\":1}}],[\"mixed\",{\"1\":{\"60\":1}}],[\"microbenchmark\",{\"1\":{\"60\":1}}],[\"migrate\",{\"1\":{\"56\":2}}],[\"messageobj\",{\"1\":{\"132\":3,\"133\":1,\"136\":2}}],[\"message\",{\"1\":{\"131\":3,\"132\":3,\"133\":2,\"135\":1,\"136\":4,\"138\":3}}],[\"media\",{\"1\":{\"63\":1}}],[\"merge\",{\"1\":{\"63\":1}}],[\"mercurial\",{\"1\":{\"56\":1}}],[\"metaspace\",{\"1\":{\"56\":1}}],[\"method\",{\"1\":{\"54\":1,\"63\":1}}],[\"methods\",{\"0\":{\"134\":1},\"1\":{\"51\":1,\"63\":1,\"134\":1,\"144\":1,\"147\":1}}],[\"mechanism\",{\"1\":{\"51\":1}}],[\"memory\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":2,\"59\":1,\"60\":1,\"62\":1}}],[\"map\",{\"1\":{\"148\":1}}],[\"map<string\",{\"1\":{\"148\":1,\"149\":1,\"150\":1}}],[\"mapped\",{\"1\":{\"58\":1}}],[\"magna\",{\"1\":{\"101\":2}}],[\"many\",{\"1\":{\"87\":1}}],[\"manager\",{\"1\":{\"55\":1}}],[\"marlin\",{\"1\":{\"63\":1}}],[\"mark\",{\"1\":{\"58\":1,\"63\":1}}],[\"markdown\",{\"0\":{\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1},\"1\":{\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":2}}],[\"make\",{\"1\":{\"63\":1}}],[\"macos\",{\"1\":{\"55\":2,\"58\":1}}],[\"main\",{\"1\":{\"51\":1}}],[\"matching\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1}}],[\"math\",{\"1\":{\"15\":1,\"117\":2}}],[\"mr\",{\"1\":{\"7\":1}}],[\"howmany\",{\"1\":{\"87\":1}}],[\"hotspot\",{\"1\":{\"63\":2}}],[\"hope\",{\"1\":{\"7\":1}}],[\"humongous\",{\"1\":{\"63\":1}}],[\"hashmap<>\",{\"1\":{\"150\":1}}],[\"hashset<>\",{\"1\":{\"150\":1}}],[\"hashcode\",{\"1\":{\"114\":1,\"115\":2,\"116\":2}}],[\"hash\",{\"1\":{\"63\":1,\"115\":1}}],[\"harfbuzz\",{\"1\":{\"63\":1}}],[\"handshakes\",{\"1\":{\"62\":1}}],[\"handles\",{\"1\":{\"54\":1,\"63\":2}}],[\"hprof\",{\"1\":{\"63\":1}}],[\"help\",{\"0\":{\"130\":1,\"144\":1},\"1\":{\"129\":1,\"130\":3,\"144\":9}}],[\"helpful\",{\"1\":{\"58\":1}}],[\"hello\",{\"1\":{\"98\":6,\"132\":2,\"133\":1,\"136\":1}}],[\"header\",{\"1\":{\"62\":1}}],[\"heap\",{\"1\":{\"61\":1,\"62\":1}}],[\"https\",{\"1\":{\"94\":1}}],[\"http\",{\"1\":{\"61\":1,\"63\":1}}],[\"html>\",{\"1\":{\"98\":2}}],[\"html示例\",{\"1\":{\"98\":1}}],[\"html5\",{\"1\":{\"63\":1}}],[\"html\",{\"1\":{\"9\":1,\"29\":1,\"35\":1,\"98\":2}}],[\"history\",{\"1\":{\"144\":1}}],[\"history|\",{\"1\":{\"144\":1}}],[\"hints\",{\"1\":{\"63\":1}}],[\"hidpi\",{\"1\":{\"63\":1}}],[\"hidden\",{\"1\":{\"57\":1,\"92\":1}}],[\"highlight\",{\"1\":{\"14\":1,\"27\":6,\"38\":1}}],[\"h3\",{\"0\":{\"12\":1}}],[\"在此之前\",{\"1\":{\"147\":1}}],[\"在命令后可以添加一个整数表达式片段作为退出代码\",{\"1\":{\"143\":1}}],[\"在处理不可变数据时\",{\"1\":{\"115\":1}}],[\"在不需要额外嵌套的情况下判断字符串是否以\",{\"1\":{\"110\":1}}],[\"在文本块中使用占位符进行值替换\",{\"1\":{\"104\":1}}],[\"在上述示例中\",{\"1\":{\"103\":1}}],[\"在连接时\",{\"1\":{\"103\":1}}],[\"在这个示例中\",{\"1\":{\"102\":1}}],[\"在这里进行一些复杂的计算\",{\"1\":{\"88\":1}}],[\"在运行时生成内部类\",{\"1\":{\"92\":1}}],[\"在编译时未知\",{\"1\":{\"92\":1}}],[\"在实际项目中\",{\"1\":{\"79\":1}}],[\"在使用\",{\"1\":{\"79\":1}}],[\"在\",{\"1\":{\"68\":1,\"72\":1,\"73\":1,\"74\":1,\"86\":1}}],[\"在你启用\",{\"1\":{\"14\":1,\"15\":1}}],[\"在前一个\",{\"1\":{\"9\":1}}],[\"在幻灯片上添加属性\",{\"1\":{\"9\":1}}],[\"在水平幻灯片中使用\",{\"1\":{\"9\":1}}],[\">\",{\"0\":{\"85\":1},\"1\":{\"9\":2,\"29\":2,\"82\":1,\"85\":5,\"87\":6,\"88\":4,\"101\":1,\"131\":10,\"149\":2}}],[\"<n>\",{\"1\":{\"144\":1}}],[\"<id>\",{\"1\":{\"144\":1}}],[\"<integer\",{\"1\":{\"144\":1}}],[\"<command>|<subject>\",{\"1\":{\"144\":2}}],[\"<模块>\",{\"1\":{\"144\":2}}],[\"<路径>\",{\"1\":{\"144\":6}}],[\"<file>\",{\"1\":{\"144\":1}}],[\"<文件>\",{\"1\":{\"144\":1}}],[\"<名称或\",{\"1\":{\"144\":6}}],[\"<=\",{\"1\":{\"117\":1}}],[\"<line\",{\"0\":{\"101\":1},\"1\":{\"100\":1,\"101\":2}}],[\"<p>hello\",{\"1\":{\"98\":2}}],[\"<body>\",{\"1\":{\"98\":2}}],[\"<html>\",{\"1\":{\"98\":2}}],[\"<\",{\"1\":{\"9\":2,\"98\":4,\"117\":2}}],[\"分类\",{\"0\":{\"181\":1,\"196\":1,\"202\":1}}],[\"分割垂直幻灯片\",{\"1\":{\"9\":1}}],[\"分享\",{\"1\":{\"3\":1}}],[\"幻灯片演示\",{\"0\":{\"7\":1}}],[\"幻灯片页\",{\"0\":{\"6\":1}}],[\"那么成功就是一种必然\",{\"1\":{\"3\":1,\"68\":1}}],[\"极致成为一种精神\",{\"1\":{\"3\":1,\"68\":1}}],[\"我们通常使用构造方法来初始化集合\",{\"1\":{\"147\":1}}],[\"我们可以更灵活地应用条件测试\",{\"1\":{\"110\":1}}],[\"我们能够在不失代码可读性的前提下\",{\"1\":{\"79\":1}}],[\"我憧憬那时候的自己\",{\"1\":{\"67\":1}}],[\"我的标语\",{\"1\":{\"3\":1}}],[\"我是一名会敲代码的程序员\",{\"1\":{\"3\":1}}],[\"较真\",{\"1\":{\"3\":1}}],[\"人特别轴\",{\"1\":{\"3\":1}}],[\"做事情只做有把握的事情\",{\"1\":{\"3\":1}}],[\"捣鼓各种有趣的新玩意\",{\"1\":{\"3\":1}}],[\"喜欢专研\",{\"1\":{\"3\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
