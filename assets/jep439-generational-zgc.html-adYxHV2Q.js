const e=JSON.parse('{"key":"v-6c251c93","path":"/java-features/Java21/jep439-generational-zgc.html","title":"Java 21 新特性：分代ZGC（Generational ZGC）","lang":"zh-CN","frontmatter":{"title":"Java 21 新特性：分代ZGC（Generational ZGC）","description":"Java 21 新特性：分代ZGC（Generational ZGC） Java以其垃圾回收机制而闻名。这是它的主要优势之一，但也可能是许多头疼的根源。 Java 11（JEP 333）中引入了一个可扩展的低延迟垃圾收集器，称为ZGC Java 15（JEP 377）中 ZGC 可用于生产 现在，随着Java 21的出现，它已经发展成为一种分代GC（J...","author":"会敲代码的程序猿","isOriginal":true,"date":"2024-01-08T00:00:00.000Z","category":"Java","tag":["Java","Java21"],"order":439,"head":[["meta",{"property":"og:url","content":"https://www.geekyspace.cn/java-features/Java21/jep439-generational-zgc.html"}],["meta",{"property":"og:site_name","content":"极客空间"}],["meta",{"property":"og:title","content":"Java 21 新特性：分代ZGC（Generational ZGC）"}],["meta",{"property":"og:description","content":"Java 21 新特性：分代ZGC（Generational ZGC） Java以其垃圾回收机制而闻名。这是它的主要优势之一，但也可能是许多头疼的根源。 Java 11（JEP 333）中引入了一个可扩展的低延迟垃圾收集器，称为ZGC Java 15（JEP 377）中 ZGC 可用于生产 现在，随着Java 21的出现，它已经发展成为一种分代GC（J..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-28T03:58:16.000Z"}],["meta",{"property":"article:author","content":"会敲代码的程序猿"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Java21"}],["meta",{"property":"article:published_time","content":"2024-01-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-28T03:58:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 21 新特性：分代ZGC（Generational ZGC）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-28T03:58:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"会敲代码的程序猿\\"}]}"]]},"headers":[{"level":2,"title":"垃圾收集（Garbage Collection）","slug":"垃圾收集-garbage-collection","link":"#垃圾收集-garbage-collection","children":[]},{"level":2,"title":"不同语言如何管理内存","slug":"不同语言如何管理内存","link":"#不同语言如何管理内存","children":[]},{"level":2,"title":"HotSpot JVM垃圾收集器","slug":"hotspot-jvm垃圾收集器","link":"#hotspot-jvm垃圾收集器","children":[]},{"level":2,"title":"如何选择JVM GC","slug":"如何选择jvm-gc","link":"#如何选择jvm-gc","children":[]},{"level":2,"title":"分代ZGC","slug":"分代zgc","link":"#分代zgc","children":[]},{"level":2,"title":"如何使用 JVM GC","slug":"如何使用-jvm-gc","link":"#如何使用-jvm-gc","children":[]}],"git":{"createdTime":1709092696000,"updatedTime":1709092696000,"contributors":[{"name":"zhouyu","email":"zhouyu@liquido.cn","commits":1}]},"readingTime":{"minutes":5.25,"words":1575},"filePathRelative":"java-features/Java21/jep439-generational-zgc.md","localizedDate":"2024年1月8日","excerpt":"\\n<p>Java以其垃圾回收机制而闻名。这是它的主要优势之一，但也可能是许多头疼的根源。</p>\\n<ul>\\n<li>Java 11（<a href=\\"https://openjdk.org/jeps/333\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">JEP 333</a>）中引入了一个可扩展的低延迟垃圾收集器，称为ZGC</li>\\n<li>Java 15（<a href=\\"https://openjdk.org/jeps/377\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">JEP 377</a>）中 ZGC 可用于生产</li>\\n<li>现在，随着Java 21的出现，它已经发展成为一种分代GC（<a href=\\"https://openjdk.org/jeps/439\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">JEP 439</a>）</li>\\n</ul>","copyright":{"author":"会敲代码的程序猿"},"autoDesc":true}');export{e as data};
