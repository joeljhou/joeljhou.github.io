import{_ as o,r as p,o as c,c as l,a as n,b as a,d as t,e}from"./app-DCqup3ld.js";const i={},r=n("h1",{id:"ioc-容器",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ioc-容器"},[n("span",null,"IoC 容器")])],-1),u=n("h2",{id:"概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概述"},[n("span",null,"概述")])],-1),d=n("blockquote",null,[n("p",null,[a("Spring IoC（控制反转）容器是Spring框架的核心。 "),n("code",null,"org.springframework.context.ApplicationContext"),a("接口代表Spring IoC容器，负责实例化、配置和组装"),n("code",null,"Bean"),a("。")])],-1),k=n("p",null,"Spring提供了几个 ApplicationContext 接口的实现，在独立应用程序中，最常用的是：",-1),m={href:"https://docs.spring.io/spring-framework/docs/6.1.5/javadoc-api/org/springframework/context/support/ClassPathXmlApplicationContext.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://docs.spring.io/spring-framework/docs/6.1.5/javadoc-api/org/springframework/context/support/FileSystemXmlApplicationContext.html",target:"_blank",rel:"noopener noreferrer"},v=n("li",null,"等等",-1),h=e("<p><strong>支持以XML、Java注释或Java代码作为配置元数据的格式</strong></p><p>虽然<code>XML</code>一直是定义配置元数据的传统格式， 但您可以通过提供少量的<code>XML</code>配置来指定容器使用<code>Java注解</code>或<code>Java代码</code>作为元数据格式。 以声明式方式启用对这些元数据格式的支持，从而更灵活地定义应用程序的配置信息。</p><p><strong>为Web应用程序提供方便的ApplicationContext实例化</strong></p>",3),b=n("strong",null,"Spring IoC",-1),f=n("code",null,"web.xml",-1),_={href:"https://docs.spring.io/spring-framework/reference/core/beans/context-introduction.html#context-create",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"ApplicationContext",-1),w=e('<p><strong>解析Spring框架的工作原理：<mark>应用程序类</mark>与<mark>配置元数据</mark>的整合</strong></p><p>下图表展示了Spring框架的工作原理高层视图。通过将您的应用程序类与配置元数据结合起来， 一旦<code>ApplicationContext</code>被创建和初始化，您就获得了一个完全配置且可执行的系统或应用程序。</p><figure><img src="http://img.geekyspace.cn/pictures/2024/202403181756387.png" alt="Spring IoC容器" tabindex="0" loading="lazy"><figcaption>Spring IoC容器</figcaption></figure><h2 id="配置元数据" tabindex="-1"><a class="header-anchor" href="#配置元数据"><span>配置元数据</span></a></h2><p>如上图所示，Spring IoC容器消费一种配置元数据。 这种配置元数据代表了你作为一个应用开发者，如何告诉Spring容器在你的应用中实例化、配置和组装对象。</p>',5),x=n("strong",null,"注意",-1),C={href:"https://docs.spring.io/spring-framework/reference/core/beans/java.html",target:"_blank",rel:"noopener noreferrer"},S=n("p",null,[a("有关在"),n("code",null,"Spring"),a("容器中使用其他形式的元数据信息，请参阅：")],-1),y={href:"https://docs.spring.io/spring-framework/reference/core/beans/dependencies/factory-properties-detailed.html",target:"_blank",rel:"noopener noreferrer"},A={href:"https://docs.spring.io/spring-framework/reference/core/beans/annotation-config.html",target:"_blank",rel:"noopener noreferrer"},I={href:"https://docs.spring.io/spring-framework/reference/core/beans/java.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://docs.spring.io/spring-framework/docs/6.1.5/javadoc-api/org/springframework/context/annotation/Configuration.html",target:"_blank",rel:"noopener noreferrer"},L={href:"https://docs.spring.io/spring-framework/docs/6.1.5/javadoc-api/org/springframework/context/annotation/Bean.html",target:"_blank",rel:"noopener noreferrer"},X={href:"https://docs.spring.io/spring-framework/docs/6.1.5/javadoc-api/org/springframework/context/annotation/Import.html",target:"_blank",rel:"noopener noreferrer"},J={href:"https://docs.spring.io/spring-framework/docs/6.1.5/javadoc-api/org/springframework/context/annotation/DependsOn.html",target:"_blank",rel:"noopener noreferrer"},B=e(`<p>Spring的配置包含至少一个，通常是多个<code>&lt;bean&gt;</code>元素。容器必须管理这些定义的bean。</p><ul><li>XML配置：将这些Bean配置为顶层 <code>&lt;beans/&gt;</code> 元素内的 <code>&lt;bean/&gt;</code> 元素</li><li>Java配置：将这些Bean配置为<code>@Configuration</code>类中的<code>@Bean</code>注解的方法</li></ul><p>这些Bean的定义对应于构成应用程序的实际对象， 如服务层对象，持久层对象（Dao），表示层对象（Web控制器），基础设施对象（JPA EntityManagerFactory），JMS队列对象等。 通常，人们不会在容器中配置细粒度的<code>domain</code>对象，因为创建和加载<code>domain</code>对象的通常是<code>repository</code>和<code>service</code>层逻辑的责任。</p><p>下面的例子显示了基于XML的配置元数据的基本结构：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>(1) (2)
        <span class="token comment">&lt;!-- 这个bean的合作者和配置在这里 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- c这个bean的合作者和配置在这里 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- 更多bean 定义在这里 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>id</code>属性是一个字符串，用于<mark>唯一标识</mark>bean</li><li><code>class</code>属性是一个字符串，用于指定bean的<mark>完整类名</mark>（包括包名）</li></ol>`,6),D=n("code",null,"id",-1),P=n("code",null,"ref",-1),T={href:"https://docs.spring.io/spring-framework/reference/core/beans/dependencies.html",target:"_blank",rel:"noopener noreferrer"},M=n("h2",{id:"实例化容器",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#实例化容器"},[n("span",null,"实例化容器")])],-1),F=n("code",null,"ApplicationContext",-1),N={href:"https://docs.spring.io/spring-framework/reference/core/resources.html",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"CLASSPATH",-1),Z=e(`<p><strong>使用容器</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 创建和配置Bean</span>
<span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;services.xml&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;daos.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 获取配置的实例</span>
<span class="token class-name">PetStoreService</span> service <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;petStore&quot;</span><span class="token punctuation">,</span> <span class="token class-name">PetStoreService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用配置的实例</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> userList <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">getUsernameList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下示例显示<strong>服务层对象</strong>（<code>services.xml</code>）配置文件：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans
		https://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- services --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>petStore<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.samples.jpetstore.services.PetStoreServiceImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>accountDao<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>accountDao<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>itemDao<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>itemDao<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token comment">&lt;!-- 其他关于这个bean的协作者和配置信息在这里添加 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下示例显示<strong>数据访问对象</strong><code>daos.xml</code>文件：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans
		https://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>accountDao<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.samples.jpetstore.dao.jpa.JpaAccountDao<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 这里可以添加关于这个bean的其他协作者和配置信息 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>itemDao<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.samples.jpetstore.dao.jpa.JpaItemDao<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 这里可以添加关于这个bean的其他协作者和配置信息 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在前面的示例中，服务层由<code>PetStoreServiceImpl</code>类和两个类型为<code>JpaAccountDao</code>和<code>JpaItemDao</code>（基于JPA对象关系映射标准）的数据访问对象组成。</p><p>属性名称元素引用<code>JavaBean</code>属性的名称，<code>ref</code>元素引用另一个<code>bean</code>定义的名称。 <code>id</code>和<code>ref</code>元素之间的这种链接表达了协作对象之间的依赖性。 有关配置对象依赖项的详细信息，请参见依赖项。</p>`,8);function E(O,U){const s=p("ExternalLinkIcon");return c(),l("div",null,[r,u,d,k,n("ul",null,[n("li",null,[n("a",m,[a("ClassPathXmlApplicationContext"),t(s)])]),n("li",null,[n("a",g,[a("FileSystemXmlApplicationContext"),t(s)])]),v]),h,n("p",null,[a("在大多数应用场景中，无需手动编写代码来实例化"),b,a("容器； 例如：在Web应用场景中，通常只需要在应用程序的"),f,a("文件中编写 8 行（或更多）"),n("a",_,[a("模板式的Web描述符"),t(s)]),a(" 即可初始化"),q]),w,n("blockquote",null,[n("p",null,[x,a("：Spring IoC容器本身与实际配置元数据的编写格式完全解耦。 如今，许多开发者选择使用"),n("a",C,[a("基于Java的容器配置"),t(s)]),a(" 来构建他们的Spring应用程序。")])]),S,n("ul",null,[n("li",null,[n("a",y,[a("基于XML的容器配置"),t(s)])]),n("li",null,[n("a",A,[a("基于注解的容器配置"),t(s)]),a("（Spring 2.5开始支持）")]),n("li",null,[n("a",I,[a("基于Java的容器配置"),t(s)]),a("（Spring 3.0开始支持；参阅 "),n("a",j,[a("@Configuration"),t(s)]),a(", "),n("a",L,[a("@Bean"),t(s)]),a(", "),n("a",X,[a("@Import"),t(s)]),a(", 和 "),n("a",J,[a("@DependsOn"),t(s)]),a(" 注解）")])]),B,n("p",null,[D,a("属性的值可以用来指代其他bean的"),P,a("属性，从而实现bean之间的依赖关系。 参阅 "),n("a",T,[a("依赖（Dependencies）"),t(s)]),a("。")]),M,n("p",null,[F,a("的构造函数中可以提供资源路径， 这些路径是资源字符串，用于让容器从外部"),n("a",N,[a("资源(Resources)"),t(s)]),a(" 加载配置元数据，比如本地文件系统和Java "),z,a("路径。")]),Z])}const W=o(i,[["render",E],["__file","ioc-container.html.vue"]]),R=JSON.parse('{"path":"/spring-framework/core/ioc-container.html","title":"IoC 容器","lang":"zh-CN","frontmatter":{"title":"IoC 容器","author":"会敲代码的程序猿","isOriginal":true,"date":"2024-03-18T00:00:00.000Z","category":"Spring","tag":["Spring","Spring Framework"],"description":"IoC 容器 概述 Spring IoC（控制反转）容器是Spring框架的核心。 org.springframework.context.ApplicationContext接口代表Spring IoC容器，负责实例化、配置和组装Bean。 Spring提供了几个 ApplicationContext 接口的实现，在独立应用程序中，最常用的是： Cl...","head":[["meta",{"property":"og:url","content":"https://www.geekyspace.cn/spring-framework/core/ioc-container.html"}],["meta",{"property":"og:site_name","content":"极客空间"}],["meta",{"property":"og:title","content":"IoC 容器"}],["meta",{"property":"og:description","content":"IoC 容器 概述 Spring IoC（控制反转）容器是Spring框架的核心。 org.springframework.context.ApplicationContext接口代表Spring IoC容器，负责实例化、配置和组装Bean。 Spring提供了几个 ApplicationContext 接口的实现，在独立应用程序中，最常用的是： Cl..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://img.geekyspace.cn/pictures/2024/202403181756387.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-25T03:32:29.000Z"}],["meta",{"property":"article:author","content":"会敲代码的程序猿"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"Spring Framework"}],["meta",{"property":"article:published_time","content":"2024-03-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-25T03:32:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IoC 容器\\",\\"image\\":[\\"http://img.geekyspace.cn/pictures/2024/202403181756387.png\\"],\\"datePublished\\":\\"2024-03-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-25T03:32:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"会敲代码的程序猿\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"配置元数据","slug":"配置元数据","link":"#配置元数据","children":[]},{"level":2,"title":"实例化容器","slug":"实例化容器","link":"#实例化容器","children":[]}],"git":{"createdTime":1710814902000,"updatedTime":1711337549000,"contributors":[{"name":"zhouyu","email":"zhouyu@liquido.cn","commits":11}]},"readingTime":{"minutes":4.54,"words":1362},"filePathRelative":"spring-framework/core/ioc-container.md","localizedDate":"2024年3月18日","excerpt":"\\n<h2>概述</h2>\\n<blockquote>\\n<p>Spring IoC（控制反转）容器是Spring框架的核心。\\n<code>org.springframework.context.ApplicationContext</code>接口代表Spring IoC容器，负责实例化、配置和组装<code>Bean</code>。</p>\\n</blockquote>\\n<p>Spring提供了几个 ApplicationContext 接口的实现，在独立应用程序中，最常用的是：</p>\\n<ul>\\n<li><a href=\\"https://docs.spring.io/spring-framework/docs/6.1.5/javadoc-api/org/springframework/context/support/ClassPathXmlApplicationContext.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ClassPathXmlApplicationContext</a></li>\\n<li><a href=\\"https://docs.spring.io/spring-framework/docs/6.1.5/javadoc-api/org/springframework/context/support/FileSystemXmlApplicationContext.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">FileSystemXmlApplicationContext</a></li>\\n<li>等等</li>\\n</ul>","copyright":{"author":"会敲代码的程序猿"},"autoDesc":true}');export{W as comp,R as data};
