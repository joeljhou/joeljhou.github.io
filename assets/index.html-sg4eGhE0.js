import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as n,c as t,a as i,b as e,e as o,f as c}from"./app-MxIHvopO.js";const s={},d=i("p",null,[e("为了帮助大家跟上最新的技术潮流，计划启动一个专栏，重点分享Java领域的前沿知识。 这个专栏将详细解读从"),i("strong",null,"Java 9 - 最新版本"),e("的各种有趣的新特性。 会持续不断地发布相关内容，希望大家能够关注并收藏起来，跟随我们一起深入了解Java的最新进展！")],-1),h={href:"https://openjdk.java.net/jeps/",target:"_blank",rel:"noopener noreferrer"},u=c('<h2 id="java-23-in-development" tabindex="-1"><a class="header-anchor" href="#java-23-in-development" aria-hidden="true">#</a> Java 23(in development)</h2><h2 id="java-22-in-development" tabindex="-1"><a class="header-anchor" href="#java-22-in-development" aria-hidden="true">#</a> Java 22(in development)</h2><h2 id="java-21-ga-2023-09-19" tabindex="-1"><a class="header-anchor" href="#java-21-ga-2023-09-19" aria-hidden="true">#</a> Java 21(GA 2023/09/19)</h2><ul><li>430: String Templates (Preview)</li><li>431: Sequenced Collections</li><li>439: Generational ZGC</li><li>440: Record Patterns</li><li>441: Pattern Matching for switch</li><li>442: Foreign Function &amp; Memory API (Third Preview)</li><li>443: Unnamed Patterns and Variables (Preview)</li><li>444: Virtual Threads</li><li>445: Unnamed Classes and Instance Main Methods (Preview)</li><li>446: Scoped Values (Preview)</li><li>448: Vector API (Sixth Incubator)</li><li>449: Deprecate the Windows 32-bit x86 Port for Removal</li><li>451: Prepare to Disallow the Dynamic Loading of Agents</li><li>452: Key Encapsulation Mechanism API</li><li>453: Structured Concurrency (Preview)</li></ul><h2 id="java-20-ga-2023-03-21" tabindex="-1"><a class="header-anchor" href="#java-20-ga-2023-03-21" aria-hidden="true">#</a> Java 20(GA 2023/03/21)</h2><ul><li>429: Scoped Values (Incubator)</li><li>432: Record Patterns (Second Preview)</li><li>433: Pattern Matching for switch (Fourth Preview)</li><li>434: Foreign Function &amp; Memory API (Second Preview)</li><li>436: Virtual Threads (Second Preview)</li><li>437: Structured Concurrency (Second Incubator)</li><li>438: Vector API (Fifth Incubator)</li></ul><h2 id="java-19-ga-2022-09-20" tabindex="-1"><a class="header-anchor" href="#java-19-ga-2022-09-20" aria-hidden="true">#</a> Java 19(GA 2022/09/20)</h2><ul><li>405: Record Patterns (Preview)</li><li>422: Linux/RISC-V Port</li><li>424: Foreign Function &amp; Memory API (Preview)</li><li>425: Virtual Threads (Preview)</li><li>426: Vector API (Fourth Incubator)</li><li>427: Pattern Matching for switch (Third Preview)</li><li>428: Structured Concurrency (Incubator)</li></ul><h2 id="java-18-ga-2022-03-22" tabindex="-1"><a class="header-anchor" href="#java-18-ga-2022-03-22" aria-hidden="true">#</a> Java 18(GA 2022/03/22)</h2><ul><li>400: UTF-8 by Default</li><li>408: Simple Web Server</li><li>413: Code Snippets in Java API Documentation</li><li>416: Reimplement Core Reflection with Method Handles</li><li>417: Vector API (Third Incubator)</li><li>418: Internet-Address Resolution SPI</li><li>419: Foreign Function &amp; Memory API (Second Incubator)</li><li>420: Pattern Matching for switch (Second Preview)</li><li>421: Deprecate Finalization for Removal</li></ul><h2 id="java-17-ga-2021-09-14" tabindex="-1"><a class="header-anchor" href="#java-17-ga-2021-09-14" aria-hidden="true">#</a> Java 17(GA 2021/09/14)</h2><ul><li>306: Restore Always-Strict Floating-Point Semantics</li><li>356: Enhanced Pseudo-Random Number Generators</li><li>382: New macOS Rendering Pipeline</li><li>391: macOS/AArch64 Port</li><li>398: Deprecate the Applet API for Removal</li><li>403: Strongly Encapsulate JDK Internals</li><li>406: Pattern Matching for switch (Preview)</li><li>407: Remove RMI Activation</li><li>409: Sealed Classes</li><li>410: Remove the Experimental AOT and JIT Compiler</li><li>411: Deprecate the Security Manager for Removal</li><li>412: Foreign Function &amp; Memory API (Incubator)</li><li>414: Vector API (Second Incubator)</li><li>415: Context-Specific Deserialization Filters</li></ul><h2 id="java-16-ga-2021-03-16" tabindex="-1"><a class="header-anchor" href="#java-16-ga-2021-03-16" aria-hidden="true">#</a> Java 16(GA 2021/03/16)</h2><ul><li>338: Vector API (Incubator)</li><li>347: Enable C++14 Language Features</li><li>357: Migrate from Mercurial to Git</li><li>369: Migrate to GitHub</li><li>376: ZGC: Concurrent Thread-Stack Processing</li><li>380: Unix-Domain Socket Channels</li><li>386: Alpine Linux Port</li><li>387: Elastic Metaspace</li><li>388: Windows/AArch64 Port</li><li>389: Foreign Linker API (Incubator)</li><li>390: Warnings for Value-Based Classes</li><li>392: Packaging Tool</li><li>393: Foreign-Memory Access API (Third Incubator)</li><li>394: Pattern Matching for instanceof</li><li>395: Records</li><li>396: Strongly Encapsulate JDK Internals by Default</li><li>397: Sealed Classes (Second Preview)</li></ul><h2 id="java-15-ga-2020-09-15" tabindex="-1"><a class="header-anchor" href="#java-15-ga-2020-09-15" aria-hidden="true">#</a> Java 15(GA 2020/09/15)</h2><ul><li>339: Edwards-Curve Digital Signature Algorithm (EdDSA)</li><li>360: Sealed Classes (Preview)</li><li>371: Hidden Classes</li><li>372: Remove the Nashorn JavaScript Engine</li><li>373: Reimplement the Legacy DatagramSocket API</li><li>374: Disable and Deprecate Biased Locking</li><li>375: Pattern Matching for instanceof (Second Preview)</li><li>377: ZGC: A Scalable Low-Latency Garbage Collector</li><li>378: Text Blocks</li><li>379: Shenandoah: A Low-Pause-Time Garbage Collector</li><li>381: Remove the Solaris and SPARC Ports</li><li>383: Foreign-Memory Access API (Second Incubator)</li><li>384: Records (Second Preview)</li><li>385: Deprecate RMI Activation for Removal</li></ul><h2 id="java-14-ga-2020-03-17" tabindex="-1"><a class="header-anchor" href="#java-14-ga-2020-03-17" aria-hidden="true">#</a> Java 14(GA 2020/03/17)</h2><ul><li>305: Pattern Matching for instanceof (Preview)</li><li>343: Packaging Tool (Incubator)</li><li>345: NUMA-Aware Memory Allocation for G1</li><li>349: JFR Event Streaming</li><li>352: Non-Volatile Mapped Byte Buffers</li><li>358: Helpful NullPointerExceptions</li><li>359: Records (Preview)</li><li>361: <a href="java14/jep361-switch-expressions">Switch Expressions (Standard)</a></li><li>362: Deprecate the Solaris and SPARC Ports</li><li>363: Remove the Concurrent Mark Sweep (CMS) Garbage Collector</li><li>364: ZGC on macOS</li><li>365: ZGC on Windows</li><li>366: Deprecate the ParallelScavenge + SerialOld GC Combination</li><li>367: Remove the Pack200 Tools and API</li><li>368: Text Blocks (Second Preview)</li><li>370: Foreign-Memory Access API (Incubator)</li></ul><h2 id="java-13-ga-2019-09-17" tabindex="-1"><a class="header-anchor" href="#java-13-ga-2019-09-17" aria-hidden="true">#</a> Java 13(GA 2019/09/17)</h2><ul><li>350: Dynamic CDS Archives</li><li>351: ZGC: Uncommit Unused Memory</li><li>353: Reimplement the Legacy Socket API</li><li>354: Switch Expressions (Preview)</li><li>355: Text Blocks (Preview)</li></ul><h2 id="java-12-ga-2019-03-19" tabindex="-1"><a class="header-anchor" href="#java-12-ga-2019-03-19" aria-hidden="true">#</a> Java 12(GA 2019/03/19)</h2><ul><li>189: Shenandoah: A Low-Pause-Time Garbage Collector (Experimental)</li><li>230: Microbenchmark Suite</li><li>325: Switch Expressions (Preview)</li><li>334: JVM Constants API</li><li>340: One AArch64 Port, Not Two</li><li>341: Default CDS Archives</li><li>344: Abortable Mixed Collections for G1</li><li>346: Promptly Return Unused Committed Memory from G1</li></ul><h2 id="java-11-ga-2018-09-25" tabindex="-1"><a class="header-anchor" href="#java-11-ga-2018-09-25" aria-hidden="true">#</a> Java 11(GA 2018/09/25)</h2><ul><li>181: Nest-Based Access Control</li><li>309: Dynamic Class-File Constants</li><li>315: Improve Aarch64 Intrinsics</li><li>318: Epsilon: A No-Op Garbage Collector</li><li><a href="java11/jep320-remove-JavaEE-CORBA">320: Remove the Java EE and CORBA Modules</a></li><li>321: HTTP Client (Standard)</li><li>323: Local-Variable Syntax for Lambda Parameters</li><li>324: Key Agreement with Curve25519 and Curve448</li><li>327: Unicode 10</li><li>328: Flight Recorder</li><li>329: ChaCha20 and Poly1305 Cryptographic Algorithms</li><li>330: Launch Single-File Source-Code Programs</li><li>331: Low-Overhead Heap Profiling</li><li>332: Transport Layer Security (TLS) 1.3</li><li>333: ZGC: A Scalable Low-Latency Garbage Collector(Experimental)</li><li>335: Deprecate the Nashorn JavaScript Engine</li><li>336: Deprecate the Pack200 Tools and API</li></ul><h2 id="java-10-ga-2018-03-20" tabindex="-1"><a class="header-anchor" href="#java-10-ga-2018-03-20" aria-hidden="true">#</a> Java 10(GA 2018/03/20)</h2><ul><li><a href="java10/jep286-local-variable-type-inference">286: Local-Variable Type Inference</a></li><li>296: Consolidate the JDK Forest into a Single Repository</li><li>304: Garbage-Collector Interface</li><li>307: Parallel Full GC for G1</li><li>310: Application Class-Data Sharing</li><li>312: Thread-Local Handshakes</li><li>313: Remove the Native-Header Generation Tool (javah)</li><li>314: Additional Unicode Language-Tag Extensions</li><li>316: Heap Allocation on Alternative Memory Devices</li><li>317: Experimental Java-Based JIT Compiler</li><li>319: Root Certificates</li><li>322: Time-Based Release Versioning</li></ul><h2 id="java-9-ga-2017-09-21" tabindex="-1"><a class="header-anchor" href="#java-9-ga-2017-09-21" aria-hidden="true">#</a> Java 9(GA 2017/09/21)</h2><ul><li>102: Process API Updates</li><li>110: HTTP 2 Client</li><li>143: Improve Contended Locking</li><li>158: Unified JVM Logging</li><li>165: Compiler Control</li><li>193: Variable Handles</li><li>197: Segmented Code Cache</li><li>199: Smart Java Compilation, Phase Two</li><li>200: The Modular JDK</li><li>201: Modular Source Code</li><li>211: Elide Deprecation Warnings on Import Statements</li><li>212: Resolve Lint and Doclint Warnings</li><li>213: Milling Project Coin</li><li>214: Remove GC Combinations Deprecated in JDK 8</li><li>215: Tiered Attribution for javac</li><li>216: Process Import Statements Correctly</li><li>217: Annotations Pipeline 2.0</li><li>219: Datagram Transport Layer Security (DTLS)</li><li>220: Modular Run-Time Images</li><li>221: Simplified Doclet API</li><li><a href="java9/jep222-jshell">222: jshell: The Java Shell (Read-Eval-Print Loop)</a></li><li>223: New Version-String Scheme</li><li>224: HTML5 Javadoc</li><li>225: Javadoc Search</li><li>226: UTF-8 Property Files</li><li>227: Unicode 7.0</li><li>228: Add More Diagnostic Commands</li><li>229: Create PKCS12 Keystores by Default</li><li>231: Remove Launch-Time JRE Version Selection</li><li>232: Improve Secure Application Performance</li><li>233: Generate Run-Time Compiler Tests Automatically</li><li>235: Test Class-File Attributes Generated by javac</li><li>236: Parser API for Nashorn</li><li>237: Linux/AArch64 Port</li><li>238: Multi-Release JAR Files</li><li>240: Remove the JVM TI hprof Agent</li><li>241: Remove the jhat Tool</li><li>243: Java-Level JVM Compiler Interface</li><li>244: TLS Application-Layer Protocol Negotiation Extension</li><li>245: Validate JVM Command-Line Flag Arguments</li><li>246: Leverage CPU Instructions for GHASH and RSA</li><li>247: Compile for Older Platform Versions</li><li>248: Make G1 the Default Garbage Collector</li><li>249: OCSP Stapling for TLS</li><li>250: Store Interned Strings in CDS Archives</li><li>251: Multi-Resolution Images</li><li>252: Use CLDR Locale Data by Default</li><li>253: Prepare JavaFX UI Controls &amp; CSS APIs for Modularization</li><li>254: Compact Strings</li><li>255: Merge Selected Xerces 2.11.0 Updates into JAXP</li><li>256: BeanInfo Annotations</li><li>257: Update JavaFX/Media to Newer Version of GStreamer</li><li>258: HarfBuzz Font-Layout Engine</li><li>259: Stack-Walking API</li><li>260: Encapsulate Most Internal APIs</li><li>261: Module System</li><li>262: TIFF Image I/O</li><li>263: HiDPI Graphics on Windows and Linux</li><li>264: Platform Logging API and Service</li><li>265: Marlin Graphics Renderer</li><li>266: More Concurrency Updates</li><li>267: Unicode 8.0</li><li>268: XML Catalogs</li><li><a href="Java9/jep269-convenience-factory-methods-for-collections">269: Convenience Factory Methods for Collections</a></li><li>270: Reserved Stack Areas for Critical Sections</li><li>271: Unified GC Logging</li><li>272: Platform-Specific Desktop Features</li><li>273: DRBG-Based SecureRandom Implementations</li><li>274: Enhanced Method Handles</li><li>275: Modular Java Application Packaging</li><li>276: Dynamic Linking of Language-Defined Object Models</li><li>277: Enhanced Deprecation</li><li>278: Additional Tests for Humongous Objects in G1</li><li>279: Improve Test-Failure Troubleshooting</li><li>280: Indify String Concatenation</li><li>281: HotSpot C++ Unit-Test Framework</li><li>282: jlink: The Java Linker</li><li>283: Enable GTK 3 on Linux</li><li>284: New HotSpot Build System</li><li>285: Spin-Wait Hints</li><li>287: SHA-3 Hash Algorithms</li><li>288: Disable SHA-1 Certificates</li><li>289: Deprecate the Applet API</li><li>290: Filter Incoming Serialization Data</li><li>291: Deprecate the Concurrent Mark Sweep (CMS) Garbage Collector</li><li>292: Implement Selected ECMAScript 6 Features in Nashorn</li><li>294: Linux/s390x Port</li><li>295: Ahead-of-Time Compilation</li><li>297: Unified arm32/arm64 Port</li><li>298: Remove Demos and Samples</li><li>299: Reorganize Documentation</li></ul><h2 id="java-8-ga-2014-03-18" tabindex="-1"><a class="header-anchor" href="#java-8-ga-2014-03-18" aria-hidden="true">#</a> Java 8(GA 2014/03/18)</h2>',29);function m(v,p){const l=r("ExternalLinkIcon");return n(),t("div",null,[d,i("p",null,[e("详细了解Java Enhancement Proposals（JEPs）及其最新动态， 🚀 访问官方网站："),i("a",h,[e("OpenJDK JEPs"),o(l)])]),u])}const S=a(s,[["render",m],["__file","index.html.vue"]]);export{S as default};
