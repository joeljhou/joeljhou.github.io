import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as i,f as l}from"./app-MxIHvopO.js";const d={},o=l('<h1 id="java-11-新特性-移除javaee和corba模块以及javafx" tabindex="-1"><a class="header-anchor" href="#java-11-新特性-移除javaee和corba模块以及javafx" aria-hidden="true">#</a> Java 11 新特性 ：移除JavaEE和CORBA模块以及JavaFX</h1><p>Java 11 中移除了 <code>Java EE</code> 和 <code>CORBA</code> 模块，同时 <code>JavaFX</code> 也被剥离，但仍可作为独立模块使用。</p><h2 id="java9-弃用过程" tabindex="-1"><a class="header-anchor" href="#java9-弃用过程" aria-hidden="true">#</a> Java9 弃用过程</h2><p>在 Java 9 中，<code>Java EE</code> 和 <code>CORBA</code> 模块被标记为 @Deprecated，为开发者提供了适应期。</p><h2 id="java11-彻底删除" tabindex="-1"><a class="header-anchor" href="#java11-彻底删除" aria-hidden="true">#</a> Java11 彻底删除</h2><p>Java 11 完全删除了以下九个模块：</p><ul><li>java.xml.ws（包含 JAX-WS、SAAJ 和 Web 服务元数据）</li><li>java.xml.bind（JAXB）</li><li>java.activation(JAF)</li><li>java.xml.ws.annotation（常用注解）</li><li>java.corba（CORBA）</li><li>java.transaction(JTA)</li><li>java.se.ee (以上6个模块的聚合模块)</li><li>jdk.xml.ws (JAX-WS 工具)</li><li>jdk.xml.bind (JAXB 工具)</li></ul><p>删除后的影响：</p><ul><li>源代码从 OpenJDK 存储库中删除</li><li>在 JDK 运行时映像中将不包含这些类</li><li>相关工具将不再可用: <ul><li>wsgen and wsimport (来自 jdk.xml.ws)</li><li>schemagen and xjc (来自 jdk.xml.bind)</li><li>idlj, orbd, servertool, and tnamesrv (来自 java.corba)</li></ul></li><li>JNDI CosNaming 提供者 (来自 java.corba) 将不再可用</li><li>不再有命令行标志能够启用它们，就像 JDK 9 上的 --add-modules 一样</li></ul><h2 id="javafx-移除" tabindex="-1"><a class="header-anchor" href="#javafx-移除" aria-hidden="true">#</a> JavaFX 移除</h2><p><code>JavaFX</code> 在 Java 11 中被移除，但仍可以作为独立模块使用。 开发者需要额外的配置和依赖，以在项目中继续使用 JavaFX 技术。</p>',11),c=[o];function r(v,n){return e(),i("div",null,c)}const h=a(d,[["render",r],["__file","jep320-remove-JavaEE-CORBA.html.vue"]]);export{h as default};
