import{_ as e,o as t,c as n,e as a}from"./app-BcC5mfrf.js";const i={},o=a('<h1 id="bean-定义" tabindex="-1"><a class="header-anchor" href="#bean-定义"><span>Bean 定义</span></a></h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><blockquote><p>Spring IoC 容器管理的对象称为 Bean。 由<code>org.springframework.beans.factory.config.BeanDefinition</code> 接口表示，定义了Bean的配置元数据。</p></blockquote><h2 id="beandefinition" tabindex="-1"><a class="header-anchor" href="#beandefinition"><span>BeanDefinition</span></a></h2><p><code>BeanDefinition</code> 包含以下元数据：</p><ul><li>Bean的包限定类名</li><li>Bean的行为配置元素，例如作用域、生命周期回调等</li><li>Bean的依赖关系</li><li>其他配置信息（如：管理连接池的Bean可以配置池的大小，连接数量等）</li></ul><p>该元数据转换为组成每个bean定义的一组属性。 下表介绍了这些属性：</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>Class</td><td>Bean的全限定类名</td></tr><tr><td>Name</td><td>Bean的名称</td></tr><tr><td>Scope</td><td>Bean的作用域</td></tr><tr><td>Constructor arguments</td><td>Bean的构造函数参数</td></tr><tr><td>Properties</td><td>Bean的属性</td></tr><tr><td>Autowiring mode</td><td>Bean的自动装配模式</td></tr><tr><td>Lazy initialization mode</td><td>Bean的延迟初始化模式</td></tr><tr><td>Initialization method</td><td>Bean的初始化方法</td></tr><tr><td>Destruction method</td><td>Bean的销毁方法</td></tr></tbody></table>',8),r=[o];function d(c,p){return t(),n("div",null,r)}const s=e(i,[["render",d],["__file","bean-definition.html.vue"]]),h=JSON.parse('{"path":"/spring-framework/core/bean-definition.html","title":"Bean 定义","lang":"zh-CN","frontmatter":{"title":"Bean 定义","author":"会敲代码的程序猿","isOriginal":true,"date":"2024-03-18T00:00:00.000Z","category":"Spring","tag":["Spring","Spring Framework"],"description":"Bean 定义 概述 Spring IoC 容器管理的对象称为 Bean。 由org.springframework.beans.factory.config.BeanDefinition 接口表示，定义了Bean的配置元数据。 BeanDefinition BeanDefinition 包含以下元数据： Bean的包限定类名 Bean的行为配置元素，...","head":[["meta",{"property":"og:url","content":"https://www.geekyspace.cn/spring-framework/core/bean-definition.html"}],["meta",{"property":"og:site_name","content":"极客空间"}],["meta",{"property":"og:title","content":"Bean 定义"}],["meta",{"property":"og:description","content":"Bean 定义 概述 Spring IoC 容器管理的对象称为 Bean。 由org.springframework.beans.factory.config.BeanDefinition 接口表示，定义了Bean的配置元数据。 BeanDefinition BeanDefinition 包含以下元数据： Bean的包限定类名 Bean的行为配置元素，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-21T09:08:32.000Z"}],["meta",{"property":"article:author","content":"会敲代码的程序猿"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"Spring Framework"}],["meta",{"property":"article:published_time","content":"2024-03-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-21T09:08:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Bean 定义\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-21T09:08:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"会敲代码的程序猿\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"BeanDefinition","slug":"beandefinition","link":"#beandefinition","children":[]}],"git":{"createdTime":1710844105000,"updatedTime":1711012112000,"contributors":[{"name":"zhouyu","email":"zhouyu@liquido.cn","commits":4}]},"readingTime":{"minutes":0.77,"words":232},"filePathRelative":"spring-framework/core/bean-definition.md","localizedDate":"2024年3月18日","excerpt":"\\n<h2>概述</h2>\\n<blockquote>\\n<p>Spring IoC 容器管理的对象称为 Bean。\\n由<code>org.springframework.beans.factory.config.BeanDefinition</code> 接口表示，定义了Bean的配置元数据。</p>\\n</blockquote>\\n<h2>BeanDefinition</h2>\\n<p><code>BeanDefinition</code> 包含以下元数据：</p>\\n<ul>\\n<li>Bean的包限定类名</li>\\n<li>Bean的行为配置元素，例如作用域、生命周期回调等</li>\\n<li>Bean的依赖关系</li>\\n<li>其他配置信息（如：管理连接池的Bean可以配置池的大小，连接数量等）</li>\\n</ul>","copyright":{"author":"会敲代码的程序猿"},"autoDesc":true}');export{s as comp,h as data};
